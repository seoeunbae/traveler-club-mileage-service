[INFO ] 2022-07-02 22:39:17.560 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 85784 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-02 22:39:17.584 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-02 22:39:18.909 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-02 22:39:19.096 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-02 22:39:20.362 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-02 22:39:20.382 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-02 22:39:20.384 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-02 22:39:20.384 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-02 22:39:20.545 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-02 22:39:20.545 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2885 ms
[INFO ] 2022-07-02 22:39:20.827 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-02 22:39:20.882 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-02 22:39:21.040 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-02 22:39:21.066 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1d8e9d3e
[DEBUG] 2022-07-02 22:39:21.066 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1d8e9d3e
[DEBUG] 2022-07-02 22:39:21.066 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1d8e9d3e
[DEBUG] 2022-07-02 22:39:21.067 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@54463380
[DEBUG] 2022-07-02 22:39:21.070 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@26d40c77
[DEBUG] 2022-07-02 22:39:21.071 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@14874a5d
[DEBUG] 2022-07-02 22:39:21.072 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@561d88ee
[DEBUG] 2022-07-02 22:39:21.072 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@561d88ee
[DEBUG] 2022-07-02 22:39:21.072 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@561d88ee
[DEBUG] 2022-07-02 22:39:21.073 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7bec8cb0
[DEBUG] 2022-07-02 22:39:21.074 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7bec8cb0
[DEBUG] 2022-07-02 22:39:21.074 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7bec8cb0
[DEBUG] 2022-07-02 22:39:21.076 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@64fdcf99
[DEBUG] 2022-07-02 22:39:21.076 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@64fdcf99
[DEBUG] 2022-07-02 22:39:21.076 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64fdcf99
[DEBUG] 2022-07-02 22:39:21.077 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@786a3477
[DEBUG] 2022-07-02 22:39:21.077 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@786a3477
[DEBUG] 2022-07-02 22:39:21.077 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@786a3477
[DEBUG] 2022-07-02 22:39:21.078 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@667797f
[DEBUG] 2022-07-02 22:39:21.078 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@667797f
[DEBUG] 2022-07-02 22:39:21.079 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@667797f
[DEBUG] 2022-07-02 22:39:21.080 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6658f08a
[DEBUG] 2022-07-02 22:39:21.080 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6658f08a
[DEBUG] 2022-07-02 22:39:21.081 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6658f08a
[DEBUG] 2022-07-02 22:39:21.081 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44fb6ebd
[DEBUG] 2022-07-02 22:39:21.081 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@44fb6ebd
[DEBUG] 2022-07-02 22:39:21.081 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@44fb6ebd
[DEBUG] 2022-07-02 22:39:21.082 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@738a815c
[DEBUG] 2022-07-02 22:39:21.083 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@738a815c
[DEBUG] 2022-07-02 22:39:21.085 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@9d99851
[DEBUG] 2022-07-02 22:39:21.085 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@9d99851
[DEBUG] 2022-07-02 22:39:21.086 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@376b5cb2
[DEBUG] 2022-07-02 22:39:21.086 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@376b5cb2
[DEBUG] 2022-07-02 22:39:21.087 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@78318ac2
[DEBUG] 2022-07-02 22:39:21.087 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7608a838
[DEBUG] 2022-07-02 22:39:21.088 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2cd3fc29
[DEBUG] 2022-07-02 22:39:21.088 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2cd3fc29
[DEBUG] 2022-07-02 22:39:21.090 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ff498b0
[DEBUG] 2022-07-02 22:39:21.090 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ff498b0
[DEBUG] 2022-07-02 22:39:21.091 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5822ecda
[DEBUG] 2022-07-02 22:39:21.091 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5822ecda
[DEBUG] 2022-07-02 22:39:21.092 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@98637a2
[DEBUG] 2022-07-02 22:39:21.092 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@98637a2
[DEBUG] 2022-07-02 22:39:21.093 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6f867b0c
[DEBUG] 2022-07-02 22:39:21.094 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6f867b0c
[DEBUG] 2022-07-02 22:39:21.096 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@605c7a9e
[DEBUG] 2022-07-02 22:39:21.097 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@605c7a9e
[DEBUG] 2022-07-02 22:39:21.098 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@376af784
[DEBUG] 2022-07-02 22:39:21.098 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@376af784
[DEBUG] 2022-07-02 22:39:21.098 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@506aa618
[DEBUG] 2022-07-02 22:39:21.098 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@506aa618
[DEBUG] 2022-07-02 22:39:21.101 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15c16f19
[DEBUG] 2022-07-02 22:39:21.101 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15c16f19
[DEBUG] 2022-07-02 22:39:21.102 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3a16984c
[DEBUG] 2022-07-02 22:39:21.102 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a16984c
[DEBUG] 2022-07-02 22:39:21.103 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@645dc557
[DEBUG] 2022-07-02 22:39:21.103 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@645dc557
[DEBUG] 2022-07-02 22:39:21.104 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@340c5fb6
[DEBUG] 2022-07-02 22:39:21.104 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@340c5fb6
[DEBUG] 2022-07-02 22:39:21.106 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@340c5fb6
[DEBUG] 2022-07-02 22:39:21.110 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@c262f2f
[DEBUG] 2022-07-02 22:39:21.111 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@56835f2f
[DEBUG] 2022-07-02 22:39:21.111 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@56835f2f
[DEBUG] 2022-07-02 22:39:21.111 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@56835f2f
[DEBUG] 2022-07-02 22:39:21.111 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15e08615
[DEBUG] 2022-07-02 22:39:21.112 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@bd4ee01
[DEBUG] 2022-07-02 22:39:21.113 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5c25d0d1
[DEBUG] 2022-07-02 22:39:21.115 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5c25d0d1
[DEBUG] 2022-07-02 22:39:21.116 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6e5f5478
[DEBUG] 2022-07-02 22:39:21.117 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e5f5478
[DEBUG] 2022-07-02 22:39:21.118 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2b7774d5
[DEBUG] 2022-07-02 22:39:21.120 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2b7774d5
[DEBUG] 2022-07-02 22:39:21.121 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@21090c88
[DEBUG] 2022-07-02 22:39:21.122 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@21090c88
[DEBUG] 2022-07-02 22:39:21.122 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3ed7dd70
[DEBUG] 2022-07-02 22:39:21.124 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3ed7dd70
[DEBUG] 2022-07-02 22:39:21.125 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@59b447a4
[DEBUG] 2022-07-02 22:39:21.126 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@30517a57
[DEBUG] 2022-07-02 22:39:21.126 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@30517a57
[DEBUG] 2022-07-02 22:39:21.126 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@30517a57
[DEBUG] 2022-07-02 22:39:21.127 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1ccdc7aa
[DEBUG] 2022-07-02 22:39:21.127 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1ccdc7aa
[DEBUG] 2022-07-02 22:39:21.127 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1ccdc7aa
[DEBUG] 2022-07-02 22:39:21.128 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@fcf9525
[DEBUG] 2022-07-02 22:39:21.129 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7e0986c9
[DEBUG] 2022-07-02 22:39:21.129 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@752973de
[DEBUG] 2022-07-02 22:39:21.130 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@752973de
[DEBUG] 2022-07-02 22:39:21.130 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@752973de
[DEBUG] 2022-07-02 22:39:21.130 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6903ed0e
[DEBUG] 2022-07-02 22:39:21.130 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6903ed0e
[DEBUG] 2022-07-02 22:39:21.130 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6903ed0e
[DEBUG] 2022-07-02 22:39:21.133 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3212d853
[DEBUG] 2022-07-02 22:39:21.133 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@49631cfb
[DEBUG] 2022-07-02 22:39:21.134 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2a7ebe07
[DEBUG] 2022-07-02 22:39:21.134 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2a7ebe07
[DEBUG] 2022-07-02 22:39:21.135 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3d1c52f5
[DEBUG] 2022-07-02 22:39:21.136 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@33a47707
[DEBUG] 2022-07-02 22:39:21.136 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@33a47707
[DEBUG] 2022-07-02 22:39:21.137 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@e972ee1
[DEBUG] 2022-07-02 22:39:21.138 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@e972ee1
[DEBUG] 2022-07-02 22:39:21.139 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1bb96449
[DEBUG] 2022-07-02 22:39:21.139 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7f8c48f3
[DEBUG] 2022-07-02 22:39:21.141 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1b791dca
[DEBUG] 2022-07-02 22:39:21.146 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@36d697ab
[DEBUG] 2022-07-02 22:39:21.147 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@36d697ab
[DEBUG] 2022-07-02 22:39:21.147 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a899811
[DEBUG] 2022-07-02 22:39:21.147 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6a51ae7c
[DEBUG] 2022-07-02 22:39:21.149 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-02 22:39:21.149 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-02 22:39:21.149 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-02 22:39:21.150 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-02 22:39:21.150 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-02 22:39:21.150 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@49e479da
[INFO ] 2022-07-02 22:39:21.205 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-02 22:39:21.304 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-02 22:39:21.357 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-02 22:39:21.377 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-02 22:39:21.459 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@c94bd18 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-02 22:39:21.514 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@580ffea] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@191e654]
[DEBUG] 2022-07-02 22:39:21.819 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-02 22:39:21.820 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-02 22:39:21.821 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-02 22:39:21.821 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-02 22:39:21.822 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-02 22:39:21.823 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@580ffea] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78fb72cb]
[INFO ] 2022-07-02 22:39:22.388 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-02 22:39:22.399 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@78fb72cb] for TypeConfiguration
[INFO ] 2022-07-02 22:39:22.401 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-02 22:39:23.708 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-02 22:39:24.217 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-02 22:39:24.239 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-02 22:39:24.259 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 7.371 seconds (JVM running for 8.832)
[INFO ] 2022-07-02 22:39:26.744 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-02 22:39:26.746 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-02 22:39:26.748 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 2 ms
[INFO ] 2022-07-02 22:39:26.901 [http-nio-8080-exec-1] EventService - review ID : 240a0658-dc5f-4878-9381-ebb7b2667772 , action : ADD , user ID : 3ede0ef2-92b7-4817-a5f3-0c575361f745
[TRACE] 2022-07-02 22:39:27.046 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.052 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.059 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_4_] : [TIMESTAMP]) - [2022-07-02 21:10:01.0]
[TRACE] 2022-07-02 22:39:27.062 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_4_] : [TIMESTAMP]) - [2022-07-02 21:20:39.56]
[TRACE] 2022-07-02 22:39:27.064 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_4_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:27.064 [http-nio-8080-exec-1] BasicExtractor - extracted value ([mileage5_4_] : [INTEGER]) - [24]
[TRACE] 2022-07-02 22:39:27.064 [http-nio-8080-exec-1] BasicExtractor - extracted value ([nickname6_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:27.064 [http-nio-8080-exec-1] BasicExtractor - extracted value ([password7_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:27.064 [http-nio-8080-exec-1] BasicExtractor - extracted value ([phone_nu8_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:27.065 [http-nio-8080-exec-1] BasicExtractor - extracted value ([role9_4_] : [INTEGER]) - [USER_ROLE]
[TRACE] 2022-07-02 22:39:27.065 [http-nio-8080-exec-1] BasicExtractor - extracted value ([usernam10_4_] : [VARCHAR]) - [u]
[TRACE] 2022-07-02 22:39:27.116 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [9e350d33-1a02-4161-80e1-215ea38b28af]
[TRACE] 2022-07-02 22:39:27.158 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.160 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.170 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:27.171 [http-nio-8080-exec-1] BasicExtractor - extracted value ([place_id1_2_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:27.171 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_2_] : [TIMESTAMP]) - [2022-07-02 21:12:59.0]
[TRACE] 2022-07-02 22:39:27.172 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_2_] : [TIMESTAMP]) - [2022-07-02 21:13:00.0]
[TRACE] 2022-07-02 22:39:27.172 [http-nio-8080-exec-1] BasicExtractor - extracted value ([descript4_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:27.172 [http-nio-8080-exec-1] BasicExtractor - extracted value ([location5_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:27.173 [http-nio-8080-exec-1] BasicExtractor - extracted value ([name6_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:27.173 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type7_2_] : [INTEGER]) - [FOOD]
[TRACE] 2022-07-02 22:39:27.258 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:27.264 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i1_3_] : [VARCHAR]) - [ad72d2c5-9ab4-463f-81db-70b9b185173d]
[TRACE] 2022-07-02 22:39:27.265 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:27.265 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:27.265 [http-nio-8080-exec-1] BasicExtractor - extracted value ([content4_3_] : [VARCHAR]) - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:27.266 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl5_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:27.266 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_first6_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:27.270 [http-nio-8080-exec-1] BasicExtractor - extracted value ([place_id7_3_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:27.272 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id8_3_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.280 [http-nio-8080-exec-1] CollectionType - Created collection wrapper: [com.triple.travelerclubmileage.model.review.entity.Review.photos#ad72d2c5-9ab4-463f-81db-70b9b185173d]
[INFO ] 2022-07-02 22:39:27.295 [http-nio-8080-exec-1] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:27.291943
[TRACE] 2022-07-02 22:39:27.312 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[INFO ] 2022-07-02 22:39:27.318 [http-nio-8080-exec-1] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:27.317880
[TRACE] 2022-07-02 22:39:27.333 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:27.347 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:27.349 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.235]
[TRACE] 2022-07-02 22:39:27.349 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 21:20:39.563]
[TRACE] 2022-07-02 22:39:27.349 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:27.349 [http-nio-8080-exec-1] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:27.349 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [141a2709-e653-4b2a-9380-d5565030b9fb]
[TRACE] 2022-07-02 22:39:27.351 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:27.362 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[TRACE] 2022-07-02 22:39:27.364 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.242]
[TRACE] 2022-07-02 22:39:27.365 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 21:20:39.564]
[TRACE] 2022-07-02 22:39:27.366 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:27.366 [http-nio-8080-exec-1] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:27.366 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [141a2709-e653-4b2a-9380-d5565030b9fb]
[TRACE] 2022-07-02 22:39:27.366 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:27.379 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:27.37]
[TRACE] 2022-07-02 22:39:27.380 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:27.37]
[TRACE] 2022-07-02 22:39:27.380 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:27.380 [http-nio-8080-exec-1] BasicBinder - binding parameter [4] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[TRACE] 2022-07-02 22:39:27.381 [http-nio-8080-exec-1] BasicBinder - binding parameter [5] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:27.381 [http-nio-8080-exec-1] BasicBinder - binding parameter [6] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:27.381 [http-nio-8080-exec-1] BasicBinder - binding parameter [7] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.381 [http-nio-8080-exec-1] BasicBinder - binding parameter [8] as [VARCHAR] - [9e350d33-1a02-4161-80e1-215ea38b28af]
[TRACE] 2022-07-02 22:39:27.387 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:27.386]
[TRACE] 2022-07-02 22:39:27.392 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:27.386]
[TRACE] 2022-07-02 22:39:27.392 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:27.393 [http-nio-8080-exec-1] BasicBinder - binding parameter [4] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:27.393 [http-nio-8080-exec-1] BasicBinder - binding parameter [5] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:27.393 [http-nio-8080-exec-1] BasicBinder - binding parameter [6] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.393 [http-nio-8080-exec-1] BasicBinder - binding parameter [7] as [VARCHAR] - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:27.395 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:27.394]
[TRACE] 2022-07-02 22:39:27.400 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [INTEGER] - [26]
[TRACE] 2022-07-02 22:39:27.401 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:27.406 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:27.405]
[TRACE] 2022-07-02 22:39:27.406 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [VARCHAR] - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:27.406 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:27.410 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:27.41]
[TRACE] 2022-07-02 22:39:27.410 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [VARCHAR] - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:27.410 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[INFO ] 2022-07-02 22:39:30.234 [http-nio-8080-exec-6] EventService - review ID : 240a0658-dc5f-4878-9381-ebb7b2667772 , action : ADD , user ID : 3ede0ef2-92b7-4817-a5f3-0c575361f745
[TRACE] 2022-07-02 22:39:30.251 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.253 [http-nio-8080-exec-6] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.254 [http-nio-8080-exec-6] BasicExtractor - extracted value ([created_2_4_] : [TIMESTAMP]) - [2022-07-02 21:10:01.0]
[TRACE] 2022-07-02 22:39:30.254 [http-nio-8080-exec-6] BasicExtractor - extracted value ([updated_3_4_] : [TIMESTAMP]) - [2022-07-02 22:39:27.394]
[TRACE] 2022-07-02 22:39:30.254 [http-nio-8080-exec-6] BasicExtractor - extracted value ([is_enabl4_4_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:30.254 [http-nio-8080-exec-6] BasicExtractor - extracted value ([mileage5_4_] : [INTEGER]) - [26]
[TRACE] 2022-07-02 22:39:30.254 [http-nio-8080-exec-6] BasicExtractor - extracted value ([nickname6_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:30.256 [http-nio-8080-exec-6] BasicExtractor - extracted value ([password7_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:30.257 [http-nio-8080-exec-6] BasicExtractor - extracted value ([phone_nu8_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:30.258 [http-nio-8080-exec-6] BasicExtractor - extracted value ([role9_4_] : [INTEGER]) - [USER_ROLE]
[TRACE] 2022-07-02 22:39:30.258 [http-nio-8080-exec-6] BasicExtractor - extracted value ([usernam10_4_] : [VARCHAR]) - [u]
[TRACE] 2022-07-02 22:39:30.260 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [2d174625-a90b-46d2-a37b-0771b2aa4e77]
[TRACE] 2022-07-02 22:39:30.264 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.264 [http-nio-8080-exec-6] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.266 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:30.270 [http-nio-8080-exec-6] BasicExtractor - extracted value ([place_id1_2_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:30.270 [http-nio-8080-exec-6] BasicExtractor - extracted value ([created_2_2_] : [TIMESTAMP]) - [2022-07-02 21:12:59.0]
[TRACE] 2022-07-02 22:39:30.270 [http-nio-8080-exec-6] BasicExtractor - extracted value ([updated_3_2_] : [TIMESTAMP]) - [2022-07-02 21:13:00.0]
[TRACE] 2022-07-02 22:39:30.271 [http-nio-8080-exec-6] BasicExtractor - extracted value ([descript4_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:30.271 [http-nio-8080-exec-6] BasicExtractor - extracted value ([location5_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:30.271 [http-nio-8080-exec-6] BasicExtractor - extracted value ([name6_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:30.271 [http-nio-8080-exec-6] BasicExtractor - extracted value ([type7_2_] : [INTEGER]) - [FOOD]
[TRACE] 2022-07-02 22:39:30.277 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:30.279 [http-nio-8080-exec-6] BasicExtractor - extracted value ([review_i1_3_] : [VARCHAR]) - [ad72d2c5-9ab4-463f-81db-70b9b185173d]
[TRACE] 2022-07-02 22:39:30.282 [http-nio-8080-exec-6] BasicExtractor - extracted value ([created_2_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:30.283 [http-nio-8080-exec-6] BasicExtractor - extracted value ([updated_3_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:30.283 [http-nio-8080-exec-6] BasicExtractor - extracted value ([content4_3_] : [VARCHAR]) - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:30.283 [http-nio-8080-exec-6] BasicExtractor - extracted value ([is_enabl5_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:30.283 [http-nio-8080-exec-6] BasicExtractor - extracted value ([is_first6_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:30.283 [http-nio-8080-exec-6] BasicExtractor - extracted value ([place_id7_3_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:30.284 [http-nio-8080-exec-6] BasicExtractor - extracted value ([user_id8_3_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.286 [http-nio-8080-exec-6] CollectionType - Created collection wrapper: [com.triple.travelerclubmileage.model.review.entity.Review.photos#ad72d2c5-9ab4-463f-81db-70b9b185173d]
[INFO ] 2022-07-02 22:39:30.288 [http-nio-8080-exec-6] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:30.287847
[TRACE] 2022-07-02 22:39:30.293 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[INFO ] 2022-07-02 22:39:30.295 [http-nio-8080-exec-6] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:30.295490
[TRACE] 2022-07-02 22:39:30.296 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:30.298 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:30.299 [http-nio-8080-exec-6] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.235]
[TRACE] 2022-07-02 22:39:30.301 [http-nio-8080-exec-6] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:27.405]
[TRACE] 2022-07-02 22:39:30.301 [http-nio-8080-exec-6] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:30.301 [http-nio-8080-exec-6] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:30.301 [http-nio-8080-exec-6] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:30.301 [http-nio-8080-exec-6] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:30.303 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[TRACE] 2022-07-02 22:39:30.305 [http-nio-8080-exec-6] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.242]
[TRACE] 2022-07-02 22:39:30.305 [http-nio-8080-exec-6] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:27.41]
[TRACE] 2022-07-02 22:39:30.306 [http-nio-8080-exec-6] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:30.306 [http-nio-8080-exec-6] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:30.306 [http-nio-8080-exec-6] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [463d4b70-acdd-47d2-b227-b2cdf5b40494]
[TRACE] 2022-07-02 22:39:30.306 [http-nio-8080-exec-6] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:30.310 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:30.309]
[TRACE] 2022-07-02 22:39:30.312 [http-nio-8080-exec-6] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:30.309]
[TRACE] 2022-07-02 22:39:30.312 [http-nio-8080-exec-6] BasicBinder - binding parameter [3] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:30.312 [http-nio-8080-exec-6] BasicBinder - binding parameter [4] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[TRACE] 2022-07-02 22:39:30.315 [http-nio-8080-exec-6] BasicBinder - binding parameter [5] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:30.316 [http-nio-8080-exec-6] BasicBinder - binding parameter [6] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:30.316 [http-nio-8080-exec-6] BasicBinder - binding parameter [7] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.316 [http-nio-8080-exec-6] BasicBinder - binding parameter [8] as [VARCHAR] - [2d174625-a90b-46d2-a37b-0771b2aa4e77]
[TRACE] 2022-07-02 22:39:30.317 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:30.317]
[TRACE] 2022-07-02 22:39:30.317 [http-nio-8080-exec-6] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:30.317]
[TRACE] 2022-07-02 22:39:30.317 [http-nio-8080-exec-6] BasicBinder - binding parameter [3] as [VARCHAR] - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:30.317 [http-nio-8080-exec-6] BasicBinder - binding parameter [4] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:30.318 [http-nio-8080-exec-6] BasicBinder - binding parameter [5] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:30.318 [http-nio-8080-exec-6] BasicBinder - binding parameter [6] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.318 [http-nio-8080-exec-6] BasicBinder - binding parameter [7] as [VARCHAR] - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:30.320 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:30.319]
[TRACE] 2022-07-02 22:39:30.321 [http-nio-8080-exec-6] BasicBinder - binding parameter [2] as [INTEGER] - [28]
[TRACE] 2022-07-02 22:39:30.321 [http-nio-8080-exec-6] BasicBinder - binding parameter [3] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:30.321 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:30.321]
[TRACE] 2022-07-02 22:39:30.321 [http-nio-8080-exec-6] BasicBinder - binding parameter [2] as [VARCHAR] - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:30.322 [http-nio-8080-exec-6] BasicBinder - binding parameter [3] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:30.327 [http-nio-8080-exec-6] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:30.326]
[TRACE] 2022-07-02 22:39:30.327 [http-nio-8080-exec-6] BasicBinder - binding parameter [2] as [VARCHAR] - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:30.327 [http-nio-8080-exec-6] BasicBinder - binding parameter [3] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[INFO ] 2022-07-02 22:39:31.444 [http-nio-8080-exec-7] EventService - review ID : 240a0658-dc5f-4878-9381-ebb7b2667772 , action : ADD , user ID : 3ede0ef2-92b7-4817-a5f3-0c575361f745
[TRACE] 2022-07-02 22:39:31.454 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.458 [http-nio-8080-exec-7] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.462 [http-nio-8080-exec-7] BasicExtractor - extracted value ([created_2_4_] : [TIMESTAMP]) - [2022-07-02 21:10:01.0]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([updated_3_4_] : [TIMESTAMP]) - [2022-07-02 22:39:30.319]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([is_enabl4_4_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([mileage5_4_] : [INTEGER]) - [28]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([nickname6_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([password7_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([phone_nu8_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 22:39:31.464 [http-nio-8080-exec-7] BasicExtractor - extracted value ([role9_4_] : [INTEGER]) - [USER_ROLE]
[TRACE] 2022-07-02 22:39:31.466 [http-nio-8080-exec-7] BasicExtractor - extracted value ([usernam10_4_] : [VARCHAR]) - [u]
[TRACE] 2022-07-02 22:39:31.468 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [b9f2d970-288a-4a91-a49a-3719a4386433]
[TRACE] 2022-07-02 22:39:31.472 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.475 [http-nio-8080-exec-7] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.476 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:31.476 [http-nio-8080-exec-7] BasicExtractor - extracted value ([place_id1_2_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:31.476 [http-nio-8080-exec-7] BasicExtractor - extracted value ([created_2_2_] : [TIMESTAMP]) - [2022-07-02 21:12:59.0]
[TRACE] 2022-07-02 22:39:31.477 [http-nio-8080-exec-7] BasicExtractor - extracted value ([updated_3_2_] : [TIMESTAMP]) - [2022-07-02 21:13:00.0]
[TRACE] 2022-07-02 22:39:31.478 [http-nio-8080-exec-7] BasicExtractor - extracted value ([descript4_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:31.480 [http-nio-8080-exec-7] BasicExtractor - extracted value ([location5_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:31.480 [http-nio-8080-exec-7] BasicExtractor - extracted value ([name6_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 22:39:31.480 [http-nio-8080-exec-7] BasicExtractor - extracted value ([type7_2_] : [INTEGER]) - [FOOD]
[TRACE] 2022-07-02 22:39:31.482 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:31.484 [http-nio-8080-exec-7] BasicExtractor - extracted value ([review_i1_3_] : [VARCHAR]) - [ad72d2c5-9ab4-463f-81db-70b9b185173d]
[TRACE] 2022-07-02 22:39:31.485 [http-nio-8080-exec-7] BasicExtractor - extracted value ([created_2_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:31.485 [http-nio-8080-exec-7] BasicExtractor - extracted value ([updated_3_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 22:39:31.487 [http-nio-8080-exec-7] BasicExtractor - extracted value ([content4_3_] : [VARCHAR]) - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:31.487 [http-nio-8080-exec-7] BasicExtractor - extracted value ([is_enabl5_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:31.487 [http-nio-8080-exec-7] BasicExtractor - extracted value ([is_first6_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:31.487 [http-nio-8080-exec-7] BasicExtractor - extracted value ([place_id7_3_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:31.488 [http-nio-8080-exec-7] BasicExtractor - extracted value ([user_id8_3_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.488 [http-nio-8080-exec-7] CollectionType - Created collection wrapper: [com.triple.travelerclubmileage.model.review.entity.Review.photos#ad72d2c5-9ab4-463f-81db-70b9b185173d]
[INFO ] 2022-07-02 22:39:31.488 [http-nio-8080-exec-7] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:31.488813
[TRACE] 2022-07-02 22:39:31.491 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[INFO ] 2022-07-02 22:39:31.492 [http-nio-8080-exec-7] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T22:39:31.492607
[TRACE] 2022-07-02 22:39:31.493 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 22:39:31.495 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:31.496 [http-nio-8080-exec-7] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.235]
[TRACE] 2022-07-02 22:39:31.496 [http-nio-8080-exec-7] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:30.321]
[TRACE] 2022-07-02 22:39:31.496 [http-nio-8080-exec-7] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:31.497 [http-nio-8080-exec-7] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:31.498 [http-nio-8080-exec-7] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:31.498 [http-nio-8080-exec-7] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:31.499 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[TRACE] 2022-07-02 22:39:31.504 [http-nio-8080-exec-7] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.242]
[TRACE] 2022-07-02 22:39:31.504 [http-nio-8080-exec-7] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:30.326]
[TRACE] 2022-07-02 22:39:31.505 [http-nio-8080-exec-7] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 22:39:31.505 [http-nio-8080-exec-7] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 22:39:31.507 [http-nio-8080-exec-7] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [ad4aa8c0-6ec1-4f77-a7c4-ad66916725d1]
[TRACE] 2022-07-02 22:39:31.507 [http-nio-8080-exec-7] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:31.509]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:31.509]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [3] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [4] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [5] as [INTEGER] - [0]
[TRACE] 2022-07-02 22:39:31.510 [http-nio-8080-exec-7] BasicBinder - binding parameter [6] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:31.511 [http-nio-8080-exec-7] BasicBinder - binding parameter [7] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.511 [http-nio-8080-exec-7] BasicBinder - binding parameter [8] as [VARCHAR] - [b9f2d970-288a-4a91-a49a-3719a4386433]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:31.512]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 22:39:31.512]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [3] as [VARCHAR] - [ddvdcdcsvd]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [4] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [5] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 22:39:31.512 [http-nio-8080-exec-7] BasicBinder - binding parameter [6] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.513 [http-nio-8080-exec-7] BasicBinder - binding parameter [7] as [VARCHAR] - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 22:39:31.517 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:31.516]
[TRACE] 2022-07-02 22:39:31.517 [http-nio-8080-exec-7] BasicBinder - binding parameter [2] as [INTEGER] - [30]
[TRACE] 2022-07-02 22:39:31.517 [http-nio-8080-exec-7] BasicBinder - binding parameter [3] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 22:39:31.517 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:31.517]
[TRACE] 2022-07-02 22:39:31.518 [http-nio-8080-exec-7] BasicBinder - binding parameter [2] as [VARCHAR] - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 22:39:31.518 [http-nio-8080-exec-7] BasicBinder - binding parameter [3] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 22:39:31.519 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 22:39:31.519]
[TRACE] 2022-07-02 22:39:31.520 [http-nio-8080-exec-7] BasicBinder - binding parameter [2] as [VARCHAR] - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 22:39:31.520 [http-nio-8080-exec-7] BasicBinder - binding parameter [3] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[WARN ] 2022-07-02 23:01:15.002 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=6m23s194ms).
[WARN ] 2022-07-02 23:17:58.637 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m13s622ms).
[WARN ] 2022-07-02 23:33:07.675 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m8s500ms).
[WARN ] 2022-07-02 23:49:11.657 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m33s972ms).
[WARN ] 2022-07-02 23:57:30.862 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m49s222ms).
[INFO ] 2022-07-02 23:59:13.844 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-02 23:59:13.846 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@78fb72cb] for TypeConfiguration
[DEBUG] 2022-07-02 23:59:13.846 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@68aa4ea1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@78fb72cb]
[INFO ] 2022-07-02 23:59:13.852 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-02 23:59:13.867 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-02 23:59:19.339 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 86710 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-02 23:59:19.357 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-02 23:59:20.555 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-02 23:59:20.745 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-02 23:59:21.729 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-02 23:59:21.747 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-02 23:59:21.748 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-02 23:59:21.749 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-02 23:59:21.891 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-02 23:59:21.892 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2456 ms
[INFO ] 2022-07-02 23:59:22.126 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-02 23:59:22.176 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-02 23:59:22.367 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-02 23:59:22.394 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-02 23:59:22.394 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-02 23:59:22.394 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-02 23:59:22.395 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46d1b59
[DEBUG] 2022-07-02 23:59:22.395 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6481dce5
[DEBUG] 2022-07-02 23:59:22.397 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@23c7cb18
[DEBUG] 2022-07-02 23:59:22.397 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-02 23:59:22.401 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-02 23:59:22.403 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-02 23:59:22.403 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-02 23:59:22.404 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-02 23:59:22.404 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-02 23:59:22.406 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-02 23:59:22.406 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-02 23:59:22.406 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-02 23:59:22.409 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-02 23:59:22.409 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-02 23:59:22.409 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-02 23:59:22.410 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-02 23:59:22.410 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-02 23:59:22.411 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-02 23:59:22.412 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-02 23:59:22.412 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-02 23:59:22.413 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-02 23:59:22.414 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-02 23:59:22.414 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-02 23:59:22.414 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-02 23:59:22.415 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-02 23:59:22.415 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-02 23:59:22.416 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ae3235e
[DEBUG] 2022-07-02 23:59:22.417 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ae3235e
[DEBUG] 2022-07-02 23:59:22.419 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-02 23:59:22.419 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-02 23:59:22.420 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29b5533
[DEBUG] 2022-07-02 23:59:22.420 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@794c5f5e
[DEBUG] 2022-07-02 23:59:22.421 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-02 23:59:22.421 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-02 23:59:22.422 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4300e240
[DEBUG] 2022-07-02 23:59:22.423 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4300e240
[DEBUG] 2022-07-02 23:59:22.425 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-02 23:59:22.426 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-02 23:59:22.427 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-02 23:59:22.427 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-02 23:59:22.427 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-02 23:59:22.428 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-02 23:59:22.428 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d16209e
[DEBUG] 2022-07-02 23:59:22.429 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d16209e
[DEBUG] 2022-07-02 23:59:22.432 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-02 23:59:22.433 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-02 23:59:22.434 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-02 23:59:22.435 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-02 23:59:22.436 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be6d228
[DEBUG] 2022-07-02 23:59:22.436 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be6d228
[DEBUG] 2022-07-02 23:59:22.437 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3a3ad8e7
[DEBUG] 2022-07-02 23:59:22.438 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a3ad8e7
[DEBUG] 2022-07-02 23:59:22.440 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-02 23:59:22.440 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-02 23:59:22.441 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-02 23:59:22.441 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-02 23:59:22.441 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-02 23:59:22.443 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11148dc2
[DEBUG] 2022-07-02 23:59:22.448 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-02 23:59:22.450 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-02 23:59:22.451 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-02 23:59:22.452 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67eeb310
[DEBUG] 2022-07-02 23:59:22.453 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@456aa471
[DEBUG] 2022-07-02 23:59:22.454 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-02 23:59:22.454 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-02 23:59:22.456 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3ef2b8e5
[DEBUG] 2022-07-02 23:59:22.457 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ef2b8e5
[DEBUG] 2022-07-02 23:59:22.460 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-02 23:59:22.461 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-02 23:59:22.461 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-02 23:59:22.462 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-02 23:59:22.462 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-02 23:59:22.463 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-02 23:59:22.464 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@579846cc
[DEBUG] 2022-07-02 23:59:22.464 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-02 23:59:22.467 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-02 23:59:22.468 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-02 23:59:22.468 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-02 23:59:22.469 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-02 23:59:22.469 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-02 23:59:22.469 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4243341e
[DEBUG] 2022-07-02 23:59:22.470 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48cf8414
[DEBUG] 2022-07-02 23:59:22.470 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-02 23:59:22.477 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-02 23:59:22.477 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-02 23:59:22.478 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-02 23:59:22.478 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-02 23:59:22.478 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-02 23:59:22.478 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@77c23d90
[DEBUG] 2022-07-02 23:59:22.479 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6133e20b
[DEBUG] 2022-07-02 23:59:22.480 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5eeee124
[DEBUG] 2022-07-02 23:59:22.482 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5eeee124
[DEBUG] 2022-07-02 23:59:22.484 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fc1a8f6
[DEBUG] 2022-07-02 23:59:22.486 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-02 23:59:22.486 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-02 23:59:22.488 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-02 23:59:22.488 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-02 23:59:22.488 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d28c214
[DEBUG] 2022-07-02 23:59:22.489 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cceb281
[DEBUG] 2022-07-02 23:59:22.495 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@34f23816
[DEBUG] 2022-07-02 23:59:22.498 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-02 23:59:22.499 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-02 23:59:22.500 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-02 23:59:22.500 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-02 23:59:22.500 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-02 23:59:22.500 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-02 23:59:22.501 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-02 23:59:22.502 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d24cdd9
[DEBUG] 2022-07-02 23:59:22.503 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30dd00b6
[DEBUG] 2022-07-02 23:59:22.504 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4656fcc5
[INFO ] 2022-07-02 23:59:22.585 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-02 23:59:22.771 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-02 23:59:22.800 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-02 23:59:22.810 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-02 23:59:22.852 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7cdfa824 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-02 23:59:22.954 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a6556b6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@63bca84d]
[DEBUG] 2022-07-02 23:59:23.448 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-02 23:59:23.449 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-02 23:59:23.450 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-02 23:59:23.450 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-02 23:59:23.450 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-02 23:59:23.451 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a6556b6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78fb72cb]
[INFO ] 2022-07-02 23:59:24.025 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-02 23:59:24.034 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@78fb72cb] for TypeConfiguration
[INFO ] 2022-07-02 23:59:24.036 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-02 23:59:25.181 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-02 23:59:25.625 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-02 23:59:25.647 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-02 23:59:25.662 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 7.013 seconds (JVM running for 9.036)
[INFO ] 2022-07-02 23:59:30.403 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-02 23:59:30.405 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-02 23:59:30.409 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 4 ms
[INFO ] 2022-07-02 23:59:30.600 [http-nio-8080-exec-1] EventService - review ID : 240a0658-dc5f-4878-9381-ebb7b2667772 , action : ADD , user ID : 3ede0ef2-92b7-4817-a5f3-0c575361f745
[TRACE] 2022-07-02 23:59:30.803 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:30.810 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:30.815 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_4_] : [TIMESTAMP]) - [2022-07-02 21:10:01.0]
[TRACE] 2022-07-02 23:59:30.818 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_4_] : [TIMESTAMP]) - [2022-07-02 22:39:31.516]
[TRACE] 2022-07-02 23:59:30.819 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_4_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([mileage5_4_] : [INTEGER]) - [30]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([nickname6_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([password7_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([phone_nu8_4_] : [VARCHAR]) - [n]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([role9_4_] : [INTEGER]) - [USER_ROLE]
[TRACE] 2022-07-02 23:59:30.820 [http-nio-8080-exec-1] BasicExtractor - extracted value ([usernam10_4_] : [VARCHAR]) - [u]
[TRACE] 2022-07-02 23:59:30.877 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [67e82eb0-2544-403b-bd3f-b9ffaa41073d]
[TRACE] 2022-07-02 23:59:30.916 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:30.917 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id1_4_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:30.930 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 23:59:30.933 [http-nio-8080-exec-1] BasicExtractor - extracted value ([place_id1_2_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 23:59:30.933 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_2_] : [TIMESTAMP]) - [2022-07-02 21:12:59.0]
[TRACE] 2022-07-02 23:59:30.933 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_2_] : [TIMESTAMP]) - [2022-07-02 21:13:00.0]
[TRACE] 2022-07-02 23:59:30.933 [http-nio-8080-exec-1] BasicExtractor - extracted value ([descript4_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 23:59:30.935 [http-nio-8080-exec-1] BasicExtractor - extracted value ([location5_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 23:59:30.935 [http-nio-8080-exec-1] BasicExtractor - extracted value ([name6_2_] : [VARCHAR]) - [d]
[TRACE] 2022-07-02 23:59:30.935 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type7_2_] : [INTEGER]) - [FOOD]
[TRACE] 2022-07-02 23:59:31.032 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 23:59:31.038 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i1_3_] : [VARCHAR]) - [ad72d2c5-9ab4-463f-81db-70b9b185173d]
[TRACE] 2022-07-02 23:59:31.039 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 23:59:31.039 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_3_] : [TIMESTAMP]) - [2022-07-02 21:18:23.227]
[TRACE] 2022-07-02 23:59:31.039 [http-nio-8080-exec-1] BasicExtractor - extracted value ([content4_3_] : [VARCHAR]) - [ddvdcdcsvd]
[TRACE] 2022-07-02 23:59:31.041 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl5_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 23:59:31.041 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_first6_3_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 23:59:31.041 [http-nio-8080-exec-1] BasicExtractor - extracted value ([place_id7_3_] : [VARCHAR]) - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 23:59:31.042 [http-nio-8080-exec-1] BasicExtractor - extracted value ([user_id8_3_] : [VARCHAR]) - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:31.049 [http-nio-8080-exec-1] CollectionType - Created collection wrapper: [com.triple.travelerclubmileage.model.review.entity.Review.photos#ad72d2c5-9ab4-463f-81db-70b9b185173d]
[INFO ] 2022-07-02 23:59:31.061 [http-nio-8080-exec-1] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T23:59:31.060118
[TRACE] 2022-07-02 23:59:31.078 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[INFO ] 2022-07-02 23:59:31.083 [http-nio-8080-exec-1] ReviewService - 3ede0ef2-92b7-4817-a5f3-0c575361f745 user.mileage++ at 2022-07-02T23:59:31.082691
[TRACE] 2022-07-02 23:59:31.095 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [b317169e-0a21-49a4-adbd-41b44b9716aa]
[TRACE] 2022-07-02 23:59:31.106 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 23:59:31.107 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.235]
[TRACE] 2022-07-02 23:59:31.108 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:31.517]
[TRACE] 2022-07-02 23:59:31.108 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 23:59:31.108 [http-nio-8080-exec-1] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 23:59:31.109 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 23:59:31.111 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 23:59:31.121 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[TRACE] 2022-07-02 23:59:31.124 [http-nio-8080-exec-1] BasicExtractor - extracted value ([created_2_1_0_] : [TIMESTAMP]) - [2022-07-02 21:18:23.242]
[TRACE] 2022-07-02 23:59:31.124 [http-nio-8080-exec-1] BasicExtractor - extracted value ([updated_3_1_0_] : [TIMESTAMP]) - [2022-07-02 22:39:31.519]
[TRACE] 2022-07-02 23:59:31.124 [http-nio-8080-exec-1] BasicExtractor - extracted value ([is_enabl4_1_0_] : [BOOLEAN]) - [true]
[TRACE] 2022-07-02 23:59:31.125 [http-nio-8080-exec-1] BasicExtractor - extracted value ([resource5_1_0_] : [VARCHAR]) - [null]
[TRACE] 2022-07-02 23:59:31.125 [http-nio-8080-exec-1] BasicExtractor - extracted value ([review_i7_1_0_] : [VARCHAR]) - [c1e8dec5-9e00-4fab-98ad-9ff0e19a06dd]
[TRACE] 2022-07-02 23:59:31.125 [http-nio-8080-exec-1] BasicExtractor - extracted value ([type6_1_0_] : [INTEGER]) - [REVIEW]
[TRACE] 2022-07-02 23:59:31.139 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 23:59:31.13]
[TRACE] 2022-07-02 23:59:31.140 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 23:59:31.13]
[TRACE] 2022-07-02 23:59:31.140 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [INTEGER] - [0]
[TRACE] 2022-07-02 23:59:31.140 [http-nio-8080-exec-1] BasicBinder - binding parameter [4] as [VARCHAR] - [240a0658-dc5f-4878-9381-ebb7b2667772]
[TRACE] 2022-07-02 23:59:31.140 [http-nio-8080-exec-1] BasicBinder - binding parameter [5] as [INTEGER] - [0]
[TRACE] 2022-07-02 23:59:31.140 [http-nio-8080-exec-1] BasicBinder - binding parameter [6] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 23:59:31.141 [http-nio-8080-exec-1] BasicBinder - binding parameter [7] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:31.141 [http-nio-8080-exec-1] BasicBinder - binding parameter [8] as [VARCHAR] - [67e82eb0-2544-403b-bd3f-b9ffaa41073d]
[TRACE] 2022-07-02 23:59:31.147 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 23:59:31.146]
[TRACE] 2022-07-02 23:59:31.153 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [TIMESTAMP] - [2022-07-02 23:59:31.146]
[TRACE] 2022-07-02 23:59:31.153 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [ddvdcdcsvd]
[TRACE] 2022-07-02 23:59:31.154 [http-nio-8080-exec-1] BasicBinder - binding parameter [4] as [BOOLEAN] - [true]
[TRACE] 2022-07-02 23:59:31.155 [http-nio-8080-exec-1] BasicBinder - binding parameter [5] as [VARCHAR] - [2e4baf1c-5acb-4efb-a1af-eddada31b00f]
[TRACE] 2022-07-02 23:59:31.155 [http-nio-8080-exec-1] BasicBinder - binding parameter [6] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:31.155 [http-nio-8080-exec-1] BasicBinder - binding parameter [7] as [VARCHAR] - [b317169e-0a21-49a4-adbd-41b44b9716aa]
[TRACE] 2022-07-02 23:59:31.157 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 23:59:31.156]
[TRACE] 2022-07-02 23:59:31.161 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [INTEGER] - [32]
[TRACE] 2022-07-02 23:59:31.163 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-02 23:59:31.168 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 23:59:31.167]
[TRACE] 2022-07-02 23:59:31.168 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [VARCHAR] - [b317169e-0a21-49a4-adbd-41b44b9716aa]
[TRACE] 2022-07-02 23:59:31.168 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [e4d1a64e-a531-46de-88d0-ff0ed70c0bb9]
[TRACE] 2022-07-02 23:59:31.169 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [TIMESTAMP] - [2022-07-02 23:59:31.169]
[TRACE] 2022-07-02 23:59:31.169 [http-nio-8080-exec-1] BasicBinder - binding parameter [2] as [VARCHAR] - [b317169e-0a21-49a4-adbd-41b44b9716aa]
[TRACE] 2022-07-02 23:59:31.169 [http-nio-8080-exec-1] BasicBinder - binding parameter [3] as [VARCHAR] - [afb0cef2-851d-4a50-bb07-9cc15cbdc331]
[WARN ] 2022-07-03 00:22:52.199 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8m56s687ms).
[WARN ] 2022-07-03 00:35:21.546 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m29s356ms).
[WARN ] 2022-07-03 01:04:05.074 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m1s835ms).
[WARN ] 2022-07-03 01:14:37.970 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m2s884ms).
[WARN ] 2022-07-03 01:30:07.051 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m29s82ms).
[WARN ] 2022-07-03 01:46:35.660 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m58s595ms).
[WARN ] 2022-07-03 02:04:13.440 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m7s793ms).
[WARN ] 2022-07-03 02:22:23.967 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m40s515ms).
[WARN ] 2022-07-03 02:52:48.307 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m54s70ms).
[WARN ] 2022-07-03 03:09:11.859 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m23s552ms).
[WARN ] 2022-07-03 03:26:00.383 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m18s520ms).
[WARN ] 2022-07-03 03:43:10.792 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m40s383ms).
[WARN ] 2022-07-03 03:59:27.366 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m46s559ms).
[WARN ] 2022-07-03 04:15:07.988 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m40s622ms).
[WARN ] 2022-07-03 04:33:27.465 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m49s491ms).
[WARN ] 2022-07-03 04:50:22.793 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m55s327ms).
[WARN ] 2022-07-03 05:06:59.412 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m6s534ms).
[WARN ] 2022-07-03 05:23:11.228 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m41s802ms).
[WARN ] 2022-07-03 05:39:29.754 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m18s527ms).
[WARN ] 2022-07-03 05:56:54.831 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m24s875ms).
[WARN ] 2022-07-03 06:13:18.348 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m23s516ms).
[WARN ] 2022-07-03 06:30:20.878 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m32s518ms).
[WARN ] 2022-07-03 06:46:00.317 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m39s440ms).
[WARN ] 2022-07-03 06:54:17.800 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m47s477ms).
[WARN ] 2022-07-03 07:10:30.591 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m12s791ms).
[WARN ] 2022-07-03 07:28:13.374 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m12s772ms).
[WARN ] 2022-07-03 07:46:22.933 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m39s546ms).
[WARN ] 2022-07-03 08:03:56.560 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m3s619ms).
[WARN ] 2022-07-03 08:20:04.370 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m37s811ms).
[WARN ] 2022-07-03 08:37:52.070 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=17m17s677ms).
[WARN ] 2022-07-03 08:53:42.609 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m50s539ms).
[WARN ] 2022-07-03 08:59:57.285 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m44s673ms).
[WARN ] 2022-07-03 09:02:20.105 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m22s820ms).
[WARN ] 2022-07-03 09:05:28.216 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m38s101ms).
[WARN ] 2022-07-03 09:14:32.908 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=9m4s694ms).
[INFO ] 2022-07-03 09:15:38.389 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:15:38.402 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@78fb72cb] for TypeConfiguration
[DEBUG] 2022-07-03 09:15:38.405 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4f3d896f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@78fb72cb]
[INFO ] 2022-07-03 09:15:38.415 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:15:38.427 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:25:35.692 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88249 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:25:35.711 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:25:37.419 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:25:37.604 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 166 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:25:38.612 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:25:38.631 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:25:38.632 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:25:38.632 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:25:38.784 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:25:38.785 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3000 ms
[INFO ] 2022-07-03 09:25:39.069 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:25:39.125 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:25:39.288 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:25:39.314 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:25:39.314 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:25:39.314 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:25:39.315 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46d1b59
[DEBUG] 2022-07-03 09:25:39.315 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6481dce5
[DEBUG] 2022-07-03 09:25:39.316 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@23c7cb18
[DEBUG] 2022-07-03 09:25:39.317 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-03 09:25:39.319 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-03 09:25:39.320 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5f883d90
[DEBUG] 2022-07-03 09:25:39.321 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:25:39.321 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:25:39.321 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:25:39.322 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-03 09:25:39.323 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-03 09:25:39.323 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@63f2e0b
[DEBUG] 2022-07-03 09:25:39.324 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:25:39.324 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:25:39.325 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:25:39.325 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:25:39.325 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:25:39.326 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:25:39.326 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-03 09:25:39.327 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-03 09:25:39.327 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@35dcd032
[DEBUG] 2022-07-03 09:25:39.331 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:25:39.331 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:25:39.331 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:25:39.332 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-03 09:25:39.332 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-03 09:25:39.333 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@2ae3235e
[DEBUG] 2022-07-03 09:25:39.333 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@2ae3235e
[DEBUG] 2022-07-03 09:25:39.334 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-03 09:25:39.335 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-03 09:25:39.335 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29b5533
[DEBUG] 2022-07-03 09:25:39.335 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@794c5f5e
[DEBUG] 2022-07-03 09:25:39.336 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-03 09:25:39.336 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-03 09:25:39.337 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4300e240
[DEBUG] 2022-07-03 09:25:39.337 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4300e240
[DEBUG] 2022-07-03 09:25:39.339 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-03 09:25:39.341 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-03 09:25:39.342 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-03 09:25:39.342 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-03 09:25:39.343 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-03 09:25:39.343 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-03 09:25:39.344 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@d16209e
[DEBUG] 2022-07-03 09:25:39.345 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@d16209e
[DEBUG] 2022-07-03 09:25:39.349 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-03 09:25:39.350 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-03 09:25:39.350 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-03 09:25:39.351 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-03 09:25:39.352 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be6d228
[DEBUG] 2022-07-03 09:25:39.352 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@be6d228
[DEBUG] 2022-07-03 09:25:39.353 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3a3ad8e7
[DEBUG] 2022-07-03 09:25:39.354 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3a3ad8e7
[DEBUG] 2022-07-03 09:25:39.355 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-03 09:25:39.355 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-03 09:25:39.356 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:25:39.356 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:25:39.357 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:25:39.365 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@11148dc2
[DEBUG] 2022-07-03 09:25:39.366 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-03 09:25:39.367 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-03 09:25:39.368 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1c72189f
[DEBUG] 2022-07-03 09:25:39.369 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67eeb310
[DEBUG] 2022-07-03 09:25:39.371 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@456aa471
[DEBUG] 2022-07-03 09:25:39.372 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-03 09:25:39.374 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-03 09:25:39.374 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3ef2b8e5
[DEBUG] 2022-07-03 09:25:39.375 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ef2b8e5
[DEBUG] 2022-07-03 09:25:39.379 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-03 09:25:39.380 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-03 09:25:39.381 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-03 09:25:39.381 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-03 09:25:39.382 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-03 09:25:39.382 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-03 09:25:39.382 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@579846cc
[DEBUG] 2022-07-03 09:25:39.383 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-03 09:25:39.385 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-03 09:25:39.385 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@79ad1774
[DEBUG] 2022-07-03 09:25:39.387 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:25:39.387 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:25:39.387 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:25:39.388 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4243341e
[DEBUG] 2022-07-03 09:25:39.388 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@48cf8414
[DEBUG] 2022-07-03 09:25:39.389 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-03 09:25:39.394 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-03 09:25:39.395 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@793cef95
[DEBUG] 2022-07-03 09:25:39.398 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:25:39.398 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:25:39.398 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:25:39.398 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@77c23d90
[DEBUG] 2022-07-03 09:25:39.399 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6133e20b
[DEBUG] 2022-07-03 09:25:39.399 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@5eeee124
[DEBUG] 2022-07-03 09:25:39.401 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5eeee124
[DEBUG] 2022-07-03 09:25:39.401 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fc1a8f6
[DEBUG] 2022-07-03 09:25:39.403 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-03 09:25:39.403 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-03 09:25:39.404 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-03 09:25:39.404 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-03 09:25:39.404 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@d28c214
[DEBUG] 2022-07-03 09:25:39.404 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6cceb281
[DEBUG] 2022-07-03 09:25:39.409 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@34f23816
[DEBUG] 2022-07-03 09:25:39.412 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-03 09:25:39.412 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-03 09:25:39.413 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-03 09:25:39.413 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-03 09:25:39.413 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-03 09:25:39.413 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-03 09:25:39.414 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-03 09:25:39.416 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d24cdd9
[DEBUG] 2022-07-03 09:25:39.416 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30dd00b6
[DEBUG] 2022-07-03 09:25:39.416 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4656fcc5
[INFO ] 2022-07-03 09:25:39.472 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:25:39.611 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:25:39.631 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:25:39.639 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:25:39.681 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7cdfa824 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:25:39.729 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a6556b6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@63bca84d]
[DEBUG] 2022-07-03 09:25:40.060 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:25:40.062 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:25:40.062 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:25:40.063 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:25:40.064 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:25:40.065 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3a6556b6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6fdc2db6]
[INFO ] 2022-07-03 09:25:40.636 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:25:40.645 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@6fdc2db6] for TypeConfiguration
[INFO ] 2022-07-03 09:25:40.647 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:25:41.896 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:25:42.401 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:25:42.424 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:25:42.440 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 7.452 seconds (JVM running for 9.113)
[INFO ] 2022-07-03 09:27:13.128 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:27:13.130 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:27:13.137 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 7 ms
[TRACE] 2022-07-03 09:27:13.485 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[WARN ] 2022-07-03 09:27:13.496 [http-nio-8080-exec-1] SqlExceptionHelper - SQL Error: 0, SQLState: 42703
[ERROR] 2022-07-03 09:27:13.496 [http-nio-8080-exec-1] SqlExceptionHelper - ERROR: column user0_.mileage does not exist
  Position: 77
[INFO ] 2022-07-03 09:28:30.086 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:28:30.087 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@6fdc2db6] for TypeConfiguration
[DEBUG] 2022-07-03 09:28:30.091 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@25e692be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6fdc2db6]
[INFO ] 2022-07-03 09:28:30.098 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:28:30.123 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:28:38.675 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88329 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:28:38.691 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:28:39.934 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:28:40.108 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 150 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:28:41.107 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:28:41.125 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:28:41.126 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:28:41.127 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:28:41.275 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:28:41.276 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2520 ms
[INFO ] 2022-07-03 09:28:41.544 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:28:41.590 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:28:41.753 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:28:41.785 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12365bd8
[DEBUG] 2022-07-03 09:28:41.785 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@12365bd8
[DEBUG] 2022-07-03 09:28:41.785 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@12365bd8
[DEBUG] 2022-07-03 09:28:41.786 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@30fbc23
[DEBUG] 2022-07-03 09:28:41.789 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5d3f99d7
[DEBUG] 2022-07-03 09:28:41.790 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7e58f697
[DEBUG] 2022-07-03 09:28:41.791 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ab9e43e
[DEBUG] 2022-07-03 09:28:41.792 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2ab9e43e
[DEBUG] 2022-07-03 09:28:41.804 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2ab9e43e
[DEBUG] 2022-07-03 09:28:41.805 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@fabef2e
[DEBUG] 2022-07-03 09:28:41.806 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@fabef2e
[DEBUG] 2022-07-03 09:28:41.806 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@fabef2e
[DEBUG] 2022-07-03 09:28:41.807 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f8c3646
[DEBUG] 2022-07-03 09:28:41.808 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7f8c3646
[DEBUG] 2022-07-03 09:28:41.808 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7f8c3646
[DEBUG] 2022-07-03 09:28:41.810 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@47f2c722
[DEBUG] 2022-07-03 09:28:41.811 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@47f2c722
[DEBUG] 2022-07-03 09:28:41.811 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@47f2c722
[DEBUG] 2022-07-03 09:28:41.812 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64dfb31d
[DEBUG] 2022-07-03 09:28:41.812 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@64dfb31d
[DEBUG] 2022-07-03 09:28:41.813 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@64dfb31d
[DEBUG] 2022-07-03 09:28:41.814 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6136e1fc
[DEBUG] 2022-07-03 09:28:41.814 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6136e1fc
[DEBUG] 2022-07-03 09:28:41.815 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6136e1fc
[DEBUG] 2022-07-03 09:28:41.817 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e77678c
[DEBUG] 2022-07-03 09:28:41.817 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e77678c
[DEBUG] 2022-07-03 09:28:41.817 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e77678c
[DEBUG] 2022-07-03 09:28:41.818 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3686389
[DEBUG] 2022-07-03 09:28:41.818 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3686389
[DEBUG] 2022-07-03 09:28:41.819 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@78318ac2
[DEBUG] 2022-07-03 09:28:41.820 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@78318ac2
[DEBUG] 2022-07-03 09:28:41.822 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4ab66127
[DEBUG] 2022-07-03 09:28:41.822 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4ab66127
[DEBUG] 2022-07-03 09:28:41.823 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@55951fcd
[DEBUG] 2022-07-03 09:28:41.823 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3ba3f40d
[DEBUG] 2022-07-03 09:28:41.824 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@547aaa32
[DEBUG] 2022-07-03 09:28:41.824 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@547aaa32
[DEBUG] 2022-07-03 09:28:41.825 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@65e4cb84
[DEBUG] 2022-07-03 09:28:41.825 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@65e4cb84
[DEBUG] 2022-07-03 09:28:41.829 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2aa6bbad
[DEBUG] 2022-07-03 09:28:41.830 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2aa6bbad
[DEBUG] 2022-07-03 09:28:41.831 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@9f9146d
[DEBUG] 2022-07-03 09:28:41.831 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@9f9146d
[DEBUG] 2022-07-03 09:28:41.832 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@76596288
[DEBUG] 2022-07-03 09:28:41.832 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@76596288
[DEBUG] 2022-07-03 09:28:41.833 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@203765b2
[DEBUG] 2022-07-03 09:28:41.834 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@203765b2
[DEBUG] 2022-07-03 09:28:41.836 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f86f9cf
[DEBUG] 2022-07-03 09:28:41.836 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2f86f9cf
[DEBUG] 2022-07-03 09:28:41.837 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@6dded900
[DEBUG] 2022-07-03 09:28:41.837 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@6dded900
[DEBUG] 2022-07-03 09:28:41.838 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a16984c
[DEBUG] 2022-07-03 09:28:41.838 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a16984c
[DEBUG] 2022-07-03 09:28:41.839 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@68e24e7
[DEBUG] 2022-07-03 09:28:41.841 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@68e24e7
[DEBUG] 2022-07-03 09:28:41.842 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@66298fe9
[DEBUG] 2022-07-03 09:28:41.843 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@66298fe9
[DEBUG] 2022-07-03 09:28:41.844 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5112b7
[DEBUG] 2022-07-03 09:28:41.844 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5112b7
[DEBUG] 2022-07-03 09:28:41.846 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5112b7
[DEBUG] 2022-07-03 09:28:41.848 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@14be750c
[DEBUG] 2022-07-03 09:28:41.849 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1930a804
[DEBUG] 2022-07-03 09:28:41.850 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1930a804
[DEBUG] 2022-07-03 09:28:41.850 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1930a804
[DEBUG] 2022-07-03 09:28:41.851 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@27afbf14
[DEBUG] 2022-07-03 09:28:41.853 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@467ef400
[DEBUG] 2022-07-03 09:28:41.854 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5d717f19
[DEBUG] 2022-07-03 09:28:41.855 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5d717f19
[DEBUG] 2022-07-03 09:28:41.856 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3303e89e
[DEBUG] 2022-07-03 09:28:41.858 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3303e89e
[DEBUG] 2022-07-03 09:28:41.861 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@65d73bd
[DEBUG] 2022-07-03 09:28:41.863 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@65d73bd
[DEBUG] 2022-07-03 09:28:41.863 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@59b447a4
[DEBUG] 2022-07-03 09:28:41.864 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@59b447a4
[DEBUG] 2022-07-03 09:28:41.866 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@45d7495e
[DEBUG] 2022-07-03 09:28:41.867 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@45d7495e
[DEBUG] 2022-07-03 09:28:41.868 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@64f3ca6
[DEBUG] 2022-07-03 09:28:41.868 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@44864536
[DEBUG] 2022-07-03 09:28:41.870 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@44864536
[DEBUG] 2022-07-03 09:28:41.870 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@44864536
[DEBUG] 2022-07-03 09:28:41.872 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7e0986c9
[DEBUG] 2022-07-03 09:28:41.872 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7e0986c9
[DEBUG] 2022-07-03 09:28:41.872 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7e0986c9
[DEBUG] 2022-07-03 09:28:41.873 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@752973de
[DEBUG] 2022-07-03 09:28:41.873 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@67c21bf
[DEBUG] 2022-07-03 09:28:41.874 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@16e195cf
[DEBUG] 2022-07-03 09:28:41.877 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@16e195cf
[DEBUG] 2022-07-03 09:28:41.878 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@16e195cf
[DEBUG] 2022-07-03 09:28:41.879 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@30ffb2a6
[DEBUG] 2022-07-03 09:28:41.879 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@30ffb2a6
[DEBUG] 2022-07-03 09:28:41.879 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@30ffb2a6
[DEBUG] 2022-07-03 09:28:41.880 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@e795a1d
[DEBUG] 2022-07-03 09:28:41.880 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6e93b0e7
[DEBUG] 2022-07-03 09:28:41.881 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@a9e8da1
[DEBUG] 2022-07-03 09:28:41.882 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@a9e8da1
[DEBUG] 2022-07-03 09:28:41.884 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@720a1fd0
[DEBUG] 2022-07-03 09:28:41.885 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f0a4e30
[DEBUG] 2022-07-03 09:28:41.886 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f0a4e30
[DEBUG] 2022-07-03 09:28:41.887 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7cca31fc
[DEBUG] 2022-07-03 09:28:41.887 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7cca31fc
[DEBUG] 2022-07-03 09:28:41.887 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d226f27
[DEBUG] 2022-07-03 09:28:41.888 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@15ac02d5
[DEBUG] 2022-07-03 09:28:41.892 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@faec277
[DEBUG] 2022-07-03 09:28:41.894 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@49e479da
[DEBUG] 2022-07-03 09:28:41.895 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@49e479da
[DEBUG] 2022-07-03 09:28:41.895 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c16677c
[DEBUG] 2022-07-03 09:28:41.895 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@27d73d22
[DEBUG] 2022-07-03 09:28:41.896 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7fd751de
[DEBUG] 2022-07-03 09:28:41.896 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@e162a35
[DEBUG] 2022-07-03 09:28:41.896 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1124910c
[DEBUG] 2022-07-03 09:28:41.897 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4a9869a8
[DEBUG] 2022-07-03 09:28:41.897 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@75e0a54c
[DEBUG] 2022-07-03 09:28:41.897 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@40f9f60d
[INFO ] 2022-07-03 09:28:41.957 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:28:42.092 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:28:42.118 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:28:42.133 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:28:42.176 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@5d37aa0f marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:28:42.228 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fe5c68b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2ffb0d10]
[DEBUG] 2022-07-03 09:28:42.672 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:28:42.673 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:28:42.673 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:28:42.674 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:28:42.675 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:28:42.676 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fe5c68b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5c25daad]
[INFO ] 2022-07-03 09:28:43.253 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:28:43.262 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@5c25daad] for TypeConfiguration
[INFO ] 2022-07-03 09:28:43.263 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:28:44.492 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:28:44.966 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:28:44.991 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:28:45.011 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 7.018 seconds (JVM running for 8.592)
[INFO ] 2022-07-03 09:28:47.081 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:28:47.083 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:28:47.097 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 14 ms
[TRACE] 2022-07-03 09:28:47.444 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:28:47.449 [http-nio-8080-exec-1] BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [32]
[INFO ] 2022-07-03 09:29:27.541 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:29:27.543 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@5c25daad] for TypeConfiguration
[DEBUG] 2022-07-03 09:29:27.547 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@49b31274] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5c25daad]
[INFO ] 2022-07-03 09:29:27.554 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:29:27.569 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:29:35.687 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88373 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:29:35.706 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:29:36.903 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:29:37.066 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 142 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:29:38.047 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:29:38.066 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:29:38.068 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:29:38.068 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:29:38.214 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:29:38.215 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2433 ms
[INFO ] 2022-07-03 09:29:38.475 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:29:38.524 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:29:38.685 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:29:38.707 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49cb5030
[DEBUG] 2022-07-03 09:29:38.708 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@49cb5030
[DEBUG] 2022-07-03 09:29:38.708 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@49cb5030
[DEBUG] 2022-07-03 09:29:38.709 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3e2d44f3
[DEBUG] 2022-07-03 09:29:38.710 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2c34402
[DEBUG] 2022-07-03 09:29:38.711 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@5cc3e49b
[DEBUG] 2022-07-03 09:29:38.711 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4fd80300
[DEBUG] 2022-07-03 09:29:38.713 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@4fd80300
[DEBUG] 2022-07-03 09:29:38.714 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@4fd80300
[DEBUG] 2022-07-03 09:29:38.715 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7e848aea
[DEBUG] 2022-07-03 09:29:38.715 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7e848aea
[DEBUG] 2022-07-03 09:29:38.715 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7e848aea
[DEBUG] 2022-07-03 09:29:38.717 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3375b118
[DEBUG] 2022-07-03 09:29:38.717 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3375b118
[DEBUG] 2022-07-03 09:29:38.717 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3375b118
[DEBUG] 2022-07-03 09:29:38.719 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4536a715
[DEBUG] 2022-07-03 09:29:38.719 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4536a715
[DEBUG] 2022-07-03 09:29:38.720 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4536a715
[DEBUG] 2022-07-03 09:29:38.721 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b6ad97
[DEBUG] 2022-07-03 09:29:38.721 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b6ad97
[DEBUG] 2022-07-03 09:29:38.721 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b6ad97
[DEBUG] 2022-07-03 09:29:38.723 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@32dcfeea
[DEBUG] 2022-07-03 09:29:38.723 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@32dcfeea
[DEBUG] 2022-07-03 09:29:38.724 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@32dcfeea
[DEBUG] 2022-07-03 09:29:38.726 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f0677f3
[DEBUG] 2022-07-03 09:29:38.726 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f0677f3
[DEBUG] 2022-07-03 09:29:38.726 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f0677f3
[DEBUG] 2022-07-03 09:29:38.726 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4228f269
[DEBUG] 2022-07-03 09:29:38.726 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4228f269
[DEBUG] 2022-07-03 09:29:38.727 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@11abd6c
[DEBUG] 2022-07-03 09:29:38.727 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@11abd6c
[DEBUG] 2022-07-03 09:29:38.729 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@37fef327
[DEBUG] 2022-07-03 09:29:38.729 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@37fef327
[DEBUG] 2022-07-03 09:29:38.729 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7534785a
[DEBUG] 2022-07-03 09:29:38.730 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@46ab4efc
[DEBUG] 2022-07-03 09:29:38.730 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@37a67cf
[DEBUG] 2022-07-03 09:29:38.730 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@37a67cf
[DEBUG] 2022-07-03 09:29:38.731 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5e0f2c82
[DEBUG] 2022-07-03 09:29:38.731 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5e0f2c82
[DEBUG] 2022-07-03 09:29:38.734 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6f867b0c
[DEBUG] 2022-07-03 09:29:38.734 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6f867b0c
[DEBUG] 2022-07-03 09:29:38.735 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@45e7bb79
[DEBUG] 2022-07-03 09:29:38.735 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@45e7bb79
[DEBUG] 2022-07-03 09:29:38.736 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@51af8049
[DEBUG] 2022-07-03 09:29:38.736 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@51af8049
[DEBUG] 2022-07-03 09:29:38.736 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b47b7f5
[DEBUG] 2022-07-03 09:29:38.737 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b47b7f5
[DEBUG] 2022-07-03 09:29:38.739 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2bd5e6
[DEBUG] 2022-07-03 09:29:38.739 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2bd5e6
[DEBUG] 2022-07-03 09:29:38.739 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@8432469
[DEBUG] 2022-07-03 09:29:38.739 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@8432469
[DEBUG] 2022-07-03 09:29:38.740 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a3ad8e7
[DEBUG] 2022-07-03 09:29:38.741 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a3ad8e7
[DEBUG] 2022-07-03 09:29:38.741 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6aad919c
[DEBUG] 2022-07-03 09:29:38.742 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6aad919c
[DEBUG] 2022-07-03 09:29:38.744 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5563bb40
[DEBUG] 2022-07-03 09:29:38.744 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5563bb40
[DEBUG] 2022-07-03 09:29:38.745 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@40f1aa95
[DEBUG] 2022-07-03 09:29:38.745 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@40f1aa95
[DEBUG] 2022-07-03 09:29:38.745 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@40f1aa95
[DEBUG] 2022-07-03 09:29:38.747 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@15e08615
[DEBUG] 2022-07-03 09:29:38.750 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7f93f4c
[DEBUG] 2022-07-03 09:29:38.752 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7f93f4c
[DEBUG] 2022-07-03 09:29:38.752 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7f93f4c
[DEBUG] 2022-07-03 09:29:38.752 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5c25d0d1
[DEBUG] 2022-07-03 09:29:38.753 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@4276ad40
[DEBUG] 2022-07-03 09:29:38.754 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a19a0fe
[DEBUG] 2022-07-03 09:29:38.755 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a19a0fe
[DEBUG] 2022-07-03 09:29:38.756 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@1570cad0
[DEBUG] 2022-07-03 09:29:38.757 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1570cad0
[DEBUG] 2022-07-03 09:29:38.760 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3ed7dd70
[DEBUG] 2022-07-03 09:29:38.761 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3ed7dd70
[DEBUG] 2022-07-03 09:29:38.762 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@579846cc
[DEBUG] 2022-07-03 09:29:38.762 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@579846cc
[DEBUG] 2022-07-03 09:29:38.762 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3dde5f38
[DEBUG] 2022-07-03 09:29:38.763 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3dde5f38
[DEBUG] 2022-07-03 09:29:38.763 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@721fc2e3
[DEBUG] 2022-07-03 09:29:38.764 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e239337
[DEBUG] 2022-07-03 09:29:38.766 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e239337
[DEBUG] 2022-07-03 09:29:38.767 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e239337
[DEBUG] 2022-07-03 09:29:38.768 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48cf8414
[DEBUG] 2022-07-03 09:29:38.768 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48cf8414
[DEBUG] 2022-07-03 09:29:38.768 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48cf8414
[DEBUG] 2022-07-03 09:29:38.769 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@793cef95
[DEBUG] 2022-07-03 09:29:38.769 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@79f1e22e
[DEBUG] 2022-07-03 09:29:38.769 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@74c7522c
[DEBUG] 2022-07-03 09:29:38.774 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@74c7522c
[DEBUG] 2022-07-03 09:29:38.774 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@74c7522c
[DEBUG] 2022-07-03 09:29:38.775 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3d033453
[DEBUG] 2022-07-03 09:29:38.775 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3d033453
[DEBUG] 2022-07-03 09:29:38.775 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3d033453
[DEBUG] 2022-07-03 09:29:38.776 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1cc41b77
[DEBUG] 2022-07-03 09:29:38.776 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@62cd562d
[DEBUG] 2022-07-03 09:29:38.777 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@b94703b
[DEBUG] 2022-07-03 09:29:38.778 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b94703b
[DEBUG] 2022-07-03 09:29:38.779 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4abbe41c
[DEBUG] 2022-07-03 09:29:38.781 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@67a8bcbb
[DEBUG] 2022-07-03 09:29:38.781 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@67a8bcbb
[DEBUG] 2022-07-03 09:29:38.782 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@29090809
[DEBUG] 2022-07-03 09:29:38.782 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29090809
[DEBUG] 2022-07-03 09:29:38.782 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7c3c453b
[DEBUG] 2022-07-03 09:29:38.783 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@34f23816
[DEBUG] 2022-07-03 09:29:38.786 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1669931a
[DEBUG] 2022-07-03 09:29:38.788 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@30dd00b6
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30dd00b6
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7fd751de
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e162a35
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1124910c
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@f849027
[DEBUG] 2022-07-03 09:29:38.789 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4a9869a8
[DEBUG] 2022-07-03 09:29:38.790 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40f9f60d
[DEBUG] 2022-07-03 09:29:38.790 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6bd7439d
[DEBUG] 2022-07-03 09:29:38.790 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@628ba266
[INFO ] 2022-07-03 09:29:38.854 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:29:38.991 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:29:39.011 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:29:39.020 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:29:39.085 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@485c84d7 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:29:39.134 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3982206a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3e9fb485]
[DEBUG] 2022-07-03 09:29:39.429 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:29:39.431 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:29:39.431 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:29:39.432 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:29:39.433 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:29:39.433 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3982206a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2cacb445]
[INFO ] 2022-07-03 09:29:39.983 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:29:39.991 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2cacb445] for TypeConfiguration
[INFO ] 2022-07-03 09:29:39.992 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:29:41.253 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:29:41.708 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:29:41.727 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:29:41.784 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.787 seconds (JVM running for 8.228)
[INFO ] 2022-07-03 09:29:49.259 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:29:49.260 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:29:49.268 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 7 ms
[TRACE] 2022-07-03 09:29:49.585 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:29:49.591 [http-nio-8080-exec-1] BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [32]
[TRACE] 2022-07-03 09:29:51.108 [http-nio-8080-exec-3] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:29:51.110 [http-nio-8080-exec-3] BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [32]
[INFO ] 2022-07-03 09:30:13.965 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:30:13.970 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2cacb445] for TypeConfiguration
[DEBUG] 2022-07-03 09:30:13.971 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@227edc3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2cacb445]
[INFO ] 2022-07-03 09:30:13.976 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:30:13.996 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:30:22.020 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88408 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:30:22.036 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:30:23.258 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:30:23.416 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:30:24.403 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:30:24.425 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:30:24.426 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:30:24.426 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:30:24.582 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:30:24.583 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2459 ms
[INFO ] 2022-07-03 09:30:24.828 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:30:24.879 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:30:25.045 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:30:25.072 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4586a8aa
[DEBUG] 2022-07-03 09:30:25.072 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4586a8aa
[DEBUG] 2022-07-03 09:30:25.073 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4586a8aa
[DEBUG] 2022-07-03 09:30:25.073 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@782ac148
[DEBUG] 2022-07-03 09:30:25.074 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@85ab964
[DEBUG] 2022-07-03 09:30:25.075 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@49cb5030
[DEBUG] 2022-07-03 09:30:25.075 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:30:25.079 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:30:25.080 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:30:25.080 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3eac2e8a
[DEBUG] 2022-07-03 09:30:25.081 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3eac2e8a
[DEBUG] 2022-07-03 09:30:25.081 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3eac2e8a
[DEBUG] 2022-07-03 09:30:25.082 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:30:25.082 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:30:25.082 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:30:25.085 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@ce561cc
[DEBUG] 2022-07-03 09:30:25.086 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@ce561cc
[DEBUG] 2022-07-03 09:30:25.086 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@ce561cc
[DEBUG] 2022-07-03 09:30:25.087 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46ea78f0
[DEBUG] 2022-07-03 09:30:25.087 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@46ea78f0
[DEBUG] 2022-07-03 09:30:25.087 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@46ea78f0
[DEBUG] 2022-07-03 09:30:25.088 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:30:25.088 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:30:25.089 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:30:25.091 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5cdf221a
[DEBUG] 2022-07-03 09:30:25.091 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5cdf221a
[DEBUG] 2022-07-03 09:30:25.091 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5cdf221a
[DEBUG] 2022-07-03 09:30:25.092 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4fd7b79
[DEBUG] 2022-07-03 09:30:25.092 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4fd7b79
[DEBUG] 2022-07-03 09:30:25.093 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4cd7d5e1
[DEBUG] 2022-07-03 09:30:25.093 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4cd7d5e1
[DEBUG] 2022-07-03 09:30:25.095 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@106cd9c8
[DEBUG] 2022-07-03 09:30:25.095 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@106cd9c8
[DEBUG] 2022-07-03 09:30:25.096 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@11abd6c
[DEBUG] 2022-07-03 09:30:25.096 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@21a6a494
[DEBUG] 2022-07-03 09:30:25.097 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3513d214
[DEBUG] 2022-07-03 09:30:25.097 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3513d214
[DEBUG] 2022-07-03 09:30:25.097 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@b5312df
[DEBUG] 2022-07-03 09:30:25.097 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b5312df
[DEBUG] 2022-07-03 09:30:25.101 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7afbf2a0
[DEBUG] 2022-07-03 09:30:25.102 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7afbf2a0
[DEBUG] 2022-07-03 09:30:25.107 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@141aba65
[DEBUG] 2022-07-03 09:30:25.107 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@141aba65
[DEBUG] 2022-07-03 09:30:25.108 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@54be6213
[DEBUG] 2022-07-03 09:30:25.108 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@54be6213
[DEBUG] 2022-07-03 09:30:25.109 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21c75084
[DEBUG] 2022-07-03 09:30:25.110 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21c75084
[DEBUG] 2022-07-03 09:30:25.113 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d0114c0
[DEBUG] 2022-07-03 09:30:25.114 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6d0114c0
[DEBUG] 2022-07-03 09:30:25.115 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1d6713dd
[DEBUG] 2022-07-03 09:30:25.115 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1d6713dd
[DEBUG] 2022-07-03 09:30:25.116 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a17dd6f
[DEBUG] 2022-07-03 09:30:25.116 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@1a17dd6f
[DEBUG] 2022-07-03 09:30:25.117 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3db1ce78
[DEBUG] 2022-07-03 09:30:25.119 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3db1ce78
[DEBUG] 2022-07-03 09:30:25.120 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@17884d
[DEBUG] 2022-07-03 09:30:25.120 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17884d
[DEBUG] 2022-07-03 09:30:25.120 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45d389f2
[DEBUG] 2022-07-03 09:30:25.121 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45d389f2
[DEBUG] 2022-07-03 09:30:25.121 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45d389f2
[DEBUG] 2022-07-03 09:30:25.126 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5563bb40
[DEBUG] 2022-07-03 09:30:25.127 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:30:25.129 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:30:25.129 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:30:25.130 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7e2bc2f4
[DEBUG] 2022-07-03 09:30:25.131 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@598657cd
[DEBUG] 2022-07-03 09:30:25.132 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7845b21a
[DEBUG] 2022-07-03 09:30:25.132 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7845b21a
[DEBUG] 2022-07-03 09:30:25.132 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fb07347
[DEBUG] 2022-07-03 09:30:25.134 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fb07347
[DEBUG] 2022-07-03 09:30:25.139 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@44bbb7c6
[DEBUG] 2022-07-03 09:30:25.141 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@44bbb7c6
[DEBUG] 2022-07-03 09:30:25.142 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@63a84bb6
[DEBUG] 2022-07-03 09:30:25.142 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@63a84bb6
[DEBUG] 2022-07-03 09:30:25.143 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2964511
[DEBUG] 2022-07-03 09:30:25.144 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2964511
[DEBUG] 2022-07-03 09:30:25.145 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69ba3f4e
[DEBUG] 2022-07-03 09:30:25.145 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:30:25.147 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:30:25.148 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:30:25.148 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1657b017
[DEBUG] 2022-07-03 09:30:25.149 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1657b017
[DEBUG] 2022-07-03 09:30:25.149 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1657b017
[DEBUG] 2022-07-03 09:30:25.149 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@300bb303
[DEBUG] 2022-07-03 09:30:25.150 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1377b1a0
[DEBUG] 2022-07-03 09:30:25.153 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:30:25.154 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:30:25.156 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:30:25.157 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16ea0f22
[DEBUG] 2022-07-03 09:30:25.157 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16ea0f22
[DEBUG] 2022-07-03 09:30:25.157 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16ea0f22
[DEBUG] 2022-07-03 09:30:25.157 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@74c7522c
[DEBUG] 2022-07-03 09:30:25.158 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@77b71c9
[DEBUG] 2022-07-03 09:30:25.159 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6e93b0e7
[DEBUG] 2022-07-03 09:30:25.162 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e93b0e7
[DEBUG] 2022-07-03 09:30:25.163 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@67b5e613
[DEBUG] 2022-07-03 09:30:25.165 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@720a1fd0
[DEBUG] 2022-07-03 09:30:25.166 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@720a1fd0
[DEBUG] 2022-07-03 09:30:25.166 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6f0a4e30
[DEBUG] 2022-07-03 09:30:25.166 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f0a4e30
[DEBUG] 2022-07-03 09:30:25.167 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26ffd2c0
[DEBUG] 2022-07-03 09:30:25.167 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@273dec10
[DEBUG] 2022-07-03 09:30:25.170 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2af9a5ef
[DEBUG] 2022-07-03 09:30:25.173 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@315b4202
[DEBUG] 2022-07-03 09:30:25.173 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@315b4202
[DEBUG] 2022-07-03 09:30:25.174 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@171aa66
[DEBUG] 2022-07-03 09:30:25.174 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-03 09:30:25.174 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-03 09:30:25.174 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-03 09:30:25.174 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-03 09:30:25.175 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49e479da
[DEBUG] 2022-07-03 09:30:25.175 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2d24cdd9
[DEBUG] 2022-07-03 09:30:25.175 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@30dd00b6
[INFO ] 2022-07-03 09:30:25.244 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:30:25.377 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:30:25.400 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:30:25.416 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:30:25.454 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@71fb8301 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:30:25.490 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@191e654] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a6556b6]
[DEBUG] 2022-07-03 09:30:25.795 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:30:25.796 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:30:25.796 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:30:25.796 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:30:25.797 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:30:25.798 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@191e654] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16d61071]
[INFO ] 2022-07-03 09:30:26.425 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:30:26.433 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16d61071] for TypeConfiguration
[INFO ] 2022-07-03 09:30:26.435 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:30:27.755 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:30:28.206 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:30:28.229 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:30:28.245 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.936 seconds (JVM running for 8.343)
[INFO ] 2022-07-03 09:30:48.457 [http-nio-8080-exec-4] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:30:48.459 [http-nio-8080-exec-4] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:30:48.468 [http-nio-8080-exec-4] DispatcherServlet - Completed initialization in 9 ms
[TRACE] 2022-07-03 09:30:48.884 [http-nio-8080-exec-4] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:30:48.892 [http-nio-8080-exec-4] BasicExtractor - extracted value ([col_0_0_] : [BIGINT]) - [32]
[INFO ] 2022-07-03 09:31:55.691 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:31:55.692 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16d61071] for TypeConfiguration
[DEBUG] 2022-07-03 09:31:55.695 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3fcef4b3] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16d61071]
[INFO ] 2022-07-03 09:31:55.702 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:31:55.717 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:32:02.621 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88455 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:32:02.643 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:32:03.843 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:32:04.021 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 145 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:32:05.013 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:32:05.030 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:32:05.032 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:32:05.032 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:32:05.174 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:32:05.175 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2454 ms
[INFO ] 2022-07-03 09:32:05.428 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:32:05.476 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:32:05.642 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:32:05.663 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14874a5d
[DEBUG] 2022-07-03 09:32:05.664 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@14874a5d
[DEBUG] 2022-07-03 09:32:05.664 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@14874a5d
[DEBUG] 2022-07-03 09:32:05.664 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@2d74cbbd
[DEBUG] 2022-07-03 09:32:05.665 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@561d88ee
[DEBUG] 2022-07-03 09:32:05.665 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@44384b4a
[DEBUG] 2022-07-03 09:32:05.666 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10dfa7ef
[DEBUG] 2022-07-03 09:32:05.668 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@10dfa7ef
[DEBUG] 2022-07-03 09:32:05.669 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@10dfa7ef
[DEBUG] 2022-07-03 09:32:05.670 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1b4a3a1
[DEBUG] 2022-07-03 09:32:05.670 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1b4a3a1
[DEBUG] 2022-07-03 09:32:05.670 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1b4a3a1
[DEBUG] 2022-07-03 09:32:05.672 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@14b95942
[DEBUG] 2022-07-03 09:32:05.672 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@14b95942
[DEBUG] 2022-07-03 09:32:05.672 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@14b95942
[DEBUG] 2022-07-03 09:32:05.675 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52ca0ad4
[DEBUG] 2022-07-03 09:32:05.675 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52ca0ad4
[DEBUG] 2022-07-03 09:32:05.675 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52ca0ad4
[DEBUG] 2022-07-03 09:32:05.676 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4438b862
[DEBUG] 2022-07-03 09:32:05.676 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4438b862
[DEBUG] 2022-07-03 09:32:05.676 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4438b862
[DEBUG] 2022-07-03 09:32:05.678 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1736c1e4
[DEBUG] 2022-07-03 09:32:05.678 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1736c1e4
[DEBUG] 2022-07-03 09:32:05.679 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1736c1e4
[DEBUG] 2022-07-03 09:32:05.680 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@113eed88
[DEBUG] 2022-07-03 09:32:05.680 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@113eed88
[DEBUG] 2022-07-03 09:32:05.680 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@113eed88
[DEBUG] 2022-07-03 09:32:05.681 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@71e2c6d8
[DEBUG] 2022-07-03 09:32:05.681 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@71e2c6d8
[DEBUG] 2022-07-03 09:32:05.681 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@77ce88c4
[DEBUG] 2022-07-03 09:32:05.682 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@77ce88c4
[DEBUG] 2022-07-03 09:32:05.684 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@236861da
[DEBUG] 2022-07-03 09:32:05.684 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@236861da
[DEBUG] 2022-07-03 09:32:05.685 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3513d214
[DEBUG] 2022-07-03 09:32:05.685 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@108b121f
[DEBUG] 2022-07-03 09:32:05.686 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@472c9f88
[DEBUG] 2022-07-03 09:32:05.686 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@472c9f88
[DEBUG] 2022-07-03 09:32:05.687 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7b44bfb8
[DEBUG] 2022-07-03 09:32:05.687 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7b44bfb8
[DEBUG] 2022-07-03 09:32:05.690 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@6b2ef50e
[DEBUG] 2022-07-03 09:32:05.691 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6b2ef50e
[DEBUG] 2022-07-03 09:32:05.694 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2ef041bb
[DEBUG] 2022-07-03 09:32:05.694 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2ef041bb
[DEBUG] 2022-07-03 09:32:05.695 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6d815fb7
[DEBUG] 2022-07-03 09:32:05.695 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6d815fb7
[DEBUG] 2022-07-03 09:32:05.696 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7e050be1
[DEBUG] 2022-07-03 09:32:05.697 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7e050be1
[DEBUG] 2022-07-03 09:32:05.700 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@adafe19
[DEBUG] 2022-07-03 09:32:05.700 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@adafe19
[DEBUG] 2022-07-03 09:32:05.701 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@d504137
[DEBUG] 2022-07-03 09:32:05.701 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@d504137
[DEBUG] 2022-07-03 09:32:05.702 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3db1ce78
[DEBUG] 2022-07-03 09:32:05.702 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3db1ce78
[DEBUG] 2022-07-03 09:32:05.703 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@c732e1c
[DEBUG] 2022-07-03 09:32:05.704 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@c732e1c
[DEBUG] 2022-07-03 09:32:05.705 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c262f2f
[DEBUG] 2022-07-03 09:32:05.705 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c262f2f
[DEBUG] 2022-07-03 09:32:05.706 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@56835f2f
[DEBUG] 2022-07-03 09:32:05.706 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@56835f2f
[DEBUG] 2022-07-03 09:32:05.706 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@56835f2f
[DEBUG] 2022-07-03 09:32:05.708 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@58882a93
[DEBUG] 2022-07-03 09:32:05.712 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@bd4ee01
[DEBUG] 2022-07-03 09:32:05.713 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@bd4ee01
[DEBUG] 2022-07-03 09:32:05.713 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@bd4ee01
[DEBUG] 2022-07-03 09:32:05.714 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4cfcac13
[DEBUG] 2022-07-03 09:32:05.715 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@13fe5bb7
[DEBUG] 2022-07-03 09:32:05.716 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@18715bb
[DEBUG] 2022-07-03 09:32:05.716 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@18715bb
[DEBUG] 2022-07-03 09:32:05.718 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@cec590c
[DEBUG] 2022-07-03 09:32:05.719 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@cec590c
[DEBUG] 2022-07-03 09:32:05.722 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@27896d3b
[DEBUG] 2022-07-03 09:32:05.723 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@27896d3b
[DEBUG] 2022-07-03 09:32:05.723 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@69ba3f4e
[DEBUG] 2022-07-03 09:32:05.723 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@69ba3f4e
[DEBUG] 2022-07-03 09:32:05.724 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@30517a57
[DEBUG] 2022-07-03 09:32:05.724 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@30517a57
[DEBUG] 2022-07-03 09:32:05.724 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3df77dfa
[DEBUG] 2022-07-03 09:32:05.725 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@455f4483
[DEBUG] 2022-07-03 09:32:05.728 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@455f4483
[DEBUG] 2022-07-03 09:32:05.729 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@455f4483
[DEBUG] 2022-07-03 09:32:05.730 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1377b1a0
[DEBUG] 2022-07-03 09:32:05.730 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1377b1a0
[DEBUG] 2022-07-03 09:32:05.730 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1377b1a0
[DEBUG] 2022-07-03 09:32:05.731 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52a67293
[DEBUG] 2022-07-03 09:32:05.731 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@67afe909
[DEBUG] 2022-07-03 09:32:05.732 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3212d853
[DEBUG] 2022-07-03 09:32:05.737 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3212d853
[DEBUG] 2022-07-03 09:32:05.737 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3212d853
[DEBUG] 2022-07-03 09:32:05.738 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@612af486
[DEBUG] 2022-07-03 09:32:05.738 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@612af486
[DEBUG] 2022-07-03 09:32:05.738 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@612af486
[DEBUG] 2022-07-03 09:32:05.738 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@38c10190
[DEBUG] 2022-07-03 09:32:05.739 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5eeee124
[DEBUG] 2022-07-03 09:32:05.739 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@14b5752f
[DEBUG] 2022-07-03 09:32:05.741 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@14b5752f
[DEBUG] 2022-07-03 09:32:05.742 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@5ab7ac02
[DEBUG] 2022-07-03 09:32:05.743 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@50ff7063
[DEBUG] 2022-07-03 09:32:05.743 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@50ff7063
[DEBUG] 2022-07-03 09:32:05.744 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@619c3546
[DEBUG] 2022-07-03 09:32:05.744 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@619c3546
[DEBUG] 2022-07-03 09:32:05.744 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1d944fc0
[DEBUG] 2022-07-03 09:32:05.745 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2af9a5ef
[DEBUG] 2022-07-03 09:32:05.748 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1b475663
[DEBUG] 2022-07-03 09:32:05.750 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2d24cdd9
[DEBUG] 2022-07-03 09:32:05.751 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2d24cdd9
[DEBUG] 2022-07-03 09:32:05.751 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27d73d22
[DEBUG] 2022-07-03 09:32:05.751 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7fd751de
[DEBUG] 2022-07-03 09:32:05.751 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e162a35
[DEBUG] 2022-07-03 09:32:05.751 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1124910c
[DEBUG] 2022-07-03 09:32:05.752 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@f849027
[DEBUG] 2022-07-03 09:32:05.752 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@75e0a54c
[DEBUG] 2022-07-03 09:32:05.753 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@40f9f60d
[DEBUG] 2022-07-03 09:32:05.753 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bd7439d
[INFO ] 2022-07-03 09:32:05.805 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:32:05.934 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:32:05.956 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:32:05.966 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:32:06.031 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@6076c66 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:32:06.079 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ffb0d10] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3982206a]
[DEBUG] 2022-07-03 09:32:06.374 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:32:06.376 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:32:06.376 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:32:06.376 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:32:06.378 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:32:06.378 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ffb0d10] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1aa59698]
[INFO ] 2022-07-03 09:32:06.976 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:32:06.986 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1aa59698] for TypeConfiguration
[INFO ] 2022-07-03 09:32:06.987 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:32:08.257 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:32:08.805 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:32:08.832 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:32:08.854 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.935 seconds (JVM running for 8.498)
[INFO ] 2022-07-03 09:32:11.154 [http-nio-8080-exec-3] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:32:11.155 [http-nio-8080-exec-3] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:32:11.175 [http-nio-8080-exec-3] DispatcherServlet - Completed initialization in 19 ms
[TRACE] 2022-07-03 09:32:11.484 [http-nio-8080-exec-3] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:32:11.490 [http-nio-8080-exec-3] BasicExtractor - extracted value ([col_0_0_] : [INTEGER]) - [32]
[TRACE] 2022-07-03 09:34:05.368 [http-nio-8080-exec-5] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:34:05.370 [http-nio-8080-exec-5] BasicExtractor - extracted value ([col_0_0_] : [INTEGER]) - [32]
[TRACE] 2022-07-03 09:37:38.208 [http-nio-8080-exec-7] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:37:38.218 [http-nio-8080-exec-7] BasicExtractor - extracted value ([col_0_0_] : [INTEGER]) - [32]
[INFO ] 2022-07-03 09:37:56.985 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:37:56.986 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1aa59698] for TypeConfiguration
[DEBUG] 2022-07-03 09:37:56.986 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@28752e93] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1aa59698]
[INFO ] 2022-07-03 09:37:56.993 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:37:57.015 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:38:04.745 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88551 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:38:04.780 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:38:05.954 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:38:06.107 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:38:07.065 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:38:07.083 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:38:07.084 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:38:07.084 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:38:07.232 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:38:07.233 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2394 ms
[INFO ] 2022-07-03 09:38:07.507 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:38:07.557 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:38:07.720 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:38:07.741 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:38:07.742 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:38:07.742 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3dc82e6a
[DEBUG] 2022-07-03 09:38:07.742 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@46d1b59
[DEBUG] 2022-07-03 09:38:07.746 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12365bd8
[DEBUG] 2022-07-03 09:38:07.747 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@30fbc23
[DEBUG] 2022-07-03 09:38:07.748 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:38:07.748 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:38:07.749 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:38:07.749 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:38:07.749 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:38:07.750 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@352f6727
[DEBUG] 2022-07-03 09:38:07.752 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:38:07.752 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:38:07.752 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:38:07.753 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:38:07.753 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:38:07.753 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56ec6960
[DEBUG] 2022-07-03 09:38:07.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:38:07.754 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:38:07.756 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5889fc44
[DEBUG] 2022-07-03 09:38:07.758 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:38:07.758 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:38:07.758 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:38:07.759 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:38:07.759 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:38:07.759 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7e27f603
[DEBUG] 2022-07-03 09:38:07.760 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-03 09:38:07.761 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5103eea2
[DEBUG] 2022-07-03 09:38:07.763 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@46b6701e
[DEBUG] 2022-07-03 09:38:07.763 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@46b6701e
[DEBUG] 2022-07-03 09:38:07.764 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-03 09:38:07.764 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1552da16
[DEBUG] 2022-07-03 09:38:07.765 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@29b5533
[DEBUG] 2022-07-03 09:38:07.765 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@794c5f5e
[DEBUG] 2022-07-03 09:38:07.766 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-03 09:38:07.767 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7534785a
[DEBUG] 2022-07-03 09:38:07.769 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5f409872
[DEBUG] 2022-07-03 09:38:07.769 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f409872
[DEBUG] 2022-07-03 09:38:07.770 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-03 09:38:07.770 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2a6fb62f
[DEBUG] 2022-07-03 09:38:07.771 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-03 09:38:07.771 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3356ff58
[DEBUG] 2022-07-03 09:38:07.772 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-03 09:38:07.773 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48a46b0f
[DEBUG] 2022-07-03 09:38:07.774 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@75527e36
[DEBUG] 2022-07-03 09:38:07.775 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@75527e36
[DEBUG] 2022-07-03 09:38:07.776 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-03 09:38:07.776 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@40016ce1
[DEBUG] 2022-07-03 09:38:07.777 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-03 09:38:07.777 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3b39e79b
[DEBUG] 2022-07-03 09:38:07.780 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60c96eb4
[DEBUG] 2022-07-03 09:38:07.780 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60c96eb4
[DEBUG] 2022-07-03 09:38:07.781 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a6d1ff3
[DEBUG] 2022-07-03 09:38:07.781 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a6d1ff3
[DEBUG] 2022-07-03 09:38:07.782 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-03 09:38:07.782 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68e24e7
[DEBUG] 2022-07-03 09:38:07.783 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:38:07.785 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:38:07.786 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@308e87a1
[DEBUG] 2022-07-03 09:38:07.789 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3be80ece
[DEBUG] 2022-07-03 09:38:07.789 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:38:07.789 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:38:07.790 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:38:07.790 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@67eeb310
[DEBUG] 2022-07-03 09:38:07.790 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@456aa471
[DEBUG] 2022-07-03 09:38:07.792 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-03 09:38:07.793 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@51f01535
[DEBUG] 2022-07-03 09:38:07.794 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@49190ed6
[DEBUG] 2022-07-03 09:38:07.795 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49190ed6
[DEBUG] 2022-07-03 09:38:07.795 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-03 09:38:07.796 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2342f1ff
[DEBUG] 2022-07-03 09:38:07.796 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-03 09:38:07.796 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@701d2b59
[DEBUG] 2022-07-03 09:38:07.797 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-03 09:38:07.799 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e9a10cd
[DEBUG] 2022-07-03 09:38:07.800 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a826ff8
[DEBUG] 2022-07-03 09:38:07.805 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:38:07.805 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:38:07.805 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:38:07.806 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:38:07.806 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:38:07.806 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@368424db
[DEBUG] 2022-07-03 09:38:07.807 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@d1c5cf2
[DEBUG] 2022-07-03 09:38:07.813 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@27dbaa33
[DEBUG] 2022-07-03 09:38:07.814 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:38:07.814 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:38:07.814 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:38:07.815 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:38:07.815 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:38:07.815 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@60fc7f43
[DEBUG] 2022-07-03 09:38:07.816 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d17914a
[DEBUG] 2022-07-03 09:38:07.817 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@30ffb2a6
[DEBUG] 2022-07-03 09:38:07.818 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@62cd562d
[DEBUG] 2022-07-03 09:38:07.818 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62cd562d
[DEBUG] 2022-07-03 09:38:07.818 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6fc1a8f6
[DEBUG] 2022-07-03 09:38:07.820 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-03 09:38:07.820 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5ab7ac02
[DEBUG] 2022-07-03 09:38:07.821 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-03 09:38:07.822 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@50ff7063
[DEBUG] 2022-07-03 09:38:07.823 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2fc7fa6e
[DEBUG] 2022-07-03 09:38:07.824 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7cca31fc
[DEBUG] 2022-07-03 09:38:07.825 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@34f23816
[DEBUG] 2022-07-03 09:38:07.827 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-03 09:38:07.827 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@58e03769
[DEBUG] 2022-07-03 09:38:07.828 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-03 09:38:07.828 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-03 09:38:07.830 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-03 09:38:07.830 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-03 09:38:07.830 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49e479da
[DEBUG] 2022-07-03 09:38:07.830 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2d24cdd9
[DEBUG] 2022-07-03 09:38:07.830 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@30dd00b6
[DEBUG] 2022-07-03 09:38:07.831 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4656fcc5
[INFO ] 2022-07-03 09:38:07.902 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:38:08.038 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:38:08.063 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:38:08.079 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:38:08.119 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@18db3b3c marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:38:08.165 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63bca84d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6141647f]
[DEBUG] 2022-07-03 09:38:08.457 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:38:08.458 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:38:08.458 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:38:08.458 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:38:08.459 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:38:08.460 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63bca84d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@398694a6]
[INFO ] 2022-07-03 09:38:09.023 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:38:09.031 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@398694a6] for TypeConfiguration
[INFO ] 2022-07-03 09:38:09.033 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:38:10.301 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:38:10.747 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:38:10.768 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:38:10.784 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.739 seconds (JVM running for 8.341)
[INFO ] 2022-07-03 09:40:41.976 [http-nio-8080-exec-1] [/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:40:41.978 [http-nio-8080-exec-1] DispatcherServlet - Initializing Servlet 'dispatcherServlet'
[INFO ] 2022-07-03 09:40:41.984 [http-nio-8080-exec-1] DispatcherServlet - Completed initialization in 6 ms
[TRACE] 2022-07-03 09:40:42.303 [http-nio-8080-exec-1] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:40:42.310 [http-nio-8080-exec-1] BasicExtractor - extracted value ([col_0_0_] : [INTEGER]) - [32]
[TRACE] 2022-07-03 09:40:45.201 [http-nio-8080-exec-2] BasicBinder - binding parameter [1] as [VARCHAR] - [3ede0ef2-92b7-4817-a5f3-0c575361f745]
[TRACE] 2022-07-03 09:40:45.202 [http-nio-8080-exec-2] BasicExtractor - extracted value ([col_0_0_] : [INTEGER]) - [32]
[INFO ] 2022-07-03 09:40:58.586 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:40:58.593 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@398694a6] for TypeConfiguration
[DEBUG] 2022-07-03 09:40:58.595 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6122b452] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@398694a6]
[INFO ] 2022-07-03 09:40:58.603 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:40:58.615 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:41:07.701 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88627 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:41:07.723 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:41:09.043 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:41:09.219 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 158 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:41:10.236 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:41:10.256 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:41:10.257 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:41:10.258 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:41:10.418 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:41:10.419 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2628 ms
[INFO ] 2022-07-03 09:41:10.686 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:41:10.736 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:41:10.897 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:41:10.921 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54463380
[DEBUG] 2022-07-03 09:41:10.921 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@54463380
[DEBUG] 2022-07-03 09:41:10.921 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54463380
[DEBUG] 2022-07-03 09:41:10.922 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@61d2f267
[DEBUG] 2022-07-03 09:41:10.923 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@12365bd8
[DEBUG] 2022-07-03 09:41:10.923 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@30fbc23
[DEBUG] 2022-07-03 09:41:10.924 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:41:10.926 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:41:10.927 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7e58f697
[DEBUG] 2022-07-03 09:41:10.928 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@2ab9e43e
[DEBUG] 2022-07-03 09:41:10.929 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@2ab9e43e
[DEBUG] 2022-07-03 09:41:10.929 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2ab9e43e
[DEBUG] 2022-07-03 09:41:10.930 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:41:10.931 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:41:10.931 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@5a06904
[DEBUG] 2022-07-03 09:41:10.933 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@7f8c3646
[DEBUG] 2022-07-03 09:41:10.933 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@7f8c3646
[DEBUG] 2022-07-03 09:41:10.934 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7f8c3646
[DEBUG] 2022-07-03 09:41:10.934 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6598caab
[DEBUG] 2022-07-03 09:41:10.934 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6598caab
[DEBUG] 2022-07-03 09:41:10.935 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6598caab
[DEBUG] 2022-07-03 09:41:10.936 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:41:10.936 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:41:10.936 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4522d793
[DEBUG] 2022-07-03 09:41:10.938 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6136e1fc
[DEBUG] 2022-07-03 09:41:10.939 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6136e1fc
[DEBUG] 2022-07-03 09:41:10.939 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6136e1fc
[DEBUG] 2022-07-03 09:41:10.939 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@762405bf
[DEBUG] 2022-07-03 09:41:10.939 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@762405bf
[DEBUG] 2022-07-03 09:41:10.940 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@46b6701e
[DEBUG] 2022-07-03 09:41:10.940 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@46b6701e
[DEBUG] 2022-07-03 09:41:10.942 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@78318ac2
[DEBUG] 2022-07-03 09:41:10.942 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@78318ac2
[DEBUG] 2022-07-03 09:41:10.943 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7608a838
[DEBUG] 2022-07-03 09:41:10.943 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4ab66127
[DEBUG] 2022-07-03 09:41:10.943 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@46b5f061
[DEBUG] 2022-07-03 09:41:10.944 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@46b5f061
[DEBUG] 2022-07-03 09:41:10.944 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@5f409872
[DEBUG] 2022-07-03 09:41:10.945 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5f409872
[DEBUG] 2022-07-03 09:41:10.946 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@65e4cb84
[DEBUG] 2022-07-03 09:41:10.947 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@65e4cb84
[DEBUG] 2022-07-03 09:41:10.948 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@b55f5b7
[DEBUG] 2022-07-03 09:41:10.948 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@b55f5b7
[DEBUG] 2022-07-03 09:41:10.949 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1426370c
[DEBUG] 2022-07-03 09:41:10.949 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1426370c
[DEBUG] 2022-07-03 09:41:10.949 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@75527e36
[DEBUG] 2022-07-03 09:41:10.950 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@75527e36
[DEBUG] 2022-07-03 09:41:10.952 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@203765b2
[DEBUG] 2022-07-03 09:41:10.952 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@203765b2
[DEBUG] 2022-07-03 09:41:10.953 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@3ee6dc82
[DEBUG] 2022-07-03 09:41:10.953 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@3ee6dc82
[DEBUG] 2022-07-03 09:41:10.954 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60c96eb4
[DEBUG] 2022-07-03 09:41:10.954 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@60c96eb4
[DEBUG] 2022-07-03 09:41:10.955 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@6a6d1ff3
[DEBUG] 2022-07-03 09:41:10.955 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@6a6d1ff3
[DEBUG] 2022-07-03 09:41:10.959 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@c732e1c
[DEBUG] 2022-07-03 09:41:10.960 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@c732e1c
[DEBUG] 2022-07-03 09:41:10.963 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@66298fe9
[DEBUG] 2022-07-03 09:41:10.966 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@66298fe9
[DEBUG] 2022-07-03 09:41:10.966 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@66298fe9
[DEBUG] 2022-07-03 09:41:10.971 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3be80ece
[DEBUG] 2022-07-03 09:41:10.972 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:41:10.975 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:41:10.975 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@14be750c
[DEBUG] 2022-07-03 09:41:10.976 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@76af51d6
[DEBUG] 2022-07-03 09:41:10.977 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@69e2fe3b
[DEBUG] 2022-07-03 09:41:10.978 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2321e482
[DEBUG] 2022-07-03 09:41:10.978 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2321e482
[DEBUG] 2022-07-03 09:41:10.979 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@49190ed6
[DEBUG] 2022-07-03 09:41:10.981 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@49190ed6
[DEBUG] 2022-07-03 09:41:10.984 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3303e89e
[DEBUG] 2022-07-03 09:41:10.985 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3303e89e
[DEBUG] 2022-07-03 09:41:10.986 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1999149e
[DEBUG] 2022-07-03 09:41:10.986 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1999149e
[DEBUG] 2022-07-03 09:41:10.986 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6ea66c33
[DEBUG] 2022-07-03 09:41:10.986 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6ea66c33
[DEBUG] 2022-07-03 09:41:10.987 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@a826ff8
[DEBUG] 2022-07-03 09:41:10.987 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:41:10.990 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:41:10.990 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@64f3ca6
[DEBUG] 2022-07-03 09:41:10.991 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@44864536
[DEBUG] 2022-07-03 09:41:10.992 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@44864536
[DEBUG] 2022-07-03 09:41:10.992 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@44864536
[DEBUG] 2022-07-03 09:41:10.992 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@d1c5cf2
[DEBUG] 2022-07-03 09:41:10.992 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@27dbaa33
[DEBUG] 2022-07-03 09:41:10.993 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:41:10.996 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:41:10.997 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@38f502fc
[DEBUG] 2022-07-03 09:41:10.998 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@16e195cf
[DEBUG] 2022-07-03 09:41:10.998 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@16e195cf
[DEBUG] 2022-07-03 09:41:10.998 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@16e195cf
[DEBUG] 2022-07-03 09:41:10.999 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6d17914a
[DEBUG] 2022-07-03 09:41:10.999 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@30ffb2a6
[DEBUG] 2022-07-03 09:41:11.000 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@62cd562d
[DEBUG] 2022-07-03 09:41:11.001 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@62cd562d
[DEBUG] 2022-07-03 09:41:11.002 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3095d401
[DEBUG] 2022-07-03 09:41:11.004 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4abbe41c
[DEBUG] 2022-07-03 09:41:11.004 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4abbe41c
[DEBUG] 2022-07-03 09:41:11.005 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67a8bcbb
[DEBUG] 2022-07-03 09:41:11.005 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67a8bcbb
[DEBUG] 2022-07-03 09:41:11.005 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@2fc7fa6e
[DEBUG] 2022-07-03 09:41:11.005 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7cca31fc
[DEBUG] 2022-07-03 09:41:11.008 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6736f40f
[DEBUG] 2022-07-03 09:41:11.010 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5a899811
[DEBUG] 2022-07-03 09:41:11.011 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5a899811
[DEBUG] 2022-07-03 09:41:11.011 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4e2cdc51
[DEBUG] 2022-07-03 09:41:11.011 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-03 09:41:11.011 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-03 09:41:11.012 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-03 09:41:11.012 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@49e479da
[DEBUG] 2022-07-03 09:41:11.012 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@30dd00b6
[DEBUG] 2022-07-03 09:41:11.012 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4656fcc5
[DEBUG] 2022-07-03 09:41:11.013 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c16677c
[INFO ] 2022-07-03 09:41:11.072 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:41:11.189 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:41:11.209 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:41:11.216 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:41:11.279 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@18db3b3c marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:41:11.344 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63bca84d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6141647f]
[DEBUG] 2022-07-03 09:41:11.656 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:41:11.658 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:41:11.658 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:41:11.658 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:41:11.660 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:41:11.660 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@63bca84d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@16d61071]
[INFO ] 2022-07-03 09:41:12.256 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:41:12.265 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@16d61071] for TypeConfiguration
[INFO ] 2022-07-03 09:41:12.267 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:41:13.421 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:41:13.956 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:41:13.988 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:41:14.004 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.997 seconds (JVM running for 8.729)
[INFO ] 2022-07-03 09:52:35.555 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 09:52:35.558 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@16d61071] for TypeConfiguration
[DEBUG] 2022-07-03 09:52:35.561 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@77559d7d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@16d61071]
[INFO ] 2022-07-03 09:52:35.566 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 09:52:35.580 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 09:52:44.139 [main] TravelerClubMileageApplication - Starting TravelerClubMileageApplication using Java 11.0.14 on PCs-MacBook-Pro.local with PID 88816 (/Users/baeseoeun/workspace/traveler-club-mileage/build/classes/java/main started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 09:52:44.170 [main] TravelerClubMileageApplication - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 09:52:45.439 [main] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 09:52:45.598 [main] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 145 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 09:52:46.573 [main] TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
[INFO ] 2022-07-03 09:52:46.593 [main] Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:52:46.595 [main] StandardService - Starting service [Tomcat]
[INFO ] 2022-07-03 09:52:46.595 [main] StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.64]
[INFO ] 2022-07-03 09:52:46.759 [main] [/] - Initializing Spring embedded WebApplicationContext
[INFO ] 2022-07-03 09:52:46.760 [main] ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2505 ms
[INFO ] 2022-07-03 09:52:47.013 [main] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 09:52:47.060 [main] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 09:52:47.224 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 09:52:47.252 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@360d41d0
[DEBUG] 2022-07-03 09:52:47.252 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@360d41d0
[DEBUG] 2022-07-03 09:52:47.252 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@360d41d0
[DEBUG] 2022-07-03 09:52:47.253 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@819fb19
[DEBUG] 2022-07-03 09:52:47.255 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@85ab964
[DEBUG] 2022-07-03 09:52:47.259 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@49cb5030
[DEBUG] 2022-07-03 09:52:47.260 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:52:47.260 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:52:47.260 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2c34402
[DEBUG] 2022-07-03 09:52:47.262 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@7d88fa9c
[DEBUG] 2022-07-03 09:52:47.262 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@7d88fa9c
[DEBUG] 2022-07-03 09:52:47.262 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@7d88fa9c
[DEBUG] 2022-07-03 09:52:47.266 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:52:47.266 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:52:47.267 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@9f0fc36
[DEBUG] 2022-07-03 09:52:47.270 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@286866cb
[DEBUG] 2022-07-03 09:52:47.270 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@286866cb
[DEBUG] 2022-07-03 09:52:47.270 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@286866cb
[DEBUG] 2022-07-03 09:52:47.271 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@184751f3
[DEBUG] 2022-07-03 09:52:47.272 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@184751f3
[DEBUG] 2022-07-03 09:52:47.274 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@184751f3
[DEBUG] 2022-07-03 09:52:47.276 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:52:47.276 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:52:47.276 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@37c2f0b4
[DEBUG] 2022-07-03 09:52:47.277 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5da57a64
[DEBUG] 2022-07-03 09:52:47.277 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5da57a64
[DEBUG] 2022-07-03 09:52:47.277 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5da57a64
[DEBUG] 2022-07-03 09:52:47.277 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2565a7d0
[DEBUG] 2022-07-03 09:52:47.278 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2565a7d0
[DEBUG] 2022-07-03 09:52:47.280 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4cd7d5e1
[DEBUG] 2022-07-03 09:52:47.281 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4cd7d5e1
[DEBUG] 2022-07-03 09:52:47.282 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@775f15fd
[DEBUG] 2022-07-03 09:52:47.282 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@775f15fd
[DEBUG] 2022-07-03 09:52:47.282 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@77ce88c4
[DEBUG] 2022-07-03 09:52:47.283 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@75839695
[DEBUG] 2022-07-03 09:52:47.283 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@55951fcd
[DEBUG] 2022-07-03 09:52:47.284 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@55951fcd
[DEBUG] 2022-07-03 09:52:47.287 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@b5312df
[DEBUG] 2022-07-03 09:52:47.287 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@b5312df
[DEBUG] 2022-07-03 09:52:47.288 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5908e6d6
[DEBUG] 2022-07-03 09:52:47.289 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5908e6d6
[DEBUG] 2022-07-03 09:52:47.290 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4afd65fd
[DEBUG] 2022-07-03 09:52:47.290 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4afd65fd
[DEBUG] 2022-07-03 09:52:47.291 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4b5ad306
[DEBUG] 2022-07-03 09:52:47.292 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4b5ad306
[DEBUG] 2022-07-03 09:52:47.294 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@21c75084
[DEBUG] 2022-07-03 09:52:47.295 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@21c75084
[DEBUG] 2022-07-03 09:52:47.295 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a9a8ec3
[DEBUG] 2022-07-03 09:52:47.295 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@a9a8ec3
[DEBUG] 2022-07-03 09:52:47.296 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4b6b5352
[DEBUG] 2022-07-03 09:52:47.296 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4b6b5352
[DEBUG] 2022-07-03 09:52:47.297 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15c16f19
[DEBUG] 2022-07-03 09:52:47.298 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@15c16f19
[DEBUG] 2022-07-03 09:52:47.300 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3db1ce78
[DEBUG] 2022-07-03 09:52:47.300 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3db1ce78
[DEBUG] 2022-07-03 09:52:47.301 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@48c5698
[DEBUG] 2022-07-03 09:52:47.301 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@48c5698
[DEBUG] 2022-07-03 09:52:47.302 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@322b09da
[DEBUG] 2022-07-03 09:52:47.302 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@322b09da
[DEBUG] 2022-07-03 09:52:47.302 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@322b09da
[DEBUG] 2022-07-03 09:52:47.306 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5563bb40
[DEBUG] 2022-07-03 09:52:47.308 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:52:47.308 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:52:47.308 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@40f1aa95
[DEBUG] 2022-07-03 09:52:47.309 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@19dac2d6
[DEBUG] 2022-07-03 09:52:47.309 [main] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7f93f4c
[DEBUG] 2022-07-03 09:52:47.310 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@22c8ee48
[DEBUG] 2022-07-03 09:52:47.310 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@22c8ee48
[DEBUG] 2022-07-03 09:52:47.313 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5fb07347
[DEBUG] 2022-07-03 09:52:47.314 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5fb07347
[DEBUG] 2022-07-03 09:52:47.316 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7d284f15
[DEBUG] 2022-07-03 09:52:47.318 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7d284f15
[DEBUG] 2022-07-03 09:52:47.318 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@d62472f
[DEBUG] 2022-07-03 09:52:47.319 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@d62472f
[DEBUG] 2022-07-03 09:52:47.319 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6f3b13d0
[DEBUG] 2022-07-03 09:52:47.320 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6f3b13d0
[DEBUG] 2022-07-03 09:52:47.322 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@69ba3f4e
[DEBUG] 2022-07-03 09:52:47.324 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:52:47.324 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:52:47.324 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3dde5f38
[DEBUG] 2022-07-03 09:52:47.325 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1a536164
[DEBUG] 2022-07-03 09:52:47.325 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1a536164
[DEBUG] 2022-07-03 09:52:47.325 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1a536164
[DEBUG] 2022-07-03 09:52:47.326 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@fcf9525
[DEBUG] 2022-07-03 09:52:47.327 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1377b1a0
[DEBUG] 2022-07-03 09:52:47.331 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:52:47.331 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:52:47.331 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52a67293
[DEBUG] 2022-07-03 09:52:47.331 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e154848
[DEBUG] 2022-07-03 09:52:47.331 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e154848
[DEBUG] 2022-07-03 09:52:47.332 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e154848
[DEBUG] 2022-07-03 09:52:47.332 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3212d853
[DEBUG] 2022-07-03 09:52:47.333 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@77b71c9
[DEBUG] 2022-07-03 09:52:47.335 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6e93b0e7
[DEBUG] 2022-07-03 09:52:47.335 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6e93b0e7
[DEBUG] 2022-07-03 09:52:47.335 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@4e7bc939
[DEBUG] 2022-07-03 09:52:47.336 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4d290757
[DEBUG] 2022-07-03 09:52:47.336 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4d290757
[DEBUG] 2022-07-03 09:52:47.337 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@5e24592e
[DEBUG] 2022-07-03 09:52:47.337 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5e24592e
[DEBUG] 2022-07-03 09:52:47.340 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@26ffd2c0
[DEBUG] 2022-07-03 09:52:47.341 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@273dec10
[DEBUG] 2022-07-03 09:52:47.342 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@15ac02d5
[DEBUG] 2022-07-03 09:52:47.344 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@28831d69
[DEBUG] 2022-07-03 09:52:47.344 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@28831d69
[DEBUG] 2022-07-03 09:52:47.345 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6a51ae7c
[DEBUG] 2022-07-03 09:52:47.345 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@171aa66
[DEBUG] 2022-07-03 09:52:47.345 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@58739e5e
[DEBUG] 2022-07-03 09:52:47.347 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2969a9a6
[DEBUG] 2022-07-03 09:52:47.348 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@25470477
[DEBUG] 2022-07-03 09:52:47.348 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6182ffef
[DEBUG] 2022-07-03 09:52:47.348 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@49e479da
[DEBUG] 2022-07-03 09:52:47.348 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d24cdd9
[INFO ] 2022-07-03 09:52:47.405 [main] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 09:52:47.510 [main] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 09:52:47.528 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 09:52:47.540 [main] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 09:52:47.644 [main] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@71fb8301 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1306) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1295) ~[spring-boot-2.7.1.jar:2.7.1]
	at com.triple.travelerclubmileage.TravelerClubMileageApplication.main(TravelerClubMileageApplication.java:12) ~[main/:?]
[DEBUG] 2022-07-03 09:52:47.691 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@191e654] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a6556b6]
[DEBUG] 2022-07-03 09:52:47.966 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 09:52:47.968 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 09:52:47.968 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 09:52:47.968 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 09:52:47.969 [main] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 09:52:47.970 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@191e654] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@398694a6]
[INFO ] 2022-07-03 09:52:48.553 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 09:52:48.563 [main] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@398694a6] for TypeConfiguration
[INFO ] 2022-07-03 09:52:48.565 [main] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 09:52:49.794 [main] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 09:52:50.262 [main] Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
[INFO ] 2022-07-03 09:52:50.282 [main] TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
[INFO ] 2022-07-03 09:52:50.305 [main] TravelerClubMileageApplication - Started TravelerClubMileageApplication in 6.843 seconds (JVM running for 8.512)
[WARN ] 2022-07-03 10:15:40.007 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s266ms).
[WARN ] 2022-07-03 10:29:22.425 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=7m42s382ms).
[WARN ] 2022-07-03 10:45:05.587 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=12m43s142ms).
[WARN ] 2022-07-03 11:01:08.541 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=16m2s956ms).
[INFO ] 2022-07-03 11:39:50.512 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.TravelerClubMileageApplicationTests], using SpringBootContextLoader
[INFO ] 2022-07-03 11:39:50.528 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.TravelerClubMileageApplicationTests]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 11:39:50.534 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.TravelerClubMileageApplicationTests]: TravelerClubMileageApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 11:39:50.691 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.TravelerClubMileageApplicationTests
[INFO ] 2022-07-03 11:39:50.783 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 11:39:50.798 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@59e43e8c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2caa5d7c, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5e671e20, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3eabe84a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@46c3a14d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@38fc5554, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5e8cda75, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f049056, org.springframework.test.context.event.EventPublishingTestExecutionListener@64968732, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3e1a3801, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6fd12c5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1de0a46c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4d1f1ff5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@222afc67, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4c2fb9dd]
[INFO ] 2022-07-03 11:39:51.367 [Test worker] TravelerClubMileageApplicationTests - Starting TravelerClubMileageApplicationTests using Java 11.0.14 on PCs-MacBook-Pro.local with PID 90394 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 11:39:51.385 [Test worker] TravelerClubMileageApplicationTests - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 11:39:52.519 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 11:39:52.664 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 135 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 11:39:53.654 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 11:39:53.740 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 11:39:53.921 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 11:39:53.948 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a7d0c9f
[DEBUG] 2022-07-03 11:39:53.954 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1a7d0c9f
[DEBUG] 2022-07-03 11:39:53.955 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1a7d0c9f
[DEBUG] 2022-07-03 11:39:53.957 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@258a8584
[DEBUG] 2022-07-03 11:39:53.959 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5c0e2ec
[DEBUG] 2022-07-03 11:39:53.960 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@344f9467
[DEBUG] 2022-07-03 11:39:53.961 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@55e42684
[DEBUG] 2022-07-03 11:39:53.962 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@55e42684
[DEBUG] 2022-07-03 11:39:53.962 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@55e42684
[DEBUG] 2022-07-03 11:39:53.965 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@38ef1a0a
[DEBUG] 2022-07-03 11:39:53.966 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@38ef1a0a
[DEBUG] 2022-07-03 11:39:53.966 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@38ef1a0a
[DEBUG] 2022-07-03 11:39:53.967 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27db45f
[DEBUG] 2022-07-03 11:39:53.967 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@27db45f
[DEBUG] 2022-07-03 11:39:53.967 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@27db45f
[DEBUG] 2022-07-03 11:39:53.969 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1ed9d173
[DEBUG] 2022-07-03 11:39:53.969 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1ed9d173
[DEBUG] 2022-07-03 11:39:53.970 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1ed9d173
[DEBUG] 2022-07-03 11:39:53.972 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4af70b83
[DEBUG] 2022-07-03 11:39:53.972 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4af70b83
[DEBUG] 2022-07-03 11:39:53.972 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4af70b83
[DEBUG] 2022-07-03 11:39:53.973 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@224e6e88
[DEBUG] 2022-07-03 11:39:53.973 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@224e6e88
[DEBUG] 2022-07-03 11:39:53.973 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@224e6e88
[DEBUG] 2022-07-03 11:39:53.974 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6115846e
[DEBUG] 2022-07-03 11:39:53.975 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6115846e
[DEBUG] 2022-07-03 11:39:53.976 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6115846e
[DEBUG] 2022-07-03 11:39:53.976 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@632d4cf2
[DEBUG] 2022-07-03 11:39:53.977 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@632d4cf2
[DEBUG] 2022-07-03 11:39:53.977 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6b9a1205
[DEBUG] 2022-07-03 11:39:53.978 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6b9a1205
[DEBUG] 2022-07-03 11:39:53.978 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@536da29c
[DEBUG] 2022-07-03 11:39:53.980 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@536da29c
[DEBUG] 2022-07-03 11:39:53.980 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4a122e68
[DEBUG] 2022-07-03 11:39:53.981 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1de85972
[DEBUG] 2022-07-03 11:39:53.981 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4aab7195
[DEBUG] 2022-07-03 11:39:53.983 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4aab7195
[DEBUG] 2022-07-03 11:39:53.983 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@15f519f7
[DEBUG] 2022-07-03 11:39:53.984 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@15f519f7
[DEBUG] 2022-07-03 11:39:53.985 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@19d27c27
[DEBUG] 2022-07-03 11:39:53.987 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19d27c27
[DEBUG] 2022-07-03 11:39:53.988 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@c4cceb
[DEBUG] 2022-07-03 11:39:53.988 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@c4cceb
[DEBUG] 2022-07-03 11:39:53.989 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@693f2c89
[DEBUG] 2022-07-03 11:39:53.989 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@693f2c89
[DEBUG] 2022-07-03 11:39:53.989 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1ba35152
[DEBUG] 2022-07-03 11:39:53.990 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1ba35152
[DEBUG] 2022-07-03 11:39:53.993 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e14b53
[DEBUG] 2022-07-03 11:39:53.993 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@61e14b53
[DEBUG] 2022-07-03 11:39:53.994 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7752c0e7
[DEBUG] 2022-07-03 11:39:53.994 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7752c0e7
[DEBUG] 2022-07-03 11:39:53.996 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d07aacc
[DEBUG] 2022-07-03 11:39:53.997 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2d07aacc
[DEBUG] 2022-07-03 11:39:53.998 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1c2096c6
[DEBUG] 2022-07-03 11:39:53.999 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1c2096c6
[DEBUG] 2022-07-03 11:39:54.004 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@318e3942
[DEBUG] 2022-07-03 11:39:54.004 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@318e3942
[DEBUG] 2022-07-03 11:39:54.005 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6076c66
[DEBUG] 2022-07-03 11:39:54.005 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6076c66
[DEBUG] 2022-07-03 11:39:54.005 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6076c66
[DEBUG] 2022-07-03 11:39:54.007 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4ffa7041
[DEBUG] 2022-07-03 11:39:54.008 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@48277712
[DEBUG] 2022-07-03 11:39:54.009 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@48277712
[DEBUG] 2022-07-03 11:39:54.009 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@48277712
[DEBUG] 2022-07-03 11:39:54.011 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@311a0b3e
[DEBUG] 2022-07-03 11:39:54.012 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@749d7c01
[DEBUG] 2022-07-03 11:39:54.014 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@7e1d8d41
[DEBUG] 2022-07-03 11:39:54.015 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@7e1d8d41
[DEBUG] 2022-07-03 11:39:54.015 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@61c87f1b
[DEBUG] 2022-07-03 11:39:54.017 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61c87f1b
[DEBUG] 2022-07-03 11:39:54.019 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@4e2109fe
[DEBUG] 2022-07-03 11:39:54.020 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@4e2109fe
[DEBUG] 2022-07-03 11:39:54.020 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@362a6aa5
[DEBUG] 2022-07-03 11:39:54.021 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@362a6aa5
[DEBUG] 2022-07-03 11:39:54.022 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@687b0ddc
[DEBUG] 2022-07-03 11:39:54.022 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@687b0ddc
[DEBUG] 2022-07-03 11:39:54.024 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@52f43225
[DEBUG] 2022-07-03 11:39:54.027 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7ee12d58
[DEBUG] 2022-07-03 11:39:54.027 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7ee12d58
[DEBUG] 2022-07-03 11:39:54.027 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7ee12d58
[DEBUG] 2022-07-03 11:39:54.028 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4df0d9f8
[DEBUG] 2022-07-03 11:39:54.028 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4df0d9f8
[DEBUG] 2022-07-03 11:39:54.028 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4df0d9f8
[DEBUG] 2022-07-03 11:39:54.029 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@350567f1
[DEBUG] 2022-07-03 11:39:54.031 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@28b5662d
[DEBUG] 2022-07-03 11:39:54.033 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@191e654
[DEBUG] 2022-07-03 11:39:54.033 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@191e654
[DEBUG] 2022-07-03 11:39:54.033 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@191e654
[DEBUG] 2022-07-03 11:39:54.034 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@13dc6649
[DEBUG] 2022-07-03 11:39:54.034 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@13dc6649
[DEBUG] 2022-07-03 11:39:54.034 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@13dc6649
[DEBUG] 2022-07-03 11:39:54.036 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@3982206a
[DEBUG] 2022-07-03 11:39:54.037 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@10f20d38
[DEBUG] 2022-07-03 11:39:54.038 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@433d93e7
[DEBUG] 2022-07-03 11:39:54.039 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@433d93e7
[DEBUG] 2022-07-03 11:39:54.039 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c2883b1
[DEBUG] 2022-07-03 11:39:54.040 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@38fb151a
[DEBUG] 2022-07-03 11:39:54.040 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@38fb151a
[DEBUG] 2022-07-03 11:39:54.041 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@42f9873e
[DEBUG] 2022-07-03 11:39:54.043 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@42f9873e
[DEBUG] 2022-07-03 11:39:54.044 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@5ee6fdc4
[DEBUG] 2022-07-03 11:39:54.045 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@95cecc5
[DEBUG] 2022-07-03 11:39:54.047 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6e7e0259
[DEBUG] 2022-07-03 11:39:54.051 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@5560b64d
[DEBUG] 2022-07-03 11:39:54.052 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@5560b64d
[DEBUG] 2022-07-03 11:39:54.052 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@312f3050
[DEBUG] 2022-07-03 11:39:54.054 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@52856ff9
[DEBUG] 2022-07-03 11:39:54.056 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5aa7cfdf
[DEBUG] 2022-07-03 11:39:54.057 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1242d96b
[DEBUG] 2022-07-03 11:39:54.057 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ecdf528
[DEBUG] 2022-07-03 11:39:54.057 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@574ebdaf
[DEBUG] 2022-07-03 11:39:54.057 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33f349ae
[DEBUG] 2022-07-03 11:39:54.057 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@377e573a
[INFO ] 2022-07-03 11:39:54.120 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 11:39:54.234 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 11:39:54.255 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 11:39:54.264 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 11:39:54.298 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@77020328 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 11:39:54.350 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7bbd76b8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2248d140]
[DEBUG] 2022-07-03 11:39:54.656 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 11:39:54.657 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 11:39:54.658 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 11:39:54.658 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 11:39:54.659 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 11:39:54.660 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7bbd76b8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@621a387f]
[INFO ] 2022-07-03 11:39:55.224 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 11:39:55.235 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@621a387f] for TypeConfiguration
[INFO ] 2022-07-03 11:39:55.237 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 11:39:56.709 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 11:39:57.664 [Test worker] TravelerClubMileageApplicationTests - Started TravelerClubMileageApplicationTests in 6.818 seconds (JVM running for 9.447)
[INFO ] 2022-07-03 11:39:57.890 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 11:39:57.898 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@621a387f] for TypeConfiguration
[DEBUG] 2022-07-03 11:39:57.901 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@565cd241] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@621a387f]
[INFO ] 2022-07-03 11:39:57.906 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 11:39:57.924 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:00:37.579 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:00:37.597 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:00:37.603 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:00:37.760 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:00:37.856 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:00:37.870 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@45e1aa48, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12c60152, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2e807c54, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cd164a6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@242a209e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64469d8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b8bd798, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4c18621b, org.springframework.test.context.event.EventPublishingTestExecutionListener@39c385d6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cec219f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@692e028d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6629ad09, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@43e1692f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3e7c4815, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@27df0f3d]
[INFO ] 2022-07-03 12:00:38.434 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 90765 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:00:38.448 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:00:39.606 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:00:39.741 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:00:40.778 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:00:40.835 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:00:41.019 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:00:41.044 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@65d7eea4
[DEBUG] 2022-07-03 12:00:41.045 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@65d7eea4
[DEBUG] 2022-07-03 12:00:41.048 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@65d7eea4
[DEBUG] 2022-07-03 12:00:41.050 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72a3462f
[DEBUG] 2022-07-03 12:00:41.052 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3e4afd10
[DEBUG] 2022-07-03 12:00:41.053 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1d8be7b9
[DEBUG] 2022-07-03 12:00:41.054 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3de8f85c
[DEBUG] 2022-07-03 12:00:41.054 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@3de8f85c
[DEBUG] 2022-07-03 12:00:41.054 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3de8f85c
[DEBUG] 2022-07-03 12:00:41.055 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1d3a03fe
[DEBUG] 2022-07-03 12:00:41.057 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1d3a03fe
[DEBUG] 2022-07-03 12:00:41.057 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1d3a03fe
[DEBUG] 2022-07-03 12:00:41.059 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@750e2d33
[DEBUG] 2022-07-03 12:00:41.059 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@750e2d33
[DEBUG] 2022-07-03 12:00:41.059 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@750e2d33
[DEBUG] 2022-07-03 12:00:41.061 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@44976b08
[DEBUG] 2022-07-03 12:00:41.061 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@44976b08
[DEBUG] 2022-07-03 12:00:41.062 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@44976b08
[DEBUG] 2022-07-03 12:00:41.064 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@36cfe107
[DEBUG] 2022-07-03 12:00:41.064 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@36cfe107
[DEBUG] 2022-07-03 12:00:41.065 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@36cfe107
[DEBUG] 2022-07-03 12:00:41.065 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@139089a4
[DEBUG] 2022-07-03 12:00:41.066 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@139089a4
[DEBUG] 2022-07-03 12:00:41.066 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@139089a4
[DEBUG] 2022-07-03 12:00:41.067 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@9f1ca74
[DEBUG] 2022-07-03 12:00:41.067 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@9f1ca74
[DEBUG] 2022-07-03 12:00:41.068 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@9f1ca74
[DEBUG] 2022-07-03 12:00:41.070 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@63326a3a
[DEBUG] 2022-07-03 12:00:41.070 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@63326a3a
[DEBUG] 2022-07-03 12:00:41.070 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@34e990cc
[DEBUG] 2022-07-03 12:00:41.071 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@34e990cc
[DEBUG] 2022-07-03 12:00:41.072 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6de84336
[DEBUG] 2022-07-03 12:00:41.072 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6de84336
[DEBUG] 2022-07-03 12:00:41.074 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@26f75d9c
[DEBUG] 2022-07-03 12:00:41.075 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@34b2d51a
[DEBUG] 2022-07-03 12:00:41.075 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3a6556b6
[DEBUG] 2022-07-03 12:00:41.075 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3a6556b6
[DEBUG] 2022-07-03 12:00:41.077 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1851c7d2
[DEBUG] 2022-07-03 12:00:41.078 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1851c7d2
[DEBUG] 2022-07-03 12:00:41.079 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@38dbeb39
[DEBUG] 2022-07-03 12:00:41.080 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@38dbeb39
[DEBUG] 2022-07-03 12:00:41.081 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48106381
[DEBUG] 2022-07-03 12:00:41.082 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48106381
[DEBUG] 2022-07-03 12:00:41.082 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6c2883b1
[DEBUG] 2022-07-03 12:00:41.083 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6c2883b1
[DEBUG] 2022-07-03 12:00:41.083 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@fd4459b
[DEBUG] 2022-07-03 12:00:41.084 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@fd4459b
[DEBUG] 2022-07-03 12:00:41.087 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e6d30c0
[DEBUG] 2022-07-03 12:00:41.087 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1e6d30c0
[DEBUG] 2022-07-03 12:00:41.088 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@24fc2c80
[DEBUG] 2022-07-03 12:00:41.088 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@24fc2c80
[DEBUG] 2022-07-03 12:00:41.089 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d2f9e3c
[DEBUG] 2022-07-03 12:00:41.090 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4d2f9e3c
[DEBUG] 2022-07-03 12:00:41.091 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@16df9bde
[DEBUG] 2022-07-03 12:00:41.092 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@16df9bde
[DEBUG] 2022-07-03 12:00:41.098 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@126675fd
[DEBUG] 2022-07-03 12:00:41.098 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@126675fd
[DEBUG] 2022-07-03 12:00:41.099 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@52856ff9
[DEBUG] 2022-07-03 12:00:41.099 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@52856ff9
[DEBUG] 2022-07-03 12:00:41.099 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@52856ff9
[DEBUG] 2022-07-03 12:00:41.102 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@574ebdaf
[DEBUG] 2022-07-03 12:00:41.103 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@11228bee
[DEBUG] 2022-07-03 12:00:41.104 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11228bee
[DEBUG] 2022-07-03 12:00:41.105 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11228bee
[DEBUG] 2022-07-03 12:00:41.107 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3c9f4376
[DEBUG] 2022-07-03 12:00:41.109 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1958c0d9
[DEBUG] 2022-07-03 12:00:41.110 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@43ab9ae9
[DEBUG] 2022-07-03 12:00:41.111 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@43ab9ae9
[DEBUG] 2022-07-03 12:00:41.111 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@61993d18
[DEBUG] 2022-07-03 12:00:41.114 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@61993d18
[DEBUG] 2022-07-03 12:00:41.115 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@67dc6b48
[DEBUG] 2022-07-03 12:00:41.116 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@67dc6b48
[DEBUG] 2022-07-03 12:00:41.116 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@704c3bdf
[DEBUG] 2022-07-03 12:00:41.116 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@704c3bdf
[DEBUG] 2022-07-03 12:00:41.117 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fa9692b
[DEBUG] 2022-07-03 12:00:41.118 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fa9692b
[DEBUG] 2022-07-03 12:00:41.121 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1488a861
[DEBUG] 2022-07-03 12:00:41.124 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1ad1be5d
[DEBUG] 2022-07-03 12:00:41.125 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ad1be5d
[DEBUG] 2022-07-03 12:00:41.125 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1ad1be5d
[DEBUG] 2022-07-03 12:00:41.126 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@22ff1372
[DEBUG] 2022-07-03 12:00:41.126 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@22ff1372
[DEBUG] 2022-07-03 12:00:41.127 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@22ff1372
[DEBUG] 2022-07-03 12:00:41.130 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@780129bc
[DEBUG] 2022-07-03 12:00:41.134 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@11180750
[DEBUG] 2022-07-03 12:00:41.135 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@24615687
[DEBUG] 2022-07-03 12:00:41.135 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@24615687
[DEBUG] 2022-07-03 12:00:41.136 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@24615687
[DEBUG] 2022-07-03 12:00:41.136 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@67ceeffd
[DEBUG] 2022-07-03 12:00:41.136 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@67ceeffd
[DEBUG] 2022-07-03 12:00:41.136 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@67ceeffd
[DEBUG] 2022-07-03 12:00:41.137 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d90644f
[DEBUG] 2022-07-03 12:00:41.141 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@6cc8adff
[DEBUG] 2022-07-03 12:00:41.143 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@2e159116
[DEBUG] 2022-07-03 12:00:41.143 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@2e159116
[DEBUG] 2022-07-03 12:00:41.144 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6996bbc4
[DEBUG] 2022-07-03 12:00:41.144 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@1de30c31
[DEBUG] 2022-07-03 12:00:41.145 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1de30c31
[DEBUG] 2022-07-03 12:00:41.145 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@36c783ca
[DEBUG] 2022-07-03 12:00:41.148 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@36c783ca
[DEBUG] 2022-07-03 12:00:41.149 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@a120b9
[DEBUG] 2022-07-03 12:00:41.150 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2804b13f
[DEBUG] 2022-07-03 12:00:41.152 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@246de37e
[DEBUG] 2022-07-03 12:00:41.156 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@67f591c2
[DEBUG] 2022-07-03 12:00:41.157 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@67f591c2
[DEBUG] 2022-07-03 12:00:41.157 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51f34185
[DEBUG] 2022-07-03 12:00:41.159 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e49437
[DEBUG] 2022-07-03 12:00:41.160 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7645b7d
[DEBUG] 2022-07-03 12:00:41.161 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4c50cd7d
[DEBUG] 2022-07-03 12:00:41.161 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3ea84e01
[DEBUG] 2022-07-03 12:00:41.161 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1a4930cf
[DEBUG] 2022-07-03 12:00:41.161 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3fd33f48
[DEBUG] 2022-07-03 12:00:41.161 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@75a226ea
[INFO ] 2022-07-03 12:00:41.218 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:00:41.318 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:00:41.336 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:00:41.345 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:00:41.376 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@6adcf059 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:00:41.417 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@148b6f95] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5ee581db]
[DEBUG] 2022-07-03 12:00:41.677 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:00:41.680 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:00:41.680 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:00:41.681 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:00:41.682 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:00:41.682 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@148b6f95] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2e013ba1]
[INFO ] 2022-07-03 12:00:42.341 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:00:42.360 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@2e013ba1] for TypeConfiguration
[INFO ] 2022-07-03 12:00:42.362 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:00:43.936 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:00:44.799 [Test worker] GetUserMileage - Started GetUserMileage in 6.875 seconds (JVM running for 9.447)
[ERROR] 2022-07-03 12:00:44.822 [Test worker] TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cd164a6] to prepare test instance [com.triple.travelerclubmileage.model.user.GetUserMileageTest@30b0d5a7]
java.lang.NoSuchMethodError: org.mockito.MockitoAnnotations.openMocks(Ljava/lang/Object;)Ljava/lang/AutoCloseable;
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.initMocks(MockitoTestExecutionListener.java:83) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:60) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[INFO ] 2022-07-03 12:00:44.916 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:00:44.925 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@2e013ba1] for TypeConfiguration
[DEBUG] 2022-07-03 12:00:44.926 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4597dc9f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2e013ba1]
[INFO ] 2022-07-03 12:00:44.930 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:00:44.944 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:02:05.493 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:02:05.511 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:02:05.518 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:02:05.682 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:02:05.762 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:02:05.774 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@242a209e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@64469d8, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2b8bd798, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c18621b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@39c385d6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cec219f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@692e028d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6629ad09, org.springframework.test.context.event.EventPublishingTestExecutionListener@43e1692f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3e7c4815, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@27df0f3d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c35af2a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@44550792, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1835d3ed, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@474c9131]
[INFO ] 2022-07-03 12:02:06.292 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 90815 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:02:06.306 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:02:07.445 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:02:07.590 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:02:08.590 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:02:08.648 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:02:08.826 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:02:08.858 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:02:08.859 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:02:08.861 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:02:08.863 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56b05bd7
[DEBUG] 2022-07-03 12:02:08.865 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7440265c
[DEBUG] 2022-07-03 12:02:08.866 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@48d44b46
[DEBUG] 2022-07-03 12:02:08.868 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:02:08.869 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:02:08.869 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:02:08.870 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:02:08.872 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:02:08.873 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:02:08.874 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:02:08.874 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:02:08.875 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:02:08.875 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:02:08.875 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:02:08.876 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:02:08.879 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:02:08.879 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:02:08.879 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:02:08.880 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:02:08.880 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:02:08.880 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:02:08.881 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:02:08.881 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:02:08.883 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:02:08.885 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ee12d58
[DEBUG] 2022-07-03 12:02:08.885 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ee12d58
[DEBUG] 2022-07-03 12:02:08.886 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4df0d9f8
[DEBUG] 2022-07-03 12:02:08.886 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4df0d9f8
[DEBUG] 2022-07-03 12:02:08.888 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@350567f1
[DEBUG] 2022-07-03 12:02:08.888 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@350567f1
[DEBUG] 2022-07-03 12:02:08.889 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28b5662d
[DEBUG] 2022-07-03 12:02:08.890 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f76872f
[DEBUG] 2022-07-03 12:02:08.891 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6f6c8d45
[DEBUG] 2022-07-03 12:02:08.891 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f6c8d45
[DEBUG] 2022-07-03 12:02:08.892 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ffb0d10
[DEBUG] 2022-07-03 12:02:08.893 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ffb0d10
[DEBUG] 2022-07-03 12:02:08.894 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@63e70bf9
[DEBUG] 2022-07-03 12:02:08.895 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63e70bf9
[DEBUG] 2022-07-03 12:02:08.896 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@433d93e7
[DEBUG] 2022-07-03 12:02:08.896 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@433d93e7
[DEBUG] 2022-07-03 12:02:08.897 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7db47323
[DEBUG] 2022-07-03 12:02:08.897 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7db47323
[DEBUG] 2022-07-03 12:02:08.898 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@38fb151a
[DEBUG] 2022-07-03 12:02:08.899 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@38fb151a
[DEBUG] 2022-07-03 12:02:08.902 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fe87c0e
[DEBUG] 2022-07-03 12:02:08.902 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fe87c0e
[DEBUG] 2022-07-03 12:02:08.903 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5ee6fdc4
[DEBUG] 2022-07-03 12:02:08.903 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5ee6fdc4
[DEBUG] 2022-07-03 12:02:08.904 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@646e6d07
[DEBUG] 2022-07-03 12:02:08.905 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@646e6d07
[DEBUG] 2022-07-03 12:02:08.906 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@44aeae34
[DEBUG] 2022-07-03 12:02:08.906 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44aeae34
[DEBUG] 2022-07-03 12:02:08.909 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2da5fdc
[DEBUG] 2022-07-03 12:02:08.911 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2da5fdc
[DEBUG] 2022-07-03 12:02:08.912 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:02:08.912 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:02:08.912 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:02:08.914 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76db9048
[DEBUG] 2022-07-03 12:02:08.915 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:02:08.917 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:02:08.918 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:02:08.919 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3cdfbbef
[DEBUG] 2022-07-03 12:02:08.920 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@c67395
[DEBUG] 2022-07-03 12:02:08.922 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46894dc5
[DEBUG] 2022-07-03 12:02:08.922 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46894dc5
[DEBUG] 2022-07-03 12:02:08.923 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3e39f08c
[DEBUG] 2022-07-03 12:02:08.926 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e39f08c
[DEBUG] 2022-07-03 12:02:08.928 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@154864f8
[DEBUG] 2022-07-03 12:02:08.929 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@154864f8
[DEBUG] 2022-07-03 12:02:08.929 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@55c03e4
[DEBUG] 2022-07-03 12:02:08.930 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55c03e4
[DEBUG] 2022-07-03 12:02:08.930 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@667a467f
[DEBUG] 2022-07-03 12:02:08.932 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@667a467f
[DEBUG] 2022-07-03 12:02:08.933 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12670e55
[DEBUG] 2022-07-03 12:02:08.935 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:02:08.935 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:02:08.935 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:02:08.936 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:02:08.936 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:02:08.936 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:02:08.937 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3cbfdf5c
[DEBUG] 2022-07-03 12:02:08.938 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3cb195dd
[DEBUG] 2022-07-03 12:02:08.938 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:02:08.939 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:02:08.939 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:02:08.939 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:02:08.939 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:02:08.939 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:02:08.940 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@120411ec
[DEBUG] 2022-07-03 12:02:08.941 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a34a51e
[DEBUG] 2022-07-03 12:02:08.943 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6b091a92
[DEBUG] 2022-07-03 12:02:08.943 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b091a92
[DEBUG] 2022-07-03 12:02:08.943 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21a5b599
[DEBUG] 2022-07-03 12:02:08.944 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e38e254
[DEBUG] 2022-07-03 12:02:08.944 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e38e254
[DEBUG] 2022-07-03 12:02:08.945 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6f1d799
[DEBUG] 2022-07-03 12:02:08.947 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f1d799
[DEBUG] 2022-07-03 12:02:08.948 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21a9f95b
[DEBUG] 2022-07-03 12:02:08.949 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64c95480
[DEBUG] 2022-07-03 12:02:08.950 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@527d48db
[DEBUG] 2022-07-03 12:02:08.954 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1a43a88e
[DEBUG] 2022-07-03 12:02:08.954 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a43a88e
[DEBUG] 2022-07-03 12:02:08.955 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7645b7d
[DEBUG] 2022-07-03 12:02:08.957 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ea84e01
[DEBUG] 2022-07-03 12:02:08.959 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a4930cf
[DEBUG] 2022-07-03 12:02:08.960 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fd33f48
[DEBUG] 2022-07-03 12:02:08.960 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75a226ea
[DEBUG] 2022-07-03 12:02:08.960 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@986b619
[DEBUG] 2022-07-03 12:02:08.960 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a1a20ae
[DEBUG] 2022-07-03 12:02:08.960 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c956dda
[INFO ] 2022-07-03 12:02:09.011 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:02:09.107 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:02:09.124 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:02:09.134 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:02:09.171 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7a7f9d45 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:02:09.207 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e5ebdfe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71668a67]
[DEBUG] 2022-07-03 12:02:09.472 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:02:09.475 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:02:09.475 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:02:09.476 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:02:09.477 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:02:09.478 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e5ebdfe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@430106cf]
[INFO ] 2022-07-03 12:02:10.051 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:02:10.118 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@430106cf] for TypeConfiguration
[INFO ] 2022-07-03 12:02:10.131 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:02:11.410 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:02:12.421 [Test worker] GetUserMileage - Started GetUserMileage in 6.596 seconds (JVM running for 9.007)
[ERROR] 2022-07-03 12:02:12.448 [Test worker] TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c18621b] to prepare test instance [com.triple.travelerclubmileage.model.user.GetUserMileageTest@335a45a8]
java.lang.NoSuchMethodError: org.mockito.MockitoAnnotations.openMocks(Ljava/lang/Object;)Ljava/lang/AutoCloseable;
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.initMocks(MockitoTestExecutionListener.java:83) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:60) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[INFO ] 2022-07-03 12:02:12.535 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:02:12.540 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@430106cf] for TypeConfiguration
[DEBUG] 2022-07-03 12:02:12.542 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4d02540b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@430106cf]
[INFO ] 2022-07-03 12:02:12.546 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:02:12.559 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:05:29.649 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:05:29.666 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:05:29.672 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:05:29.833 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:05:29.917 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:05:29.932 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@242a209e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@64469d8, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2b8bd798, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c18621b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@39c385d6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1cec219f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@692e028d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6629ad09, org.springframework.test.context.event.EventPublishingTestExecutionListener@43e1692f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3e7c4815, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@27df0f3d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@c35af2a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@44550792, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1835d3ed, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@474c9131]
[INFO ] 2022-07-03 12:05:30.477 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 90884 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:05:30.500 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:05:31.608 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:05:31.747 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:05:32.741 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:05:32.797 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:05:32.980 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:05:33.007 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:05:33.007 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:05:33.010 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@485c84d7
[DEBUG] 2022-07-03 12:05:33.011 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@56b05bd7
[DEBUG] 2022-07-03 12:05:33.013 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7440265c
[DEBUG] 2022-07-03 12:05:33.014 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@48d44b46
[DEBUG] 2022-07-03 12:05:33.015 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:05:33.015 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:05:33.016 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6c70b7c3
[DEBUG] 2022-07-03 12:05:33.016 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:05:33.018 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:05:33.018 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@401ec794
[DEBUG] 2022-07-03 12:05:33.020 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:05:33.020 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:05:33.020 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@214fba74
[DEBUG] 2022-07-03 12:05:33.022 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:05:33.022 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:05:33.022 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@70a24f9
[DEBUG] 2022-07-03 12:05:33.026 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:05:33.026 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:05:33.026 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18bb1b88
[DEBUG] 2022-07-03 12:05:33.027 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:05:33.028 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:05:33.028 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@61554b6b
[DEBUG] 2022-07-03 12:05:33.028 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:05:33.029 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:05:33.030 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@52f43225
[DEBUG] 2022-07-03 12:05:33.031 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7ee12d58
[DEBUG] 2022-07-03 12:05:33.032 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7ee12d58
[DEBUG] 2022-07-03 12:05:33.033 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4df0d9f8
[DEBUG] 2022-07-03 12:05:33.034 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4df0d9f8
[DEBUG] 2022-07-03 12:05:33.035 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@350567f1
[DEBUG] 2022-07-03 12:05:33.035 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@350567f1
[DEBUG] 2022-07-03 12:05:33.038 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@28b5662d
[DEBUG] 2022-07-03 12:05:33.039 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@f76872f
[DEBUG] 2022-07-03 12:05:33.040 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6f6c8d45
[DEBUG] 2022-07-03 12:05:33.040 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6f6c8d45
[DEBUG] 2022-07-03 12:05:33.042 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2ffb0d10
[DEBUG] 2022-07-03 12:05:33.042 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2ffb0d10
[DEBUG] 2022-07-03 12:05:33.043 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@63e70bf9
[DEBUG] 2022-07-03 12:05:33.045 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@63e70bf9
[DEBUG] 2022-07-03 12:05:33.047 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@433d93e7
[DEBUG] 2022-07-03 12:05:33.047 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@433d93e7
[DEBUG] 2022-07-03 12:05:33.048 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7db47323
[DEBUG] 2022-07-03 12:05:33.048 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7db47323
[DEBUG] 2022-07-03 12:05:33.049 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@38fb151a
[DEBUG] 2022-07-03 12:05:33.050 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@38fb151a
[DEBUG] 2022-07-03 12:05:33.054 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fe87c0e
[DEBUG] 2022-07-03 12:05:33.055 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7fe87c0e
[DEBUG] 2022-07-03 12:05:33.057 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@5ee6fdc4
[DEBUG] 2022-07-03 12:05:33.058 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@5ee6fdc4
[DEBUG] 2022-07-03 12:05:33.059 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@646e6d07
[DEBUG] 2022-07-03 12:05:33.060 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@646e6d07
[DEBUG] 2022-07-03 12:05:33.061 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@44aeae34
[DEBUG] 2022-07-03 12:05:33.062 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44aeae34
[DEBUG] 2022-07-03 12:05:33.068 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2da5fdc
[DEBUG] 2022-07-03 12:05:33.068 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2da5fdc
[DEBUG] 2022-07-03 12:05:33.069 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:05:33.069 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:05:33.069 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2ecdf528
[DEBUG] 2022-07-03 12:05:33.071 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@76db9048
[DEBUG] 2022-07-03 12:05:33.072 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:05:33.073 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:05:33.075 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31e7afde
[DEBUG] 2022-07-03 12:05:33.076 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3cdfbbef
[DEBUG] 2022-07-03 12:05:33.077 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@c67395
[DEBUG] 2022-07-03 12:05:33.078 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@46894dc5
[DEBUG] 2022-07-03 12:05:33.079 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@46894dc5
[DEBUG] 2022-07-03 12:05:33.079 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3e39f08c
[DEBUG] 2022-07-03 12:05:33.082 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3e39f08c
[DEBUG] 2022-07-03 12:05:33.084 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@154864f8
[DEBUG] 2022-07-03 12:05:33.085 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@154864f8
[DEBUG] 2022-07-03 12:05:33.086 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@55c03e4
[DEBUG] 2022-07-03 12:05:33.086 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@55c03e4
[DEBUG] 2022-07-03 12:05:33.087 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@667a467f
[DEBUG] 2022-07-03 12:05:33.088 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@667a467f
[DEBUG] 2022-07-03 12:05:33.091 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@12670e55
[DEBUG] 2022-07-03 12:05:33.092 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:05:33.093 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:05:33.093 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@10166230
[DEBUG] 2022-07-03 12:05:33.093 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:05:33.094 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:05:33.094 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@5d96d434
[DEBUG] 2022-07-03 12:05:33.094 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3cbfdf5c
[DEBUG] 2022-07-03 12:05:33.096 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3cb195dd
[DEBUG] 2022-07-03 12:05:33.097 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:05:33.097 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:05:33.097 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1ad1b737
[DEBUG] 2022-07-03 12:05:33.098 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:05:33.098 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:05:33.098 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@e7b0bec
[DEBUG] 2022-07-03 12:05:33.100 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@120411ec
[DEBUG] 2022-07-03 12:05:33.100 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@1a34a51e
[DEBUG] 2022-07-03 12:05:33.102 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@6b091a92
[DEBUG] 2022-07-03 12:05:33.102 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@6b091a92
[DEBUG] 2022-07-03 12:05:33.102 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@21a5b599
[DEBUG] 2022-07-03 12:05:33.103 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7e38e254
[DEBUG] 2022-07-03 12:05:33.104 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e38e254
[DEBUG] 2022-07-03 12:05:33.105 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6f1d799
[DEBUG] 2022-07-03 12:05:33.108 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6f1d799
[DEBUG] 2022-07-03 12:05:33.110 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@21a9f95b
[DEBUG] 2022-07-03 12:05:33.110 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@64c95480
[DEBUG] 2022-07-03 12:05:33.112 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@527d48db
[DEBUG] 2022-07-03 12:05:33.114 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1a43a88e
[DEBUG] 2022-07-03 12:05:33.116 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1a43a88e
[DEBUG] 2022-07-03 12:05:33.116 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7645b7d
[DEBUG] 2022-07-03 12:05:33.123 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ea84e01
[DEBUG] 2022-07-03 12:05:33.124 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a4930cf
[DEBUG] 2022-07-03 12:05:33.124 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3fd33f48
[DEBUG] 2022-07-03 12:05:33.125 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@75a226ea
[DEBUG] 2022-07-03 12:05:33.125 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@986b619
[DEBUG] 2022-07-03 12:05:33.125 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5a1a20ae
[DEBUG] 2022-07-03 12:05:33.125 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c956dda
[INFO ] 2022-07-03 12:05:33.181 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:05:33.299 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:05:33.320 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:05:33.328 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:05:33.362 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7a7f9d45 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:05:33.421 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e5ebdfe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@71668a67]
[DEBUG] 2022-07-03 12:05:33.693 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:05:33.697 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:05:33.698 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:05:33.698 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:05:33.700 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:05:33.700 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3e5ebdfe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@430106cf]
[INFO ] 2022-07-03 12:05:34.398 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:05:34.418 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@430106cf] for TypeConfiguration
[INFO ] 2022-07-03 12:05:34.421 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:05:35.957 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:05:37.174 [Test worker] GetUserMileage - Started GetUserMileage in 7.174 seconds (JVM running for 9.813)
[ERROR] 2022-07-03 12:05:37.206 [Test worker] TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4c18621b] to prepare test instance [com.triple.travelerclubmileage.model.user.GetUserMileageTest@335a45a8]
java.lang.NoSuchMethodError: org.mockito.MockitoAnnotations.openMocks(Ljava/lang/Object;)Ljava/lang/AutoCloseable;
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.initMocks(MockitoTestExecutionListener.java:83) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:60) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[INFO ] 2022-07-03 12:05:37.307 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:05:37.315 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@430106cf] for TypeConfiguration
[DEBUG] 2022-07-03 12:05:37.318 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@27ff482c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@430106cf]
[INFO ] 2022-07-03 12:05:37.323 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:05:37.335 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:10:13.880 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:10:13.884 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@398694a6] for TypeConfiguration
[DEBUG] 2022-07-03 12:10:13.900 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1a8bb30] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@398694a6]
[INFO ] 2022-07-03 12:10:13.914 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:10:13.937 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:12:50.894 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:12:50.916 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:12:50.917 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:12:51.074 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:12:51.157 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:12:51.176 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@45e1aa48, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12c60152, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2e807c54, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cd164a6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@242a209e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@64469d8, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2b8bd798, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4c18621b, org.springframework.test.context.event.EventPublishingTestExecutionListener@39c385d6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1cec219f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@692e028d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6629ad09, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@43e1692f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3e7c4815, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@27df0f3d]
[INFO ] 2022-07-03 12:12:51.720 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91045 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:12:51.734 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:12:52.831 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:12:52.967 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:12:54.010 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:12:54.068 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:12:54.256 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:12:54.282 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f99d8c
[DEBUG] 2022-07-03 12:12:54.282 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@2f99d8c
[DEBUG] 2022-07-03 12:12:54.287 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2f99d8c
[DEBUG] 2022-07-03 12:12:54.290 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1224e1b6
[DEBUG] 2022-07-03 12:12:54.291 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@56b05bd7
[DEBUG] 2022-07-03 12:12:54.292 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@7440265c
[DEBUG] 2022-07-03 12:12:54.293 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@311a0b3e
[DEBUG] 2022-07-03 12:12:54.294 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@311a0b3e
[DEBUG] 2022-07-03 12:12:54.294 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@311a0b3e
[DEBUG] 2022-07-03 12:12:54.295 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@749d7c01
[DEBUG] 2022-07-03 12:12:54.296 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@749d7c01
[DEBUG] 2022-07-03 12:12:54.297 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@749d7c01
[DEBUG] 2022-07-03 12:12:54.298 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4809c771
[DEBUG] 2022-07-03 12:12:54.298 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4809c771
[DEBUG] 2022-07-03 12:12:54.298 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4809c771
[DEBUG] 2022-07-03 12:12:54.299 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@1857fe6c
[DEBUG] 2022-07-03 12:12:54.299 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@1857fe6c
[DEBUG] 2022-07-03 12:12:54.300 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@1857fe6c
[DEBUG] 2022-07-03 12:12:54.303 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18dac12f
[DEBUG] 2022-07-03 12:12:54.303 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@18dac12f
[DEBUG] 2022-07-03 12:12:54.304 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18dac12f
[DEBUG] 2022-07-03 12:12:54.305 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@53b7bf01
[DEBUG] 2022-07-03 12:12:54.305 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@53b7bf01
[DEBUG] 2022-07-03 12:12:54.305 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@53b7bf01
[DEBUG] 2022-07-03 12:12:54.306 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@42b4df5a
[DEBUG] 2022-07-03 12:12:54.306 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@42b4df5a
[DEBUG] 2022-07-03 12:12:54.307 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@42b4df5a
[DEBUG] 2022-07-03 12:12:54.309 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@393ae7a0
[DEBUG] 2022-07-03 12:12:54.309 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@393ae7a0
[DEBUG] 2022-07-03 12:12:54.310 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4315fe1b
[DEBUG] 2022-07-03 12:12:54.311 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4315fe1b
[DEBUG] 2022-07-03 12:12:54.312 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@269c7104
[DEBUG] 2022-07-03 12:12:54.312 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@269c7104
[DEBUG] 2022-07-03 12:12:54.313 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1a5b7394
[DEBUG] 2022-07-03 12:12:54.315 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@28b5662d
[DEBUG] 2022-07-03 12:12:54.315 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@191e654
[DEBUG] 2022-07-03 12:12:54.316 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@191e654
[DEBUG] 2022-07-03 12:12:54.316 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@13dc6649
[DEBUG] 2022-07-03 12:12:54.317 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13dc6649
[DEBUG] 2022-07-03 12:12:54.318 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4f3fec43
[DEBUG] 2022-07-03 12:12:54.318 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4f3fec43
[DEBUG] 2022-07-03 12:12:54.321 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@59371066
[DEBUG] 2022-07-03 12:12:54.321 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@59371066
[DEBUG] 2022-07-03 12:12:54.322 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43a59289
[DEBUG] 2022-07-03 12:12:54.323 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43a59289
[DEBUG] 2022-07-03 12:12:54.323 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@51a719e7
[DEBUG] 2022-07-03 12:12:54.324 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@51a719e7
[DEBUG] 2022-07-03 12:12:54.325 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@182e4365
[DEBUG] 2022-07-03 12:12:54.327 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@182e4365
[DEBUG] 2022-07-03 12:12:54.328 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18483b8b
[DEBUG] 2022-07-03 12:12:54.328 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18483b8b
[DEBUG] 2022-07-03 12:12:54.330 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@671da0f9
[DEBUG] 2022-07-03 12:12:54.330 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@671da0f9
[DEBUG] 2022-07-03 12:12:54.331 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3c346c45
[DEBUG] 2022-07-03 12:12:54.331 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3c346c45
[DEBUG] 2022-07-03 12:12:54.334 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@17d816b3
[DEBUG] 2022-07-03 12:12:54.337 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@17d816b3
[DEBUG] 2022-07-03 12:12:54.338 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@615bad16
[DEBUG] 2022-07-03 12:12:54.338 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@615bad16
[DEBUG] 2022-07-03 12:12:54.338 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@615bad16
[DEBUG] 2022-07-03 12:12:54.340 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@2ecdf528
[DEBUG] 2022-07-03 12:12:54.341 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@123ca460
[DEBUG] 2022-07-03 12:12:54.344 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@123ca460
[DEBUG] 2022-07-03 12:12:54.345 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@123ca460
[DEBUG] 2022-07-03 12:12:54.345 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2487e20
[DEBUG] 2022-07-03 12:12:54.347 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@581918f6
[DEBUG] 2022-07-03 12:12:54.348 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@70c205bf
[DEBUG] 2022-07-03 12:12:54.349 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@70c205bf
[DEBUG] 2022-07-03 12:12:54.350 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6df2a206
[DEBUG] 2022-07-03 12:12:54.353 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6df2a206
[DEBUG] 2022-07-03 12:12:54.356 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@727453a3
[DEBUG] 2022-07-03 12:12:54.356 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@727453a3
[DEBUG] 2022-07-03 12:12:54.357 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@26f5e45d
[DEBUG] 2022-07-03 12:12:54.357 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@26f5e45d
[DEBUG] 2022-07-03 12:12:54.358 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7a0f06ad
[DEBUG] 2022-07-03 12:12:54.360 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7a0f06ad
[DEBUG] 2022-07-03 12:12:54.362 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@324e8baa
[DEBUG] 2022-07-03 12:12:54.363 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@32ba5c65
[DEBUG] 2022-07-03 12:12:54.364 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@32ba5c65
[DEBUG] 2022-07-03 12:12:54.364 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@32ba5c65
[DEBUG] 2022-07-03 12:12:54.365 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@15be68b
[DEBUG] 2022-07-03 12:12:54.365 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@15be68b
[DEBUG] 2022-07-03 12:12:54.366 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@15be68b
[DEBUG] 2022-07-03 12:12:54.366 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@13dd7887
[DEBUG] 2022-07-03 12:12:54.367 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@4d825dbe
[DEBUG] 2022-07-03 12:12:54.369 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@144e36ae
[DEBUG] 2022-07-03 12:12:54.369 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@144e36ae
[DEBUG] 2022-07-03 12:12:54.369 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@144e36ae
[DEBUG] 2022-07-03 12:12:54.370 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@70b196d3
[DEBUG] 2022-07-03 12:12:54.370 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@70b196d3
[DEBUG] 2022-07-03 12:12:54.370 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@70b196d3
[DEBUG] 2022-07-03 12:12:54.371 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@1e5aacd9
[DEBUG] 2022-07-03 12:12:54.373 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@120411ec
[DEBUG] 2022-07-03 12:12:54.374 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@28bd5015
[DEBUG] 2022-07-03 12:12:54.375 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@28bd5015
[DEBUG] 2022-07-03 12:12:54.375 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6b091a92
[DEBUG] 2022-07-03 12:12:54.376 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3bf5911d
[DEBUG] 2022-07-03 12:12:54.376 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3bf5911d
[DEBUG] 2022-07-03 12:12:54.377 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@35329a05
[DEBUG] 2022-07-03 12:12:54.379 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@35329a05
[DEBUG] 2022-07-03 12:12:54.380 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@ca2cd5e
[DEBUG] 2022-07-03 12:12:54.380 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a9f95b
[DEBUG] 2022-07-03 12:12:54.381 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@2e40fdbd
[DEBUG] 2022-07-03 12:12:54.386 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@2c08c787
[DEBUG] 2022-07-03 12:12:54.386 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@2c08c787
[DEBUG] 2022-07-03 12:12:54.387 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a43a88e
[DEBUG] 2022-07-03 12:12:54.388 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1b8d20e6
[DEBUG] 2022-07-03 12:12:54.388 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@e49437
[DEBUG] 2022-07-03 12:12:54.388 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7645b7d
[DEBUG] 2022-07-03 12:12:54.389 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c50cd7d
[DEBUG] 2022-07-03 12:12:54.390 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ea84e01
[DEBUG] 2022-07-03 12:12:54.390 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a4930cf
[DEBUG] 2022-07-03 12:12:54.391 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3fd33f48
[INFO ] 2022-07-03 12:12:54.448 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:12:54.544 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:12:54.564 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:12:54.573 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:12:54.608 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@38ebc866 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:12:54.644 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43b4ec0c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@148b6f95]
[DEBUG] 2022-07-03 12:12:54.921 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:12:54.925 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:12:54.925 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:12:54.926 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:12:54.928 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:12:54.928 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@43b4ec0c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7178d811]
[INFO ] 2022-07-03 12:12:55.585 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:12:55.604 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@7178d811] for TypeConfiguration
[INFO ] 2022-07-03 12:12:55.607 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:12:57.011 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:12:57.915 [Test worker] GetUserMileage - Started GetUserMileage in 6.687 seconds (JVM running for 9.301)
[ERROR] 2022-07-03 12:12:57.938 [Test worker] TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cd164a6] to prepare test instance [com.triple.travelerclubmileage.model.user.GetUserMileageTest@4265cbed]
java.lang.NoSuchMethodError: org.mockito.MockitoAnnotations.openMocks(Ljava/lang/Object;)Ljava/lang/AutoCloseable;
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.initMocks(MockitoTestExecutionListener.java:83) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.prepareTestInstance(MockitoTestExecutionListener.java:60) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[INFO ] 2022-07-03 12:12:58.061 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:12:58.068 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@7178d811] for TypeConfiguration
[DEBUG] 2022-07-03 12:12:58.070 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@36d0e081] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7178d811]
[INFO ] 2022-07-03 12:12:58.073 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:12:58.083 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:13:35.021 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:13:35.037 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:13:35.043 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:13:35.188 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:13:35.270 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:13:35.283 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fb6097b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2dfe5525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1290c49, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6a9b9909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55d9b8f0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a518813, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@43d38654, org.springframework.test.context.event.EventPublishingTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1d75e7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4fc142ec]
[INFO ] 2022-07-03 12:13:35.808 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91074 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:13:35.823 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:13:36.959 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:13:37.095 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:13:38.053 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:13:38.115 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:13:38.301 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:13:38.325 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:13:38.326 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:13:38.330 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:13:38.334 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@280ecc33
[DEBUG] 2022-07-03 12:13:38.335 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@28fa541
[DEBUG] 2022-07-03 12:13:38.336 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dca62c2
[DEBUG] 2022-07-03 12:13:38.336 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:13:38.337 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:13:38.337 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:13:38.338 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:13:38.339 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:13:38.341 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:13:38.342 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:13:38.342 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:13:38.342 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:13:38.343 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:13:38.343 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:13:38.344 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:13:38.347 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:13:38.347 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:13:38.348 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:13:38.349 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:13:38.349 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:13:38.349 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:13:38.350 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:13:38.350 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:13:38.351 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:13:38.353 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:13:38.353 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:13:38.354 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:13:38.354 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:13:38.355 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:13:38.355 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:13:38.356 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c4714ef
[DEBUG] 2022-07-03 12:13:38.358 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18db3b3c
[DEBUG] 2022-07-03 12:13:38.358 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:13:38.358 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:13:38.359 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:13:38.360 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:13:38.361 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:13:38.362 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:13:38.363 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:13:38.364 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:13:38.364 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:13:38.365 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:13:38.365 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:13:38.366 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:13:38.370 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:13:38.371 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:13:38.372 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:13:38.372 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:13:38.373 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:13:38.374 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:13:38.375 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:13:38.376 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:13:38.379 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:13:38.381 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:13:38.382 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:13:38.382 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:13:38.382 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:13:38.385 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cf10c92
[DEBUG] 2022-07-03 12:13:38.386 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:13:38.387 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:13:38.388 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:13:38.389 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fe5c68b
[DEBUG] 2022-07-03 12:13:38.390 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@538aa83f
[DEBUG] 2022-07-03 12:13:38.392 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:13:38.392 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:13:38.394 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:13:38.397 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:13:38.398 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:13:38.399 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:13:38.400 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:13:38.400 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:13:38.400 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:13:38.401 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:13:38.403 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@603d25db
[DEBUG] 2022-07-03 12:13:38.406 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:13:38.406 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:13:38.406 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:13:38.407 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:13:38.407 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:13:38.407 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:13:38.408 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5be7b749
[DEBUG] 2022-07-03 12:13:38.410 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@177ddd24
[DEBUG] 2022-07-03 12:13:38.411 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:13:38.411 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:13:38.411 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:13:38.412 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:13:38.412 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:13:38.412 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:13:38.414 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d4d65f5
[DEBUG] 2022-07-03 12:13:38.415 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7d626f2
[DEBUG] 2022-07-03 12:13:38.417 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:13:38.417 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:13:38.417 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@100807ca
[DEBUG] 2022-07-03 12:13:38.418 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:13:38.418 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:13:38.419 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:13:38.421 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:13:38.422 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d3ad37a
[DEBUG] 2022-07-03 12:13:38.422 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c82d925
[DEBUG] 2022-07-03 12:13:38.424 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1488a861
[DEBUG] 2022-07-03 12:13:38.428 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:13:38.429 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:13:38.429 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44de8e00
[DEBUG] 2022-07-03 12:13:38.430 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-03 12:13:38.432 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 12:13:38.432 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-03 12:13:38.432 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 12:13:38.432 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 12:13:38.432 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 12:13:38.433 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[INFO ] 2022-07-03 12:13:38.489 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:13:38.595 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:13:38.612 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:13:38.622 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:13:38.657 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@4119346d marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:13:38.732 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@772cf46b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b98355f]
[DEBUG] 2022-07-03 12:13:39.028 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:13:39.030 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:13:39.031 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:13:39.031 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:13:39.032 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:13:39.033 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@772cf46b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:13:39.606 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:13:39.679 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[INFO ] 2022-07-03 12:13:39.694 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:13:41.052 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:13:41.962 [Test worker] GetUserMileage - Started GetUserMileage in 6.627 seconds (JVM running for 8.97)
[INFO ] 2022-07-03 12:13:42.507 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:13:42.518 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[DEBUG] 2022-07-03 12:13:42.519 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6ab246e0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:13:42.526 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:13:42.539 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:14:04.554 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:14:04.573 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:14:04.578 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:14:04.736 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:14:04.818 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:14:04.833 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fb6097b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2dfe5525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1290c49, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6a9b9909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55d9b8f0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a518813, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@43d38654, org.springframework.test.context.event.EventPublishingTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1d75e7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4fc142ec]
[INFO ] 2022-07-03 12:14:05.357 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91095 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:14:05.371 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:14:06.486 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:14:06.619 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:14:07.611 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:14:07.669 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:14:07.852 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:14:07.879 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:14:07.880 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:14:07.883 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:14:07.886 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@280ecc33
[DEBUG] 2022-07-03 12:14:07.887 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@28fa541
[DEBUG] 2022-07-03 12:14:07.888 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dca62c2
[DEBUG] 2022-07-03 12:14:07.889 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:14:07.890 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:14:07.890 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:14:07.890 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:14:07.892 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:14:07.893 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:14:07.894 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:14:07.894 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:14:07.894 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:14:07.895 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:14:07.895 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:14:07.896 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:14:07.899 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:14:07.899 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:14:07.899 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:14:07.900 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:14:07.900 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:14:07.900 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:14:07.901 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:14:07.901 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:14:07.902 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:14:07.904 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:14:07.904 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:14:07.905 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:14:07.905 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:14:07.906 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:14:07.907 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:14:07.909 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c4714ef
[DEBUG] 2022-07-03 12:14:07.909 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18db3b3c
[DEBUG] 2022-07-03 12:14:07.911 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:14:07.911 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:14:07.912 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:14:07.912 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:14:07.913 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:14:07.914 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:14:07.916 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:14:07.916 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:14:07.917 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:14:07.917 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:14:07.918 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:14:07.919 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:14:07.922 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:14:07.922 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:14:07.923 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:14:07.923 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:14:07.924 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:14:07.924 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:14:07.925 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:14:07.926 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:14:07.930 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:14:07.931 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:14:07.931 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:14:07.931 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:14:07.932 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:14:07.933 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cf10c92
[DEBUG] 2022-07-03 12:14:07.934 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:14:07.935 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:14:07.936 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:14:07.937 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fe5c68b
[DEBUG] 2022-07-03 12:14:07.938 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@538aa83f
[DEBUG] 2022-07-03 12:14:07.940 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:14:07.941 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:14:07.942 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:14:07.944 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:14:07.945 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:14:07.946 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:14:07.947 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:14:07.947 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:14:07.947 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:14:07.948 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:14:07.950 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@603d25db
[DEBUG] 2022-07-03 12:14:07.952 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:14:07.953 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:14:07.953 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:14:07.953 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:14:07.953 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:14:07.954 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:14:07.954 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5be7b749
[DEBUG] 2022-07-03 12:14:07.956 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@177ddd24
[DEBUG] 2022-07-03 12:14:07.958 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:14:07.958 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:14:07.958 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:14:07.959 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:14:07.959 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:14:07.959 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:14:07.960 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d4d65f5
[DEBUG] 2022-07-03 12:14:07.961 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7d626f2
[DEBUG] 2022-07-03 12:14:07.962 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:14:07.963 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:14:07.963 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@100807ca
[DEBUG] 2022-07-03 12:14:07.964 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:14:07.964 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:14:07.965 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:14:07.967 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:14:07.968 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d3ad37a
[DEBUG] 2022-07-03 12:14:07.968 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c82d925
[DEBUG] 2022-07-03 12:14:07.970 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1488a861
[DEBUG] 2022-07-03 12:14:07.972 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:14:07.972 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:14:07.973 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44de8e00
[DEBUG] 2022-07-03 12:14:07.974 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-03 12:14:07.976 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 12:14:07.976 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-03 12:14:07.976 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 12:14:07.977 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 12:14:07.977 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 12:14:07.977 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[INFO ] 2022-07-03 12:14:08.035 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:14:08.135 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:14:08.150 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:14:08.160 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:14:08.193 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@4119346d marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:14:08.242 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@772cf46b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b98355f]
[DEBUG] 2022-07-03 12:14:08.501 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:14:08.503 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:14:08.504 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:14:08.504 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:14:08.505 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:14:08.506 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@772cf46b] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:14:09.052 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:14:09.116 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[INFO ] 2022-07-03 12:14:09.130 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:14:10.401 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:14:11.458 [Test worker] GetUserMileage - Started GetUserMileage in 6.575 seconds (JVM running for 8.94)
[INFO ] 2022-07-03 12:14:12.027 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:14:12.042 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[DEBUG] 2022-07-03 12:14:12.044 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f3d7be8] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:14:12.051 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:14:12.060 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:14:55.006 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:14:55.021 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:14:55.026 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:14:55.172 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:14:55.251 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:14:55.264 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@21f459fc, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4d192aef, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1416cf9f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@84487f4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextTestExecutionListener@fb6097b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2dfe5525, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1290c49, org.springframework.test.context.event.EventPublishingTestExecutionListener@6a9b9909, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@55d9b8f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@43d38654, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6d303498, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6ba7383d]
[INFO ] 2022-07-03 12:14:55.770 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91116 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:14:55.786 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:14:56.913 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:14:57.058 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 136 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:14:58.019 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:14:58.077 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:14:58.255 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:14:58.280 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@298e002d
[DEBUG] 2022-07-03 12:14:58.281 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@298e002d
[DEBUG] 2022-07-03 12:14:58.284 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@298e002d
[DEBUG] 2022-07-03 12:14:58.287 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5f6a8efe
[DEBUG] 2022-07-03 12:14:58.289 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@58fbcb71
[DEBUG] 2022-07-03 12:14:58.291 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4a122e68
[DEBUG] 2022-07-03 12:14:58.293 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5cbe95b1
[DEBUG] 2022-07-03 12:14:58.293 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5cbe95b1
[DEBUG] 2022-07-03 12:14:58.293 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5cbe95b1
[DEBUG] 2022-07-03 12:14:58.294 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@43d3995f
[DEBUG] 2022-07-03 12:14:58.295 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@43d3995f
[DEBUG] 2022-07-03 12:14:58.296 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@43d3995f
[DEBUG] 2022-07-03 12:14:58.297 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d537616
[DEBUG] 2022-07-03 12:14:58.297 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@7d537616
[DEBUG] 2022-07-03 12:14:58.298 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7d537616
[DEBUG] 2022-07-03 12:14:58.298 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@628962e5
[DEBUG] 2022-07-03 12:14:58.299 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@628962e5
[DEBUG] 2022-07-03 12:14:58.299 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@628962e5
[DEBUG] 2022-07-03 12:14:58.302 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@208f7165
[DEBUG] 2022-07-03 12:14:58.302 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@208f7165
[DEBUG] 2022-07-03 12:14:58.302 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@208f7165
[DEBUG] 2022-07-03 12:14:58.303 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@778113f2
[DEBUG] 2022-07-03 12:14:58.304 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@778113f2
[DEBUG] 2022-07-03 12:14:58.304 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@778113f2
[DEBUG] 2022-07-03 12:14:58.305 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d01b0d8
[DEBUG] 2022-07-03 12:14:58.305 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5d01b0d8
[DEBUG] 2022-07-03 12:14:58.306 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5d01b0d8
[DEBUG] 2022-07-03 12:14:58.307 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@12f8682a
[DEBUG] 2022-07-03 12:14:58.307 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@12f8682a
[DEBUG] 2022-07-03 12:14:58.308 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5368e981
[DEBUG] 2022-07-03 12:14:58.308 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5368e981
[DEBUG] 2022-07-03 12:14:58.309 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4e8d9bb6
[DEBUG] 2022-07-03 12:14:58.309 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4e8d9bb6
[DEBUG] 2022-07-03 12:14:58.311 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@194224ca
[DEBUG] 2022-07-03 12:14:58.312 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c90029b
[DEBUG] 2022-07-03 12:14:58.313 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@17f8db6
[DEBUG] 2022-07-03 12:14:58.313 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@17f8db6
[DEBUG] 2022-07-03 12:14:58.314 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@318e3942
[DEBUG] 2022-07-03 12:14:58.315 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@318e3942
[DEBUG] 2022-07-03 12:14:58.316 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5d37aa0f
[DEBUG] 2022-07-03 12:14:58.316 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5d37aa0f
[DEBUG] 2022-07-03 12:14:58.318 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e4afd10
[DEBUG] 2022-07-03 12:14:58.318 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e4afd10
[DEBUG] 2022-07-03 12:14:58.319 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@48d44b46
[DEBUG] 2022-07-03 12:14:58.319 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@48d44b46
[DEBUG] 2022-07-03 12:14:58.320 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@dd20ebc
[DEBUG] 2022-07-03 12:14:58.321 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@dd20ebc
[DEBUG] 2022-07-03 12:14:58.321 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f7cd50e
[DEBUG] 2022-07-03 12:14:58.322 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5f7cd50e
[DEBUG] 2022-07-03 12:14:58.324 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@277bc3a5
[DEBUG] 2022-07-03 12:14:58.324 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@277bc3a5
[DEBUG] 2022-07-03 12:14:58.325 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56266bda
[DEBUG] 2022-07-03 12:14:58.325 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@56266bda
[DEBUG] 2022-07-03 12:14:58.326 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@42b4df5a
[DEBUG] 2022-07-03 12:14:58.326 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@42b4df5a
[DEBUG] 2022-07-03 12:14:58.329 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@63326a3a
[DEBUG] 2022-07-03 12:14:58.331 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@63326a3a
[DEBUG] 2022-07-03 12:14:58.332 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2d5ae78e
[DEBUG] 2022-07-03 12:14:58.332 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2d5ae78e
[DEBUG] 2022-07-03 12:14:58.332 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2d5ae78e
[DEBUG] 2022-07-03 12:14:58.334 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4f7bb8df
[DEBUG] 2022-07-03 12:14:58.335 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7717b4a0
[DEBUG] 2022-07-03 12:14:58.336 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7717b4a0
[DEBUG] 2022-07-03 12:14:58.336 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7717b4a0
[DEBUG] 2022-07-03 12:14:58.337 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@f76872f
[DEBUG] 2022-07-03 12:14:58.338 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@6f6c8d45
[DEBUG] 2022-07-03 12:14:58.339 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2ffb0d10
[DEBUG] 2022-07-03 12:14:58.339 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2ffb0d10
[DEBUG] 2022-07-03 12:14:58.340 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@63e70bf9
[DEBUG] 2022-07-03 12:14:58.343 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@63e70bf9
[DEBUG] 2022-07-03 12:14:58.345 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@433d93e7
[DEBUG] 2022-07-03 12:14:58.346 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@433d93e7
[DEBUG] 2022-07-03 12:14:58.346 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@7db47323
[DEBUG] 2022-07-03 12:14:58.347 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7db47323
[DEBUG] 2022-07-03 12:14:58.347 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@38fb151a
[DEBUG] 2022-07-03 12:14:58.349 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@38fb151a
[DEBUG] 2022-07-03 12:14:58.350 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1e6d30c0
[DEBUG] 2022-07-03 12:14:58.353 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@965bcbc
[DEBUG] 2022-07-03 12:14:58.353 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@965bcbc
[DEBUG] 2022-07-03 12:14:58.353 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@965bcbc
[DEBUG] 2022-07-03 12:14:58.354 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@48b3b1b8
[DEBUG] 2022-07-03 12:14:58.354 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@48b3b1b8
[DEBUG] 2022-07-03 12:14:58.355 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@48b3b1b8
[DEBUG] 2022-07-03 12:14:58.356 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4d2f9e3c
[DEBUG] 2022-07-03 12:14:58.357 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@652b3733
[DEBUG] 2022-07-03 12:14:58.359 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@478530cb
[DEBUG] 2022-07-03 12:14:58.359 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@478530cb
[DEBUG] 2022-07-03 12:14:58.359 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@478530cb
[DEBUG] 2022-07-03 12:14:58.359 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@17d816b3
[DEBUG] 2022-07-03 12:14:58.360 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@17d816b3
[DEBUG] 2022-07-03 12:14:58.360 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@17d816b3
[DEBUG] 2022-07-03 12:14:58.361 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@23321be7
[DEBUG] 2022-07-03 12:14:58.362 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@52856ff9
[DEBUG] 2022-07-03 12:14:58.364 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@38cf3ae1
[DEBUG] 2022-07-03 12:14:58.364 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38cf3ae1
[DEBUG] 2022-07-03 12:14:58.364 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@460f1cdb
[DEBUG] 2022-07-03 12:14:58.365 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@581918f6
[DEBUG] 2022-07-03 12:14:58.365 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@581918f6
[DEBUG] 2022-07-03 12:14:58.366 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@26865b57
[DEBUG] 2022-07-03 12:14:58.368 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@26865b57
[DEBUG] 2022-07-03 12:14:58.369 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@61993d18
[DEBUG] 2022-07-03 12:14:58.369 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@16e07bae
[DEBUG] 2022-07-03 12:14:58.371 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@26f5e45d
[DEBUG] 2022-07-03 12:14:58.374 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@32ba5c65
[DEBUG] 2022-07-03 12:14:58.375 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@32ba5c65
[DEBUG] 2022-07-03 12:14:58.375 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10166230
[DEBUG] 2022-07-03 12:14:58.377 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@b77b0a0
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15be68b
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@22ff1372
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@356341c9
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3a70575
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5d96d434
[DEBUG] 2022-07-03 12:14:58.380 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7283877
[INFO ] 2022-07-03 12:14:58.435 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:14:58.526 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:14:58.540 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:14:58.550 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:14:58.585 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@50fd739d marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:14:58.628 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b6fd0] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3d718248]
[DEBUG] 2022-07-03 12:14:58.898 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:14:58.903 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:14:58.904 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:14:58.905 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:14:58.906 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:14:58.906 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6b6fd0] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@65b5b5ed]
[INFO ] 2022-07-03 12:14:59.454 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:14:59.463 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@65b5b5ed] for TypeConfiguration
[INFO ] 2022-07-03 12:14:59.465 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:15:00.830 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:15:01.860 [Test worker] GetUserMileage - Started GetUserMileage in 6.544 seconds (JVM running for 9.044)
[INFO ] 2022-07-03 12:15:02.353 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:15:02.361 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@65b5b5ed] for TypeConfiguration
[DEBUG] 2022-07-03 12:15:02.362 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@220874d4] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@65b5b5ed]
[INFO ] 2022-07-03 12:15:02.366 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:15:02.375 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 12:15:23.670 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 12:15:23.684 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 12:15:23.693 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 12:15:23.843 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 12:15:23.922 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 12:15:23.935 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fb6097b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2dfe5525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1290c49, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6a9b9909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55d9b8f0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a518813, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@43d38654, org.springframework.test.context.event.EventPublishingTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1d75e7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4fc142ec]
[INFO ] 2022-07-03 12:15:24.471 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91141 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 12:15:24.488 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 12:15:25.592 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 12:15:25.724 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 12:15:26.751 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 12:15:26.804 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 12:15:26.975 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 12:15:26.999 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:15:27.000 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:15:27.005 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4a122e68
[DEBUG] 2022-07-03 12:15:27.010 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@280ecc33
[DEBUG] 2022-07-03 12:15:27.011 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@28fa541
[DEBUG] 2022-07-03 12:15:27.012 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1dca62c2
[DEBUG] 2022-07-03 12:15:27.013 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:15:27.013 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:15:27.013 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@11ad095c
[DEBUG] 2022-07-03 12:15:27.014 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:15:27.016 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:15:27.016 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4bf8b77
[DEBUG] 2022-07-03 12:15:27.017 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:15:27.018 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:15:27.018 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@370a8b6e
[DEBUG] 2022-07-03 12:15:27.019 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:15:27.019 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:15:27.020 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38054d01
[DEBUG] 2022-07-03 12:15:27.023 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:15:27.023 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:15:27.024 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@54275b5d
[DEBUG] 2022-07-03 12:15:27.025 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:15:27.025 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:15:27.025 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7d1cb59f
[DEBUG] 2022-07-03 12:15:27.026 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:15:27.026 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:15:27.027 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6851b296
[DEBUG] 2022-07-03 12:15:27.028 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:15:27.028 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb48970
[DEBUG] 2022-07-03 12:15:27.029 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:15:27.029 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@254e9709
[DEBUG] 2022-07-03 12:15:27.030 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:15:27.031 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@68a5aadd
[DEBUG] 2022-07-03 12:15:27.032 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5c4714ef
[DEBUG] 2022-07-03 12:15:27.033 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@18db3b3c
[DEBUG] 2022-07-03 12:15:27.034 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:15:27.034 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@65d7eea4
[DEBUG] 2022-07-03 12:15:27.035 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:15:27.036 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@632c3f55
[DEBUG] 2022-07-03 12:15:27.037 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:15:27.038 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@48277712
[DEBUG] 2022-07-03 12:15:27.040 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:15:27.040 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@21abda60
[DEBUG] 2022-07-03 12:15:27.040 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:15:27.041 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@f48a080
[DEBUG] 2022-07-03 12:15:27.041 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:15:27.042 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@750e2d33
[DEBUG] 2022-07-03 12:15:27.045 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:15:27.046 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@29b8df5
[DEBUG] 2022-07-03 12:15:27.047 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:15:27.047 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@36cfe107
[DEBUG] 2022-07-03 12:15:27.049 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:15:27.049 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@67b8d45
[DEBUG] 2022-07-03 12:15:27.050 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:15:27.051 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@e72fb04
[DEBUG] 2022-07-03 12:15:27.055 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:15:27.056 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@269c7104
[DEBUG] 2022-07-03 12:15:27.056 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:15:27.056 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:15:27.057 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@69b37f5c
[DEBUG] 2022-07-03 12:15:27.059 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@cf10c92
[DEBUG] 2022-07-03 12:15:27.060 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:15:27.061 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:15:27.062 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6f6c8d45
[DEBUG] 2022-07-03 12:15:27.063 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@5fe5c68b
[DEBUG] 2022-07-03 12:15:27.064 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@538aa83f
[DEBUG] 2022-07-03 12:15:27.066 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:15:27.066 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3c544c9
[DEBUG] 2022-07-03 12:15:27.067 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:15:27.069 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@336e3be2
[DEBUG] 2022-07-03 12:15:27.071 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:15:27.072 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@517a46f3
[DEBUG] 2022-07-03 12:15:27.072 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:15:27.072 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@38929da
[DEBUG] 2022-07-03 12:15:27.073 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:15:27.074 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@965bcbc
[DEBUG] 2022-07-03 12:15:27.076 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@603d25db
[DEBUG] 2022-07-03 12:15:27.078 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:15:27.078 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:15:27.079 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@671da0f9
[DEBUG] 2022-07-03 12:15:27.079 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:15:27.079 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:15:27.080 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7b598d05
[DEBUG] 2022-07-03 12:15:27.081 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5be7b749
[DEBUG] 2022-07-03 12:15:27.082 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@177ddd24
[DEBUG] 2022-07-03 12:15:27.083 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:15:27.083 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:15:27.083 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@61ad30f6
[DEBUG] 2022-07-03 12:15:27.084 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:15:27.084 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:15:27.084 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@574ebdaf
[DEBUG] 2022-07-03 12:15:27.085 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7d4d65f5
[DEBUG] 2022-07-03 12:15:27.086 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7d626f2
[DEBUG] 2022-07-03 12:15:27.087 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:15:27.088 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1e606f64
[DEBUG] 2022-07-03 12:15:27.088 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@100807ca
[DEBUG] 2022-07-03 12:15:27.089 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:15:27.089 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@79ba0285
[DEBUG] 2022-07-03 12:15:27.090 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:15:27.092 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@67dc6b48
[DEBUG] 2022-07-03 12:15:27.093 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d3ad37a
[DEBUG] 2022-07-03 12:15:27.093 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@c82d925
[DEBUG] 2022-07-03 12:15:27.094 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@1488a861
[DEBUG] 2022-07-03 12:15:27.098 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:15:27.099 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@286a4c52
[DEBUG] 2022-07-03 12:15:27.099 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@44de8e00
[DEBUG] 2022-07-03 12:15:27.101 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-03 12:15:27.103 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 12:15:27.103 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-03 12:15:27.104 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 12:15:27.104 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 12:15:27.104 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 12:15:27.104 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[INFO ] 2022-07-03 12:15:27.156 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 12:15:27.250 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 12:15:27.266 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 12:15:27.273 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 12:15:27.310 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@4119346d marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 12:15:27.359 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@949d347] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@f5ae29e]
[DEBUG] 2022-07-03 12:15:27.644 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 12:15:27.648 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 12:15:27.648 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 12:15:27.649 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 12:15:27.650 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 12:15:27.651 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@949d347] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:15:28.201 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 12:15:28.211 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[INFO ] 2022-07-03 12:15:28.213 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 12:15:29.670 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 12:15:30.557 [Test worker] GetUserMileage - Started GetUserMileage in 6.569 seconds (JVM running for 8.926)
[INFO ] 2022-07-03 12:15:31.104 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 12:15:31.113 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@52efb338] for TypeConfiguration
[DEBUG] 2022-07-03 12:15:31.114 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1296f039] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@52efb338]
[INFO ] 2022-07-03 12:15:31.119 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 12:15:31.134 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:12:04.045 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:12:04.066 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:12:04.073 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:12:04.222 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:12:04.301 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:12:04.315 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fb6097b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2dfe5525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1290c49, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6a9b9909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55d9b8f0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a518813, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@43d38654, org.springframework.test.context.event.EventPublishingTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1d75e7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4fc142ec]
[INFO ] 2022-07-03 16:12:04.861 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91381 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:12:04.882 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:12:06.037 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:12:06.171 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:12:07.189 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:12:07.251 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:12:07.434 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:12:07.459 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:12:07.460 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:12:07.463 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:12:07.467 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58fbcb71
[DEBUG] 2022-07-03 16:12:07.468 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a122e68
[DEBUG] 2022-07-03 16:12:07.468 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1de85972
[DEBUG] 2022-07-03 16:12:07.469 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:12:07.469 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:12:07.470 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:12:07.470 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:12:07.472 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:12:07.472 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:12:07.474 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:12:07.474 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:12:07.474 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:12:07.475 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:12:07.475 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:12:07.475 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:12:07.478 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:12:07.478 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:12:07.478 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:12:07.479 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:12:07.479 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:12:07.480 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:12:07.480 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:12:07.480 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:12:07.481 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:12:07.484 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5613247e
[DEBUG] 2022-07-03 16:12:07.484 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5613247e
[DEBUG] 2022-07-03 16:12:07.485 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4cd7e993
[DEBUG] 2022-07-03 16:12:07.485 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4cd7e993
[DEBUG] 2022-07-03 16:12:07.486 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@ff5d4f1
[DEBUG] 2022-07-03 16:12:07.487 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@ff5d4f1
[DEBUG] 2022-07-03 16:12:07.488 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c90029b
[DEBUG] 2022-07-03 16:12:07.489 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68a5aadd
[DEBUG] 2022-07-03 16:12:07.490 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@71fb8301
[DEBUG] 2022-07-03 16:12:07.490 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71fb8301
[DEBUG] 2022-07-03 16:12:07.491 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1c18ee69
[DEBUG] 2022-07-03 16:12:07.492 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1c18ee69
[DEBUG] 2022-07-03 16:12:07.492 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@72a3462f
[DEBUG] 2022-07-03 16:12:07.493 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72a3462f
[DEBUG] 2022-07-03 16:12:07.494 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d8be7b9
[DEBUG] 2022-07-03 16:12:07.495 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d8be7b9
[DEBUG] 2022-07-03 16:12:07.496 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@311a0b3e
[DEBUG] 2022-07-03 16:12:07.496 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@311a0b3e
[DEBUG] 2022-07-03 16:12:07.500 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@749d7c01
[DEBUG] 2022-07-03 16:12:07.501 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@749d7c01
[DEBUG] 2022-07-03 16:12:07.504 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:12:07.504 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:12:07.505 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1857fe6c
[DEBUG] 2022-07-03 16:12:07.505 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1857fe6c
[DEBUG] 2022-07-03 16:12:07.506 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53b7bf01
[DEBUG] 2022-07-03 16:12:07.507 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53b7bf01
[DEBUG] 2022-07-03 16:12:07.508 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@52f43225
[DEBUG] 2022-07-03 16:12:07.509 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52f43225
[DEBUG] 2022-07-03 16:12:07.513 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@e72fb04
[DEBUG] 2022-07-03 16:12:07.513 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e72fb04
[DEBUG] 2022-07-03 16:12:07.514 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:12:07.514 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:12:07.514 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:12:07.517 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70543cae
[DEBUG] 2022-07-03 16:12:07.518 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:12:07.519 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:12:07.520 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:12:07.521 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a6556b6
[DEBUG] 2022-07-03 16:12:07.523 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1851c7d2
[DEBUG] 2022-07-03 16:12:07.524 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@38dbeb39
[DEBUG] 2022-07-03 16:12:07.524 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38dbeb39
[DEBUG] 2022-07-03 16:12:07.525 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59371066
[DEBUG] 2022-07-03 16:12:07.528 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59371066
[DEBUG] 2022-07-03 16:12:07.530 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c2883b1
[DEBUG] 2022-07-03 16:12:07.530 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c2883b1
[DEBUG] 2022-07-03 16:12:07.531 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@fd4459b
[DEBUG] 2022-07-03 16:12:07.531 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fd4459b
[DEBUG] 2022-07-03 16:12:07.532 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@789dd6bf
[DEBUG] 2022-07-03 16:12:07.533 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@789dd6bf
[DEBUG] 2022-07-03 16:12:07.535 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8f4b803
[DEBUG] 2022-07-03 16:12:07.536 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:12:07.537 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:12:07.537 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:12:07.538 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:12:07.538 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:12:07.538 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:12:07.539 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5501d1c8
[DEBUG] 2022-07-03 16:12:07.540 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@b32e983
[DEBUG] 2022-07-03 16:12:07.541 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:12:07.542 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:12:07.542 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:12:07.542 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:12:07.543 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:12:07.543 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:12:07.544 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@52856ff9
[DEBUG] 2022-07-03 16:12:07.544 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@574ebdaf
[DEBUG] 2022-07-03 16:12:07.546 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@460f1cdb
[DEBUG] 2022-07-03 16:12:07.546 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460f1cdb
[DEBUG] 2022-07-03 16:12:07.546 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c9f4376
[DEBUG] 2022-07-03 16:12:07.547 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@c67395
[DEBUG] 2022-07-03 16:12:07.547 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c67395
[DEBUG] 2022-07-03 16:12:07.548 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6df2a206
[DEBUG] 2022-07-03 16:12:07.550 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6df2a206
[DEBUG] 2022-07-03 16:12:07.551 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16e07bae
[DEBUG] 2022-07-03 16:12:07.552 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67dc6b48
[DEBUG] 2022-07-03 16:12:07.553 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@55c03e4
[DEBUG] 2022-07-03 16:12:07.556 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10166230
[DEBUG] 2022-07-03 16:12:07.557 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10166230
[DEBUG] 2022-07-03 16:12:07.558 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22ff1372
[DEBUG] 2022-07-03 16:12:07.560 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a70575
[DEBUG] 2022-07-03 16:12:07.561 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d96d434
[DEBUG] 2022-07-03 16:12:07.561 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7283877
[DEBUG] 2022-07-03 16:12:07.561 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@286a4c52
[DEBUG] 2022-07-03 16:12:07.561 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13dd7887
[DEBUG] 2022-07-03 16:12:07.561 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@780129bc
[DEBUG] 2022-07-03 16:12:07.562 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[INFO ] 2022-07-03 16:12:07.614 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:12:07.711 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:12:07.729 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:12:07.738 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:12:07.772 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@78504ce9 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:12:07.821 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450ffa3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4e756867]
[DEBUG] 2022-07-03 16:12:08.104 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:12:08.106 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:12:08.107 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:12:08.107 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:12:08.108 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:12:08.109 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1450ffa3] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@44392e64]
[INFO ] 2022-07-03 16:12:08.656 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:12:08.665 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44392e64] for TypeConfiguration
[INFO ] 2022-07-03 16:12:08.691 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:12:10.139 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:12:11.078 [Test worker] GetUserMileage - Started GetUserMileage in 6.704 seconds (JVM running for 9.097)
[INFO ] 2022-07-03 16:12:11.620 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:12:11.630 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@44392e64] for TypeConfiguration
[DEBUG] 2022-07-03 16:12:11.631 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@15d40d5c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@44392e64]
[INFO ] 2022-07-03 16:12:11.636 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:12:11.647 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:27:06.777 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:27:06.786 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:27:06.792 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:27:06.945 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:27:07.034 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:27:07.050 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@481e91b6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c8f9c2e, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@140d1230, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3cbf1ba4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@10bea4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e2c64, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c1e32c9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@383864d5, org.springframework.test.context.event.EventPublishingTestExecutionListener@3dd818e8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4cb40e3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41b1f51e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3a543f31, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@47b67fcb, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2b9f74d0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@65c86db8]
[INFO ] 2022-07-03 16:27:07.571 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91624 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:27:07.593 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:27:08.765 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:27:08.906 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:27:09.839 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:27:09.907 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:27:10.143 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:27:10.172 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:10.173 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:10.176 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:10.177 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38054d01
[DEBUG] 2022-07-03 16:27:10.179 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ba35152
[DEBUG] 2022-07-03 16:27:10.180 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54275b5d
[DEBUG] 2022-07-03 16:27:10.181 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:10.181 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:10.181 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:10.182 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:10.183 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:10.183 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:10.186 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:10.186 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:10.186 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:10.187 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:10.188 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:10.188 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:10.190 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:10.191 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:10.191 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:10.191 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:10.192 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:10.192 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:10.192 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:10.193 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:10.193 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:10.194 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56b05bd7
[DEBUG] 2022-07-03 16:27:10.195 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56b05bd7
[DEBUG] 2022-07-03 16:27:10.196 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d53e876
[DEBUG] 2022-07-03 16:27:10.196 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d53e876
[DEBUG] 2022-07-03 16:27:10.197 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@21abda60
[DEBUG] 2022-07-03 16:27:10.197 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@21abda60
[DEBUG] 2022-07-03 16:27:10.199 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@749d7c01
[DEBUG] 2022-07-03 16:27:10.200 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@401ec794
[DEBUG] 2022-07-03 16:27:10.201 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@277bc3a5
[DEBUG] 2022-07-03 16:27:10.201 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@277bc3a5
[DEBUG] 2022-07-03 16:27:10.202 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@20890a1a
[DEBUG] 2022-07-03 16:27:10.203 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20890a1a
[DEBUG] 2022-07-03 16:27:10.204 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@100eeedc
[DEBUG] 2022-07-03 16:27:10.205 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@100eeedc
[DEBUG] 2022-07-03 16:27:10.207 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ff4b223
[DEBUG] 2022-07-03 16:27:10.207 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ff4b223
[DEBUG] 2022-07-03 16:27:10.208 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@365e65bb
[DEBUG] 2022-07-03 16:27:10.208 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@365e65bb
[DEBUG] 2022-07-03 16:27:10.209 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e04abc5
[DEBUG] 2022-07-03 16:27:10.210 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e04abc5
[DEBUG] 2022-07-03 16:27:10.212 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21f91efa
[DEBUG] 2022-07-03 16:27:10.213 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21f91efa
[DEBUG] 2022-07-03 16:27:10.213 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70543cae
[DEBUG] 2022-07-03 16:27:10.214 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70543cae
[DEBUG] 2022-07-03 16:27:10.215 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63bca84d
[DEBUG] 2022-07-03 16:27:10.215 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63bca84d
[DEBUG] 2022-07-03 16:27:10.216 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3e9fb485
[DEBUG] 2022-07-03 16:27:10.217 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e9fb485
[DEBUG] 2022-07-03 16:27:10.220 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59371066
[DEBUG] 2022-07-03 16:27:10.222 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59371066
[DEBUG] 2022-07-03 16:27:10.223 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:10.223 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:10.223 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:10.225 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5529522f
[DEBUG] 2022-07-03 16:27:10.226 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:10.227 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:10.229 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:10.229 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fe87c0e
[DEBUG] 2022-07-03 16:27:10.230 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5ee6fdc4
[DEBUG] 2022-07-03 16:27:10.233 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@29c244e
[DEBUG] 2022-07-03 16:27:10.234 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29c244e
[DEBUG] 2022-07-03 16:27:10.235 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6e7e0259
[DEBUG] 2022-07-03 16:27:10.237 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e7e0259
[DEBUG] 2022-07-03 16:27:10.239 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c346c45
[DEBUG] 2022-07-03 16:27:10.239 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c346c45
[DEBUG] 2022-07-03 16:27:10.240 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@269308cc
[DEBUG] 2022-07-03 16:27:10.241 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@269308cc
[DEBUG] 2022-07-03 16:27:10.241 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23321be7
[DEBUG] 2022-07-03 16:27:10.243 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23321be7
[DEBUG] 2022-07-03 16:27:10.245 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5aa7cfdf
[DEBUG] 2022-07-03 16:27:10.246 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:10.246 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:10.246 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:10.247 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:10.247 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:10.248 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:10.249 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e606f64
[DEBUG] 2022-07-03 16:27:10.250 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@c67395
[DEBUG] 2022-07-03 16:27:10.251 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:10.251 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:10.251 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:10.252 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:10.252 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:10.252 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:10.253 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@67dc6b48
[DEBUG] 2022-07-03 16:27:10.255 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@11cadb32
[DEBUG] 2022-07-03 16:27:10.256 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1fa9692b
[DEBUG] 2022-07-03 16:27:10.256 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1fa9692b
[DEBUG] 2022-07-03 16:27:10.256 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@324e8baa
[DEBUG] 2022-07-03 16:27:10.257 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47797401
[DEBUG] 2022-07-03 16:27:10.257 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47797401
[DEBUG] 2022-07-03 16:27:10.258 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7283877
[DEBUG] 2022-07-03 16:27:10.261 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7283877
[DEBUG] 2022-07-03 16:27:10.263 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44de8e00
[DEBUG] 2022-07-03 16:27:10.264 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@210635fd
[DEBUG] 2022-07-03 16:27:10.266 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@342a1f84
[DEBUG] 2022-07-03 16:27:10.268 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@30228de7
[DEBUG] 2022-07-03 16:27:10.268 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30228de7
[DEBUG] 2022-07-03 16:27:10.269 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2976ca51
[DEBUG] 2022-07-03 16:27:10.270 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6996bbc4
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1de08775
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dbf2da
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21a5b599
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7db162f2
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64f3991e
[DEBUG] 2022-07-03 16:27:10.272 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39e3ea78
[INFO ] 2022-07-03 16:27:10.328 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:27:10.428 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:27:10.448 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:27:10.457 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:27:10.493 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@56b66a26 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:27:10.539 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65259c53] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4bff28e7]
[DEBUG] 2022-07-03 16:27:10.831 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:27:10.833 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:27:10.834 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:27:10.834 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:27:10.835 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:27:10.835 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@65259c53] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@652f26da]
[INFO ] 2022-07-03 16:27:11.459 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:27:11.481 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@652f26da] for TypeConfiguration
[INFO ] 2022-07-03 16:27:11.484 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:27:12.920 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:27:13.840 [Test worker] GetUserMileage - Started GetUserMileage in 6.73 seconds (JVM running for 9.368)
[INFO ] 2022-07-03 16:27:14.460 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:27:14.469 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@652f26da] for TypeConfiguration
[DEBUG] 2022-07-03 16:27:14.470 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@28b0835] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@652f26da]
[INFO ] 2022-07-03 16:27:14.476 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:27:14.488 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:27:32.905 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:27:32.913 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:27:32.922 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:27:33.089 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:27:33.174 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:27:33.188 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@481e91b6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c8f9c2e, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@140d1230, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3cbf1ba4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@10bea4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e2c64, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c1e32c9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@383864d5, org.springframework.test.context.event.EventPublishingTestExecutionListener@3dd818e8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4cb40e3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41b1f51e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3a543f31, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@47b67fcb, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2b9f74d0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@65c86db8]
[INFO ] 2022-07-03 16:27:33.697 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91649 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:27:33.710 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:27:34.888 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:27:35.028 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:27:36.043 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:27:36.101 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:27:36.274 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:27:36.299 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:36.300 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:36.304 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@208f7165
[DEBUG] 2022-07-03 16:27:36.304 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@38054d01
[DEBUG] 2022-07-03 16:27:36.308 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1ba35152
[DEBUG] 2022-07-03 16:27:36.312 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@54275b5d
[DEBUG] 2022-07-03 16:27:36.313 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:36.313 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:36.314 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@16ccd2bc
[DEBUG] 2022-07-03 16:27:36.314 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:36.316 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:36.316 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@9e50283
[DEBUG] 2022-07-03 16:27:36.318 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:36.318 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:36.318 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4e8d9bb6
[DEBUG] 2022-07-03 16:27:36.319 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:36.320 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:36.320 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@350f18a6
[DEBUG] 2022-07-03 16:27:36.323 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:36.323 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:36.323 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1a89414e
[DEBUG] 2022-07-03 16:27:36.324 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:36.324 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:36.324 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@18db3b3c
[DEBUG] 2022-07-03 16:27:36.325 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:36.326 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:36.327 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@65d7eea4
[DEBUG] 2022-07-03 16:27:36.329 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@56b05bd7
[DEBUG] 2022-07-03 16:27:36.329 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@56b05bd7
[DEBUG] 2022-07-03 16:27:36.329 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3d53e876
[DEBUG] 2022-07-03 16:27:36.330 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3d53e876
[DEBUG] 2022-07-03 16:27:36.331 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@21abda60
[DEBUG] 2022-07-03 16:27:36.332 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@21abda60
[DEBUG] 2022-07-03 16:27:36.333 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@749d7c01
[DEBUG] 2022-07-03 16:27:36.334 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@401ec794
[DEBUG] 2022-07-03 16:27:36.335 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@277bc3a5
[DEBUG] 2022-07-03 16:27:36.335 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@277bc3a5
[DEBUG] 2022-07-03 16:27:36.336 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@20890a1a
[DEBUG] 2022-07-03 16:27:36.336 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@20890a1a
[DEBUG] 2022-07-03 16:27:36.337 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@100eeedc
[DEBUG] 2022-07-03 16:27:36.338 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@100eeedc
[DEBUG] 2022-07-03 16:27:36.340 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@ff4b223
[DEBUG] 2022-07-03 16:27:36.340 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@ff4b223
[DEBUG] 2022-07-03 16:27:36.341 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@365e65bb
[DEBUG] 2022-07-03 16:27:36.341 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@365e65bb
[DEBUG] 2022-07-03 16:27:36.341 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@3e04abc5
[DEBUG] 2022-07-03 16:27:36.342 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@3e04abc5
[DEBUG] 2022-07-03 16:27:36.345 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21f91efa
[DEBUG] 2022-07-03 16:27:36.345 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@21f91efa
[DEBUG] 2022-07-03 16:27:36.346 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@70543cae
[DEBUG] 2022-07-03 16:27:36.347 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@70543cae
[DEBUG] 2022-07-03 16:27:36.348 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63bca84d
[DEBUG] 2022-07-03 16:27:36.348 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@63bca84d
[DEBUG] 2022-07-03 16:27:36.349 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3e9fb485
[DEBUG] 2022-07-03 16:27:36.350 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3e9fb485
[DEBUG] 2022-07-03 16:27:36.354 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@59371066
[DEBUG] 2022-07-03 16:27:36.354 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@59371066
[DEBUG] 2022-07-03 16:27:36.355 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:36.355 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:36.355 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6c2883b1
[DEBUG] 2022-07-03 16:27:36.358 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5529522f
[DEBUG] 2022-07-03 16:27:36.359 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:36.360 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:36.361 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1b60d324
[DEBUG] 2022-07-03 16:27:36.362 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7fe87c0e
[DEBUG] 2022-07-03 16:27:36.363 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@5ee6fdc4
[DEBUG] 2022-07-03 16:27:36.367 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@29c244e
[DEBUG] 2022-07-03 16:27:36.367 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@29c244e
[DEBUG] 2022-07-03 16:27:36.368 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6e7e0259
[DEBUG] 2022-07-03 16:27:36.370 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6e7e0259
[DEBUG] 2022-07-03 16:27:36.372 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@3c346c45
[DEBUG] 2022-07-03 16:27:36.373 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@3c346c45
[DEBUG] 2022-07-03 16:27:36.374 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@269308cc
[DEBUG] 2022-07-03 16:27:36.374 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@269308cc
[DEBUG] 2022-07-03 16:27:36.375 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@23321be7
[DEBUG] 2022-07-03 16:27:36.377 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@23321be7
[DEBUG] 2022-07-03 16:27:36.378 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@5aa7cfdf
[DEBUG] 2022-07-03 16:27:36.380 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:36.380 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:36.380 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@7d4d65f5
[DEBUG] 2022-07-03 16:27:36.381 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:36.381 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:36.381 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@349f3ff7
[DEBUG] 2022-07-03 16:27:36.382 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@1e606f64
[DEBUG] 2022-07-03 16:27:36.384 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@c67395
[DEBUG] 2022-07-03 16:27:36.385 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:36.385 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:36.385 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@46894dc5
[DEBUG] 2022-07-03 16:27:36.386 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:36.386 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:36.386 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3e39f08c
[DEBUG] 2022-07-03 16:27:36.387 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@67dc6b48
[DEBUG] 2022-07-03 16:27:36.390 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@11cadb32
[DEBUG] 2022-07-03 16:27:36.391 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1fa9692b
[DEBUG] 2022-07-03 16:27:36.392 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1fa9692b
[DEBUG] 2022-07-03 16:27:36.392 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@324e8baa
[DEBUG] 2022-07-03 16:27:36.393 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@47797401
[DEBUG] 2022-07-03 16:27:36.393 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@47797401
[DEBUG] 2022-07-03 16:27:36.394 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7283877
[DEBUG] 2022-07-03 16:27:36.396 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7283877
[DEBUG] 2022-07-03 16:27:36.397 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@44de8e00
[DEBUG] 2022-07-03 16:27:36.398 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@210635fd
[DEBUG] 2022-07-03 16:27:36.400 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@342a1f84
[DEBUG] 2022-07-03 16:27:36.403 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@30228de7
[DEBUG] 2022-07-03 16:27:36.403 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30228de7
[DEBUG] 2022-07-03 16:27:36.403 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2976ca51
[DEBUG] 2022-07-03 16:27:36.404 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6996bbc4
[DEBUG] 2022-07-03 16:27:36.404 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1de08775
[DEBUG] 2022-07-03 16:27:36.404 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2dbf2da
[DEBUG] 2022-07-03 16:27:36.406 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@21a5b599
[DEBUG] 2022-07-03 16:27:36.407 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7db162f2
[DEBUG] 2022-07-03 16:27:36.408 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@64f3991e
[DEBUG] 2022-07-03 16:27:36.408 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@39e3ea78
[INFO ] 2022-07-03 16:27:36.458 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:27:36.557 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:27:36.574 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:27:36.582 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:27:36.613 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@56b66a26 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:27:36.665 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39e7e040] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2591d23a]
[DEBUG] 2022-07-03 16:27:36.935 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:27:36.938 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:27:36.939 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:27:36.939 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:27:36.940 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:27:36.940 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@39e7e040] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@652f26da]
[INFO ] 2022-07-03 16:27:37.597 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:27:37.618 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@652f26da] for TypeConfiguration
[INFO ] 2022-07-03 16:27:37.621 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:27:39.102 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:27:40.022 [Test worker] GetUserMileage - Started GetUserMileage in 6.779 seconds (JVM running for 9.255)
[INFO ] 2022-07-03 16:27:40.538 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:27:40.547 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@652f26da] for TypeConfiguration
[DEBUG] 2022-07-03 16:27:40.548 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@e4d750d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@652f26da]
[INFO ] 2022-07-03 16:27:40.555 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:27:40.569 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:28:02.066 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:28:02.076 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:28:02.084 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:28:02.239 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:28:02.317 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:28:02.330 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@481e91b6, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c8f9c2e, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@140d1230, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3cbf1ba4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@10bea4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7e2c64, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7c1e32c9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@383864d5, org.springframework.test.context.event.EventPublishingTestExecutionListener@3dd818e8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4cb40e3b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@41b1f51e, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3a543f31, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@47b67fcb, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2b9f74d0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@65c86db8]
[INFO ] 2022-07-03 16:28:02.840 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91668 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:28:02.857 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:28:03.995 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:28:04.143 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:28:05.093 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:28:05.155 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:28:05.381 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:28:05.411 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1ba35152
[DEBUG] 2022-07-03 16:28:05.412 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@1ba35152
[DEBUG] 2022-07-03 16:28:05.415 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1ba35152
[DEBUG] 2022-07-03 16:28:05.417 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5d01b0d8
[DEBUG] 2022-07-03 16:28:05.418 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@31b6b0c7
[DEBUG] 2022-07-03 16:28:05.419 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@12f8682a
[DEBUG] 2022-07-03 16:28:05.420 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1c171746
[DEBUG] 2022-07-03 16:28:05.421 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1c171746
[DEBUG] 2022-07-03 16:28:05.421 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1c171746
[DEBUG] 2022-07-03 16:28:05.422 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@3de56885
[DEBUG] 2022-07-03 16:28:05.424 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@3de56885
[DEBUG] 2022-07-03 16:28:05.424 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@3de56885
[DEBUG] 2022-07-03 16:28:05.429 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1c90029b
[DEBUG] 2022-07-03 16:28:05.429 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@1c90029b
[DEBUG] 2022-07-03 16:28:05.429 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1c90029b
[DEBUG] 2022-07-03 16:28:05.430 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@17f8db6
[DEBUG] 2022-07-03 16:28:05.431 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@17f8db6
[DEBUG] 2022-07-03 16:28:05.432 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@17f8db6
[DEBUG] 2022-07-03 16:28:05.435 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1c4057f9
[DEBUG] 2022-07-03 16:28:05.435 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@1c4057f9
[DEBUG] 2022-07-03 16:28:05.436 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@1c4057f9
[DEBUG] 2022-07-03 16:28:05.437 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6076c66
[DEBUG] 2022-07-03 16:28:05.437 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6076c66
[DEBUG] 2022-07-03 16:28:05.437 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6076c66
[DEBUG] 2022-07-03 16:28:05.438 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e4afd10
[DEBUG] 2022-07-03 16:28:05.439 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@3e4afd10
[DEBUG] 2022-07-03 16:28:05.440 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3e4afd10
[DEBUG] 2022-07-03 16:28:05.442 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@aa0dbca
[DEBUG] 2022-07-03 16:28:05.442 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@aa0dbca
[DEBUG] 2022-07-03 16:28:05.444 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6c70b7c3
[DEBUG] 2022-07-03 16:28:05.444 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6c70b7c3
[DEBUG] 2022-07-03 16:28:05.446 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@401ec794
[DEBUG] 2022-07-03 16:28:05.447 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@401ec794
[DEBUG] 2022-07-03 16:28:05.449 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@750e2d33
[DEBUG] 2022-07-03 16:28:05.450 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@252c6cdb
[DEBUG] 2022-07-03 16:28:05.451 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@78bad03b
[DEBUG] 2022-07-03 16:28:05.451 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@78bad03b
[DEBUG] 2022-07-03 16:28:05.453 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@18bb1b88
[DEBUG] 2022-07-03 16:28:05.455 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@18bb1b88
[DEBUG] 2022-07-03 16:28:05.456 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@61554b6b
[DEBUG] 2022-07-03 16:28:05.458 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@61554b6b
[DEBUG] 2022-07-03 16:28:05.460 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:28:05.460 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:28:05.461 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7ee12d58
[DEBUG] 2022-07-03 16:28:05.462 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7ee12d58
[DEBUG] 2022-07-03 16:28:05.463 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4df0d9f8
[DEBUG] 2022-07-03 16:28:05.464 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4df0d9f8
[DEBUG] 2022-07-03 16:28:05.466 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a5b7394
[DEBUG] 2022-07-03 16:28:05.467 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1a5b7394
[DEBUG] 2022-07-03 16:28:05.468 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@cf10c92
[DEBUG] 2022-07-03 16:28:05.469 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@cf10c92
[DEBUG] 2022-07-03 16:28:05.470 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ffb0d10
[DEBUG] 2022-07-03 16:28:05.471 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2ffb0d10
[DEBUG] 2022-07-03 16:28:05.472 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@59371066
[DEBUG] 2022-07-03 16:28:05.474 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@59371066
[DEBUG] 2022-07-03 16:28:05.477 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@336e3be2
[DEBUG] 2022-07-03 16:28:05.479 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@336e3be2
[DEBUG] 2022-07-03 16:28:05.481 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@517a46f3
[DEBUG] 2022-07-03 16:28:05.481 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@517a46f3
[DEBUG] 2022-07-03 16:28:05.481 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@517a46f3
[DEBUG] 2022-07-03 16:28:05.484 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@182e4365
[DEBUG] 2022-07-03 16:28:05.485 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@18483b8b
[DEBUG] 2022-07-03 16:28:05.487 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@18483b8b
[DEBUG] 2022-07-03 16:28:05.487 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@18483b8b
[DEBUG] 2022-07-03 16:28:05.488 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3f9f8d23
[DEBUG] 2022-07-03 16:28:05.491 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@39a3984c
[DEBUG] 2022-07-03 16:28:05.495 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5501d1c8
[DEBUG] 2022-07-03 16:28:05.496 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5501d1c8
[DEBUG] 2022-07-03 16:28:05.497 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@16df9bde
[DEBUG] 2022-07-03 16:28:05.499 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@16df9bde
[DEBUG] 2022-07-03 16:28:05.501 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@17d816b3
[DEBUG] 2022-07-03 16:28:05.503 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@17d816b3
[DEBUG] 2022-07-03 16:28:05.505 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@312f3050
[DEBUG] 2022-07-03 16:28:05.505 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@312f3050
[DEBUG] 2022-07-03 16:28:05.506 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@33f349ae
[DEBUG] 2022-07-03 16:28:05.507 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@33f349ae
[DEBUG] 2022-07-03 16:28:05.510 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@38cf3ae1
[DEBUG] 2022-07-03 16:28:05.511 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3c9f4376
[DEBUG] 2022-07-03 16:28:05.512 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3c9f4376
[DEBUG] 2022-07-03 16:28:05.512 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3c9f4376
[DEBUG] 2022-07-03 16:28:05.512 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1958c0d9
[DEBUG] 2022-07-03 16:28:05.512 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1958c0d9
[DEBUG] 2022-07-03 16:28:05.513 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1958c0d9
[DEBUG] 2022-07-03 16:28:05.513 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@43ab9ae9
[DEBUG] 2022-07-03 16:28:05.517 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@79ba0285
[DEBUG] 2022-07-03 16:28:05.518 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@598778cc
[DEBUG] 2022-07-03 16:28:05.518 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@598778cc
[DEBUG] 2022-07-03 16:28:05.518 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@598778cc
[DEBUG] 2022-07-03 16:28:05.519 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@11cadb32
[DEBUG] 2022-07-03 16:28:05.520 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@11cadb32
[DEBUG] 2022-07-03 16:28:05.520 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@11cadb32
[DEBUG] 2022-07-03 16:28:05.522 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@c82d925
[DEBUG] 2022-07-03 16:28:05.525 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@7a0f06ad
[DEBUG] 2022-07-03 16:28:05.526 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@43fd77d8
[DEBUG] 2022-07-03 16:28:05.527 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@43fd77d8
[DEBUG] 2022-07-03 16:28:05.527 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1ad1be5d
[DEBUG] 2022-07-03 16:28:05.528 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5d96d434
[DEBUG] 2022-07-03 16:28:05.528 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5d96d434
[DEBUG] 2022-07-03 16:28:05.530 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@210635fd
[DEBUG] 2022-07-03 16:28:05.532 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@210635fd
[DEBUG] 2022-07-03 16:28:05.535 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@144e36ae
[DEBUG] 2022-07-03 16:28:05.536 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1ad1b737
[DEBUG] 2022-07-03 16:28:05.538 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@f810c18
[DEBUG] 2022-07-03 16:28:05.540 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@21a5b599
[DEBUG] 2022-07-03 16:28:05.541 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@21a5b599
[DEBUG] 2022-07-03 16:28:05.541 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35e689a0
[DEBUG] 2022-07-03 16:28:05.542 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3bf5911d
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1de30c31
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cc93da4
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69d2fb0a
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7e38e254
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7b3feb26
[DEBUG] 2022-07-03 16:28:05.545 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e4ecdf8
[INFO ] 2022-07-03 16:28:05.616 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:28:05.737 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:28:05.760 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:28:05.769 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:28:05.812 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@3ea9a091 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:28:05.894 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@141b011a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7976e536]
[DEBUG] 2022-07-03 16:28:06.196 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:28:06.202 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:28:06.204 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:28:06.204 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:28:06.205 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:28:06.205 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@141b011a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@58068b40]
[INFO ] 2022-07-03 16:28:06.774 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:28:06.838 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@58068b40] for TypeConfiguration
[INFO ] 2022-07-03 16:28:06.852 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:28:08.349 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:28:09.314 [Test worker] GetUserMileage - Started GetUserMileage in 6.93 seconds (JVM running for 9.393)
[INFO ] 2022-07-03 16:28:09.894 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:28:09.909 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@58068b40] for TypeConfiguration
[DEBUG] 2022-07-03 16:28:09.910 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75f595e2] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@58068b40]
[INFO ] 2022-07-03 16:28:09.915 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:28:09.932 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:32:10.362 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:32:10.384 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:32:10.390 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:32:10.559 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:32:10.648 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:32:10.660 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:32:11.218 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91759 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:32:11.230 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:32:12.348 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:32:12.491 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:32:13.489 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:32:13.557 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:32:13.779 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:32:13.808 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:32:13.809 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:32:13.814 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:32:13.818 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:32:13.822 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:32:13.824 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:32:13.826 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:32:13.826 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:32:13.826 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:32:13.827 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:32:13.829 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:32:13.829 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:32:13.832 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:32:13.833 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:32:13.833 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:32:13.834 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:32:13.834 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:32:13.835 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:32:13.839 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:32:13.839 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:32:13.840 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:32:13.840 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:32:13.841 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:32:13.841 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:32:13.842 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:32:13.842 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:32:13.844 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:32:13.847 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:32:13.847 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:32:13.848 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:32:13.849 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:32:13.850 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:32:13.850 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:32:13.852 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:32:13.853 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:32:13.854 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:32:13.854 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:32:13.855 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:32:13.856 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:32:13.857 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:32:13.858 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:32:13.859 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:32:13.860 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:32:13.860 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:32:13.861 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:32:13.861 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:32:13.862 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:32:13.868 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:32:13.868 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:32:13.869 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:32:13.869 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:32:13.870 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:32:13.870 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:32:13.871 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:32:13.872 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:32:13.879 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:32:13.881 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:32:13.882 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:32:13.882 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:32:13.882 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:32:13.885 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:32:13.886 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:32:13.888 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:32:13.894 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:32:13.895 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:32:13.897 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:32:13.899 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:32:13.899 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:32:13.900 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:32:13.904 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:32:13.906 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:32:13.907 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:32:13.907 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:32:13.908 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:32:13.908 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:32:13.911 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:32:13.914 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:32:13.916 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:32:13.916 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:32:13.916 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:32:13.917 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:32:13.917 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:32:13.917 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:32:13.919 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:32:13.921 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:32:13.922 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:32:13.922 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:32:13.923 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:32:13.923 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:32:13.923 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:32:13.923 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:32:13.925 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:32:13.926 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:32:13.928 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:32:13.928 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:32:13.929 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:32:13.930 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:32:13.930 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:32:13.931 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:32:13.933 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:32:13.934 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:32:13.935 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:32:13.936 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:32:13.939 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:32:13.941 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:32:13.942 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:32:13.943 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:32:13.943 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:32:13.943 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:32:13.944 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:32:13.945 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:32:13.945 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:32:13.945 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:32:14.002 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:32:14.104 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:32:14.124 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:32:14.131 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:32:14.168 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:32:14.229 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b90cc1]
[DEBUG] 2022-07-03 16:32:14.525 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:32:14.528 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:32:14.528 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:32:14.528 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:32:14.529 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:32:14.530 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:32:15.173 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:32:15.182 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:32:15.185 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:32:16.797 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:32:17.882 [Test worker] GetUserMileage - Started GetUserMileage in 7.166 seconds (JVM running for 9.863)
[INFO ] 2022-07-03 16:32:18.576 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:32:18.596 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:32:18.612 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@601bc4e0] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:32:18.619 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:32:18.632 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:33:21.069 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:33:21.085 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:33:21.091 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:33:21.258 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:33:21.340 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:33:21.354 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:33:21.881 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91801 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:33:21.892 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:33:23.053 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:33:23.198 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:33:24.191 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:33:24.250 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:33:24.436 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:33:24.462 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:33:24.462 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:33:24.465 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:33:24.469 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:33:24.470 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:33:24.471 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:33:24.472 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:33:24.473 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:33:24.473 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:33:24.474 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:33:24.475 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:33:24.475 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:33:24.477 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:33:24.477 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:33:24.477 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:33:24.478 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:33:24.478 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:33:24.479 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:33:24.481 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:33:24.481 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:33:24.482 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:33:24.482 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:33:24.482 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:33:24.483 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:33:24.483 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:33:24.483 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:33:24.484 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:33:24.486 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:33:24.486 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:33:24.487 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:33:24.487 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:33:24.488 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:33:24.488 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:33:24.490 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:33:24.491 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:33:24.492 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:33:24.492 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:33:24.493 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:33:24.494 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:33:24.495 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:33:24.496 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:33:24.498 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:33:24.498 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:33:24.499 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:33:24.499 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:33:24.500 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:33:24.501 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:33:24.504 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:33:24.504 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:33:24.505 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:33:24.505 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:33:24.507 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:33:24.507 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:33:24.508 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:33:24.509 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:33:24.515 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:33:24.516 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:33:24.517 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:33:24.517 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:33:24.518 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:33:24.521 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:33:24.522 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:33:24.524 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:33:24.525 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:33:24.526 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:33:24.527 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:33:24.527 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:33:24.528 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:33:24.528 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:33:24.531 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:33:24.533 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:33:24.534 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:33:24.534 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:33:24.534 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:33:24.535 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:33:24.539 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:33:24.541 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:33:24.543 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:33:24.543 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:33:24.543 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:33:24.544 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:33:24.544 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:33:24.544 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:33:24.544 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:33:24.546 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:33:24.547 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:33:24.547 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:33:24.547 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:33:24.547 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:33:24.548 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:33:24.548 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:33:24.549 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:33:24.551 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:33:24.553 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:33:24.553 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:33:24.553 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:33:24.554 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:33:24.554 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:33:24.555 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:33:24.557 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:33:24.560 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:33:24.561 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:33:24.563 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:33:24.566 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:33:24.568 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:33:24.569 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:33:24.571 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:33:24.571 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:33:24.571 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:33:24.571 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:33:24.573 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:33:24.573 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:33:24.574 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:33:24.634 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:33:24.736 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:33:24.752 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:33:24.759 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:33:24.794 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:33:24.830 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc5c0b2]
[DEBUG] 2022-07-03 16:33:25.107 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:33:25.111 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:33:25.112 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:33:25.112 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:33:25.113 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:33:25.114 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:33:25.672 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:33:25.682 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:33:25.684 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:33:27.171 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:33:28.087 [Test worker] GetUserMileage - Started GetUserMileage in 6.68 seconds (JVM running for 9.09)
[INFO ] 2022-07-03 16:33:28.666 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:33:28.674 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:33:28.675 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1df73c93] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:33:28.682 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:33:28.693 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:34:07.269 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:34:07.286 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:34:07.292 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:34:07.467 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:34:07.562 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:34:07.577 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:34:08.170 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91827 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:34:08.186 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:34:09.340 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:34:09.467 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:34:10.483 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:34:10.545 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:34:10.729 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:34:10.753 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:34:10.754 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:34:10.757 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:34:10.760 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:34:10.761 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:34:10.762 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:34:10.763 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:34:10.763 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:34:10.763 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:34:10.764 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:34:10.765 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:34:10.766 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:34:10.767 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:34:10.767 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:34:10.767 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:34:10.768 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:34:10.768 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:34:10.769 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:34:10.772 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:34:10.772 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:34:10.772 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:34:10.773 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:34:10.773 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:34:10.773 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:34:10.774 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:34:10.774 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:34:10.775 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:34:10.777 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:34:10.777 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:34:10.778 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:34:10.779 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:34:10.780 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:34:10.780 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:34:10.781 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:34:10.783 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:34:10.783 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:34:10.783 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:34:10.784 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:34:10.785 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:34:10.786 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:34:10.787 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:34:10.788 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:34:10.788 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:34:10.789 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:34:10.789 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:34:10.790 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:34:10.791 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:34:10.795 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:34:10.795 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:34:10.796 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:34:10.796 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:34:10.797 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:34:10.797 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:34:10.798 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:34:10.799 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:34:10.801 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:34:10.803 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:34:10.804 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:34:10.805 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:34:10.805 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:34:10.807 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:34:10.808 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:34:10.809 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:34:10.811 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:34:10.811 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:34:10.813 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:34:10.815 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:34:10.815 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:34:10.816 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:34:10.819 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:34:10.820 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:34:10.821 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:34:10.822 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:34:10.822 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:34:10.822 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:34:10.825 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:34:10.827 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:34:10.828 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:34:10.829 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:34:10.829 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:34:10.830 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:34:10.830 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:34:10.831 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:34:10.831 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:34:10.832 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:34:10.833 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:34:10.833 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:34:10.834 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:34:10.834 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:34:10.834 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:34:10.834 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:34:10.835 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:34:10.836 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:34:10.838 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:34:10.838 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:34:10.838 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:34:10.839 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:34:10.839 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:34:10.840 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:34:10.842 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:34:10.843 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:34:10.844 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:34:10.845 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:34:10.847 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:34:10.849 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:34:10.850 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:34:10.851 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:34:10.851 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:34:10.852 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:34:10.852 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:34:10.852 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:34:10.852 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:34:10.853 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:34:10.913 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:34:11.006 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:34:11.029 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:34:11.036 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:34:11.074 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:34:11.114 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b90cc1]
[DEBUG] 2022-07-03 16:34:11.402 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:34:11.406 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:34:11.407 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:34:11.407 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:34:11.408 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:34:11.409 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:34:11.977 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:34:11.986 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:34:12.029 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:34:13.498 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:34:14.410 [Test worker] GetUserMileage - Started GetUserMileage in 6.774 seconds (JVM running for 9.342)
[INFO ] 2022-07-03 16:34:14.923 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:34:14.931 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:34:14.932 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@25e27aef] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:34:14.935 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:34:14.951 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:37:38.860 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:37:38.877 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:37:38.884 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:37:39.048 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:37:39.131 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:37:39.144 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:37:39.699 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91889 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:37:39.712 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:37:40.842 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:37:40.976 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:37:41.982 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:37:42.064 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:37:42.256 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:37:42.282 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:37:42.282 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:37:42.286 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:37:42.290 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:37:42.291 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:37:42.292 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:37:42.293 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:37:42.293 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:37:42.293 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:37:42.294 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:37:42.295 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:37:42.296 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:37:42.298 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:37:42.298 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:37:42.298 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:37:42.299 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:37:42.299 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:37:42.300 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:37:42.303 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:37:42.303 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:37:42.303 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:37:42.304 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:37:42.304 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:37:42.305 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:37:42.305 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:37:42.305 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:37:42.306 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:37:42.308 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:37:42.308 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:37:42.309 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:37:42.310 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:37:42.310 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:37:42.311 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:37:42.313 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:37:42.315 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:37:42.316 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:37:42.317 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:37:42.317 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:37:42.318 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:37:42.319 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:37:42.320 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:37:42.321 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:37:42.321 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:37:42.322 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:37:42.323 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:37:42.323 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:37:42.324 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:37:42.327 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:37:42.327 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:37:42.328 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:37:42.328 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:37:42.329 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:37:42.330 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:37:42.331 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:37:42.332 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:37:42.336 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:37:42.337 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:37:42.338 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:37:42.338 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:37:42.338 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:37:42.341 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:37:42.342 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:37:42.344 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:37:42.346 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:37:42.347 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:37:42.348 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:37:42.349 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:37:42.350 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:37:42.350 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:37:42.352 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:37:42.354 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:37:42.355 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:37:42.355 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:37:42.356 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:37:42.356 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:37:42.359 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:37:42.364 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:37:42.367 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:37:42.367 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:37:42.367 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:37:42.369 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:37:42.370 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:37:42.370 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:37:42.371 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:37:42.373 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:37:42.375 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:37:42.375 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:37:42.375 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:37:42.376 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:37:42.376 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:37:42.376 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:37:42.377 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:37:42.378 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:37:42.379 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:37:42.379 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:37:42.380 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:37:42.380 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:37:42.381 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:37:42.382 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:37:42.384 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:37:42.386 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:37:42.387 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:37:42.389 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:37:42.392 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:37:42.393 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:37:42.393 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:37:42.395 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:37:42.395 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:37:42.396 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:37:42.396 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:37:42.397 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:37:42.397 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:37:42.397 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:37:42.448 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:37:42.544 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:37:42.560 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:37:42.567 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:37:42.599 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:37:42.634 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b90cc1]
[DEBUG] 2022-07-03 16:37:42.904 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:37:42.906 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:37:42.907 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:37:42.907 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:37:42.909 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:37:42.910 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:37:43.481 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:37:43.493 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:37:43.495 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:37:45.011 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:37:45.926 [Test worker] GetUserMileage - Started GetUserMileage in 6.727 seconds (JVM running for 9.399)
[INFO ] 2022-07-03 16:37:46.581 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:37:46.591 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:37:46.592 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@26d853e9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:37:46.599 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:37:46.613 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:38:47.789 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:38:47.803 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:38:47.809 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:38:47.969 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:38:48.047 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:38:48.061 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:38:48.583 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91923 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:38:48.598 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:38:49.733 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:38:49.863 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 119 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:38:50.879 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:38:50.939 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:38:51.130 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:38:51.157 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:38:51.157 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:38:51.161 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:38:51.167 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:38:51.168 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:38:51.169 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:38:51.170 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:38:51.170 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:38:51.171 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:38:51.172 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:38:51.173 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:38:51.173 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:38:51.174 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:38:51.174 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:38:51.174 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:38:51.175 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:38:51.175 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:38:51.176 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:38:51.178 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:38:51.179 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:38:51.179 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:38:51.180 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:38:51.180 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:38:51.180 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:38:51.181 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:38:51.181 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:38:51.182 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:38:51.184 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:38:51.184 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:38:51.185 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:38:51.185 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:38:51.186 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:38:51.186 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:38:51.188 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:38:51.190 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:38:51.190 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:38:51.190 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:38:51.191 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:38:51.192 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:38:51.193 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:38:51.194 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:38:51.195 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:38:51.195 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:38:51.196 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:38:51.196 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:38:51.197 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:38:51.197 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:38:51.200 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:38:51.200 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:38:51.201 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:38:51.201 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:38:51.203 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:38:51.203 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:38:51.204 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:38:51.205 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:38:51.209 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:38:51.210 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:38:51.211 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:38:51.211 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:38:51.211 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:38:51.214 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:38:51.215 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:38:51.216 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:38:51.217 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:38:51.217 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:38:51.218 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:38:51.219 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:38:51.219 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:38:51.220 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:38:51.223 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:38:51.224 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:38:51.225 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:38:51.226 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:38:51.226 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:38:51.230 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:38:51.230 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:38:51.231 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:38:51.233 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:38:51.233 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:38:51.234 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:38:51.235 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:38:51.235 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:38:51.235 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:38:51.236 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:38:51.238 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:38:51.238 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:38:51.238 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:38:51.238 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:38:51.239 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:38:51.240 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:38:51.240 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:38:51.241 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:38:51.242 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:38:51.243 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:38:51.243 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:38:51.244 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:38:51.244 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:38:51.245 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:38:51.245 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:38:51.247 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:38:51.248 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:38:51.249 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:38:51.251 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:38:51.255 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:38:51.255 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:38:51.256 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:38:51.258 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:38:51.259 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:38:51.260 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:38:51.260 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:38:51.260 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:38:51.260 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:38:51.260 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:38:51.318 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:38:51.416 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:38:51.432 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:38:51.439 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:38:51.471 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:38:51.508 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b90cc1]
[DEBUG] 2022-07-03 16:38:51.786 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:38:51.790 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:38:51.790 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:38:51.791 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:38:51.792 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:38:51.792 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:38:52.351 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:38:52.361 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:38:52.387 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:38:53.778 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:38:54.686 [Test worker] GetUserMileage - Started GetUserMileage in 6.57 seconds (JVM running for 9.004)
[INFO ] 2022-07-03 16:38:55.239 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:38:55.247 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:38:55.248 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@1559522f] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:38:55.254 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:38:55.267 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:41:19.534 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:41:19.550 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:41:19.556 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:41:19.689 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:41:19.773 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:41:19.787 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:41:20.349 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91968 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:41:20.370 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:41:21.556 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:41:21.691 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:41:22.756 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:41:22.844 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:41:23.044 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:41:23.069 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:23.070 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:23.073 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:23.076 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:41:23.080 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:41:23.082 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:41:23.083 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:23.084 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:23.084 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:23.084 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:23.086 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:23.086 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:23.087 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:23.088 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:23.088 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:23.089 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:23.089 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:23.089 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:23.092 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:23.092 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:23.092 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:23.093 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:23.093 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:23.093 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:23.094 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:23.094 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:23.095 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:23.096 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:41:23.096 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:41:23.097 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:41:23.098 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:41:23.099 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:41:23.099 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:41:23.101 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:41:23.103 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:41:23.103 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:41:23.104 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:41:23.104 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:41:23.105 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:41:23.106 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:41:23.107 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:41:23.108 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:41:23.109 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:41:23.109 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:41:23.109 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:41:23.110 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:41:23.111 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:41:23.113 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:41:23.113 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:41:23.114 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:41:23.115 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:41:23.116 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:41:23.116 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:41:23.117 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:41:23.118 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:41:23.120 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:41:23.123 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:41:23.124 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:23.124 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:23.124 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:23.127 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:41:23.128 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:23.129 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:23.130 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:23.131 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:41:23.133 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:41:23.134 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:41:23.135 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:41:23.135 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:41:23.138 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:41:23.140 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:41:23.141 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:41:23.141 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:41:23.141 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:41:23.142 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:41:23.145 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:41:23.147 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:41:23.150 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:23.150 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:23.150 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:23.151 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:23.151 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:23.152 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:23.153 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:41:23.154 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:41:23.155 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:23.155 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:23.155 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:23.156 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:23.156 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:23.156 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:23.157 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:41:23.158 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:41:23.159 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:41:23.159 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:41:23.160 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:41:23.161 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:41:23.161 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:41:23.161 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:41:23.163 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:41:23.164 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:41:23.164 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:41:23.165 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:41:23.169 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:41:23.169 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:41:23.170 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:41:23.171 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:41:23.171 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:41:23.172 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:41:23.173 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:41:23.173 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:41:23.173 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:41:23.173 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:41:23.234 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:41:23.331 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:41:23.347 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:41:23.356 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:41:23.393 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:41:23.438 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2b90cc1]
[DEBUG] 2022-07-03 16:41:23.723 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:41:23.725 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:41:23.726 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:41:23.726 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:41:23.727 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:41:23.728 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@45ad3cd8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:41:24.312 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:41:24.379 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:41:24.394 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:41:25.865 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:41:26.842 [Test worker] GetUserMileage - Started GetUserMileage in 6.983 seconds (JVM running for 9.521)
[INFO ] 2022-07-03 16:41:27.468 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:41:27.478 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:41:27.479 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2e12e2f1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:41:27.483 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:41:27.514 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:41:49.896 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:41:49.910 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:41:49.916 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:41:50.073 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:41:50.157 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:41:50.170 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:41:50.715 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 91995 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:41:50.730 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:41:51.846 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:41:51.979 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:41:52.997 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:41:53.061 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:41:53.243 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:41:53.267 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:53.268 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:53.272 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:41:53.275 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:41:53.276 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:41:53.277 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:41:53.278 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:53.278 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:53.278 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:41:53.281 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:53.282 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:53.283 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:41:53.285 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:53.285 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:53.285 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:41:53.286 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:53.286 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:53.286 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:41:53.289 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:53.289 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:53.290 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:41:53.290 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:53.291 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:53.291 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:41:53.292 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:53.292 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:53.293 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:41:53.294 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:41:53.294 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:41:53.295 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:41:53.296 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:41:53.296 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:41:53.297 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:41:53.298 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:41:53.299 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:41:53.300 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:41:53.300 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:41:53.300 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:41:53.301 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:41:53.303 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:41:53.305 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:41:53.307 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:41:53.307 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:41:53.308 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:41:53.308 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:41:53.309 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:41:53.310 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:41:53.312 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:41:53.313 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:41:53.313 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:41:53.314 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:41:53.315 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:41:53.315 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:41:53.316 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:41:53.317 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:41:53.321 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:41:53.323 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:41:53.323 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:53.323 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:53.324 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:41:53.326 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:41:53.327 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:53.328 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:53.331 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:41:53.332 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:41:53.333 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:41:53.334 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:41:53.335 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:41:53.335 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:41:53.338 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:41:53.340 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:41:53.340 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:41:53.343 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:41:53.350 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:41:53.351 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:41:53.351 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:41:53.354 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:41:53.356 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:53.356 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:53.356 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:41:53.357 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:53.357 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:53.357 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:41:53.358 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:41:53.360 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:41:53.361 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:53.361 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:53.361 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:41:53.363 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:53.363 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:53.363 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:41:53.365 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:41:53.366 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:41:53.368 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:41:53.368 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:41:53.369 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:41:53.370 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:41:53.370 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:41:53.371 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:41:53.373 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:41:53.375 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:41:53.375 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:41:53.376 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:41:53.381 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:41:53.382 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:41:53.382 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:41:53.383 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:41:53.385 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:41:53.385 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:41:53.385 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:41:53.385 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:41:53.385 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:41:53.386 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:41:53.434 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:41:53.526 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:41:53.544 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:41:53.552 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:41:53.585 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:41:53.634 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc5c0b2]
[DEBUG] 2022-07-03 16:41:53.898 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:41:53.900 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:41:53.901 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:41:53.901 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:41:53.902 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:41:53.902 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:41:54.450 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:41:54.520 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:41:54.534 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:41:55.895 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:41:56.735 [Test worker] GetUserMileage - Started GetUserMileage in 6.513 seconds (JVM running for 8.927)
[INFO ] 2022-07-03 16:41:57.236 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:41:57.247 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:41:57.248 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2be69c1] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:41:57.253 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:41:57.263 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:42:25.098 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:42:25.114 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:42:25.121 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:42:25.309 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:42:25.396 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:42:25.408 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7158daf2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10f19647, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@102efc59, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3936df72, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@e8e0dec, org.springframework.test.context.support.DirtiesContextTestExecutionListener@12d1f1d4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@75fa1be3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a389761, org.springframework.test.context.event.EventPublishingTestExecutionListener@42714a7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@19650aa6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ce53f6a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2d82408, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ee69ad8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@f679798, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1a6cf771]
[INFO ] 2022-07-03 16:42:26.027 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92014 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:42:26.041 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:42:27.190 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:42:27.329 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:42:28.307 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:42:28.358 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:42:28.540 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:42:28.564 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:42:28.565 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:42:28.568 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:42:28.573 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a82bc58
[DEBUG] 2022-07-03 16:42:28.576 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52657d5f
[DEBUG] 2022-07-03 16:42:28.577 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@15f519f7
[DEBUG] 2022-07-03 16:42:28.578 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:42:28.578 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:42:28.579 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:42:28.580 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:42:28.581 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:42:28.581 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:42:28.583 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:42:28.583 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:42:28.583 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:42:28.584 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:42:28.584 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:42:28.585 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:42:28.587 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:42:28.588 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:42:28.588 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:42:28.588 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:42:28.589 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:42:28.589 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:42:28.590 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:42:28.590 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:42:28.591 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:42:28.592 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ff5d4f1
[DEBUG] 2022-07-03 16:42:28.592 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ff5d4f1
[DEBUG] 2022-07-03 16:42:28.594 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b0d3e7
[DEBUG] 2022-07-03 16:42:28.594 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b0d3e7
[DEBUG] 2022-07-03 16:42:28.595 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5c4714ef
[DEBUG] 2022-07-03 16:42:28.595 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5c4714ef
[DEBUG] 2022-07-03 16:42:28.597 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@318e3942
[DEBUG] 2022-07-03 16:42:28.599 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c18ee69
[DEBUG] 2022-07-03 16:42:28.599 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@72a3462f
[DEBUG] 2022-07-03 16:42:28.600 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72a3462f
[DEBUG] 2022-07-03 16:42:28.600 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7440265c
[DEBUG] 2022-07-03 16:42:28.601 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7440265c
[DEBUG] 2022-07-03 16:42:28.602 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5b7ee56c
[DEBUG] 2022-07-03 16:42:28.603 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5b7ee56c
[DEBUG] 2022-07-03 16:42:28.606 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@749d7c01
[DEBUG] 2022-07-03 16:42:28.607 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@749d7c01
[DEBUG] 2022-07-03 16:42:28.607 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7e1d8d41
[DEBUG] 2022-07-03 16:42:28.608 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7e1d8d41
[DEBUG] 2022-07-03 16:42:28.608 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61c87f1b
[DEBUG] 2022-07-03 16:42:28.609 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61c87f1b
[DEBUG] 2022-07-03 16:42:28.613 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2109fe
[DEBUG] 2022-07-03 16:42:28.613 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2109fe
[DEBUG] 2022-07-03 16:42:28.614 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@362a6aa5
[DEBUG] 2022-07-03 16:42:28.614 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@362a6aa5
[DEBUG] 2022-07-03 16:42:28.615 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4aac81ca
[DEBUG] 2022-07-03 16:42:28.615 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4aac81ca
[DEBUG] 2022-07-03 16:42:28.616 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@21f91efa
[DEBUG] 2022-07-03 16:42:28.617 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21f91efa
[DEBUG] 2022-07-03 16:42:28.622 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1a5b7394
[DEBUG] 2022-07-03 16:42:28.623 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a5b7394
[DEBUG] 2022-07-03 16:42:28.624 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:42:28.624 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:42:28.624 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:42:28.627 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a6556b6
[DEBUG] 2022-07-03 16:42:28.628 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:42:28.629 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:42:28.630 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:42:28.631 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@38dbeb39
[DEBUG] 2022-07-03 16:42:28.632 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@59371066
[DEBUG] 2022-07-03 16:42:28.634 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@43a59289
[DEBUG] 2022-07-03 16:42:28.634 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@43a59289
[DEBUG] 2022-07-03 16:42:28.635 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51a719e7
[DEBUG] 2022-07-03 16:42:28.638 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a719e7
[DEBUG] 2022-07-03 16:42:28.639 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@789dd6bf
[DEBUG] 2022-07-03 16:42:28.640 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@789dd6bf
[DEBUG] 2022-07-03 16:42:28.641 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18483b8b
[DEBUG] 2022-07-03 16:42:28.641 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18483b8b
[DEBUG] 2022-07-03 16:42:28.641 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@603d25db
[DEBUG] 2022-07-03 16:42:28.645 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@603d25db
[DEBUG] 2022-07-03 16:42:28.646 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6cc8da1c
[DEBUG] 2022-07-03 16:42:28.648 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:42:28.648 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:42:28.648 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:42:28.649 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:42:28.649 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:42:28.649 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:42:28.650 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@177ddd24
[DEBUG] 2022-07-03 16:42:28.652 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2da5fdc
[DEBUG] 2022-07-03 16:42:28.653 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:42:28.653 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:42:28.653 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:42:28.654 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:42:28.654 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:42:28.654 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:42:28.656 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@460f1cdb
[DEBUG] 2022-07-03 16:42:28.657 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3c9f4376
[DEBUG] 2022-07-03 16:42:28.658 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@c67395
[DEBUG] 2022-07-03 16:42:28.658 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c67395
[DEBUG] 2022-07-03 16:42:28.658 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43ab9ae9
[DEBUG] 2022-07-03 16:42:28.659 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e39f08c
[DEBUG] 2022-07-03 16:42:28.659 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e39f08c
[DEBUG] 2022-07-03 16:42:28.660 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6d3ad37a
[DEBUG] 2022-07-03 16:42:28.662 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d3ad37a
[DEBUG] 2022-07-03 16:42:28.664 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@55c03e4
[DEBUG] 2022-07-03 16:42:28.665 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1fa9692b
[DEBUG] 2022-07-03 16:42:28.666 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5a90fcaa
[DEBUG] 2022-07-03 16:42:28.670 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3cbfdf5c
[DEBUG] 2022-07-03 16:42:28.670 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3cbfdf5c
[DEBUG] 2022-07-03 16:42:28.671 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:42:28.672 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:42:28.672 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:42:28.673 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:42:28.673 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:42:28.674 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58636b50
[DEBUG] 2022-07-03 16:42:28.674 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f4f1536
[DEBUG] 2022-07-03 16:42:28.674 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ad1b737
[INFO ] 2022-07-03 16:42:28.724 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:42:28.829 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:42:28.851 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:42:28.859 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:42:28.895 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7f70e244 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:42:28.933 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a2f401a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6bdedbbd]
[DEBUG] 2022-07-03 16:42:29.198 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:42:29.200 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:42:29.201 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:42:29.201 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:42:29.202 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:42:29.203 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a2f401a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@71f8ce0e]
[INFO ] 2022-07-03 16:42:29.777 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:42:29.788 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71f8ce0e] for TypeConfiguration
[INFO ] 2022-07-03 16:42:29.814 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:42:31.236 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:42:32.203 [Test worker] GetUserMileage - Started GetUserMileage in 6.725 seconds (JVM running for 9.368)
[INFO ] 2022-07-03 16:42:32.614 [Test worker] TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@6e2764c9, testMethod = failToUserMileageFailWithNoUser@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@70199db0]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@ab595e8]; rollback [true]
[INFO ] 2022-07-03 16:42:32.691 [Test worker] TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@6e2764c9, testMethod = failToUserMileageFailWithNoUser@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@70199db0]]
[INFO ] 2022-07-03 16:42:32.716 [Test worker] TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@31773d5b, testMethod = getUserMileage@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@5bbf8daa, 'org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@ab595e8]; rollback [true]
[INFO ] 2022-07-03 16:42:32.737 [Test worker] TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@31773d5b, testMethod = getUserMileage@GetUserMileage, testException = com.triple.travelerclubmileage.model.user.exception.UserException$UserNotExistException: 해당 유저가 존재하지 않습니다., mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@5bbf8daa, 'org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
[INFO ] 2022-07-03 16:42:32.861 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:42:32.875 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@71f8ce0e] for TypeConfiguration
[DEBUG] 2022-07-03 16:42:32.876 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@137063b9] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@71f8ce0e]
[INFO ] 2022-07-03 16:42:32.885 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:42:32.896 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:43:13.445 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:43:13.462 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:43:13.468 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:43:13.642 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:43:13.726 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:43:13.739 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7158daf2, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@10f19647, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@102efc59, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3936df72, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@e8e0dec, org.springframework.test.context.support.DirtiesContextTestExecutionListener@12d1f1d4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@75fa1be3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a389761, org.springframework.test.context.event.EventPublishingTestExecutionListener@42714a7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@19650aa6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3ce53f6a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2d82408, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3ee69ad8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@f679798, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1a6cf771]
[INFO ] 2022-07-03 16:43:14.271 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92035 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:43:14.283 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:43:15.368 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:43:15.502 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:43:16.531 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:43:16.588 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:43:16.769 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:43:16.793 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:43:16.793 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:43:16.799 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@280ecc33
[DEBUG] 2022-07-03 16:43:16.804 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a82bc58
[DEBUG] 2022-07-03 16:43:16.805 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@52657d5f
[DEBUG] 2022-07-03 16:43:16.806 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@15f519f7
[DEBUG] 2022-07-03 16:43:16.807 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:43:16.807 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:43:16.808 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6181bc4a
[DEBUG] 2022-07-03 16:43:16.808 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:43:16.809 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:43:16.809 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@c4cceb
[DEBUG] 2022-07-03 16:43:16.811 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:43:16.811 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:43:16.811 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@50b4364
[DEBUG] 2022-07-03 16:43:16.812 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:43:16.812 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:43:16.812 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@401926df
[DEBUG] 2022-07-03 16:43:16.815 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:43:16.815 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:43:16.816 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@31b6b0c7
[DEBUG] 2022-07-03 16:43:16.816 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:43:16.816 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:43:16.817 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@77ba583
[DEBUG] 2022-07-03 16:43:16.817 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:43:16.817 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:43:16.818 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@586737ff
[DEBUG] 2022-07-03 16:43:16.820 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@ff5d4f1
[DEBUG] 2022-07-03 16:43:16.820 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@ff5d4f1
[DEBUG] 2022-07-03 16:43:16.821 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@b0d3e7
[DEBUG] 2022-07-03 16:43:16.821 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@b0d3e7
[DEBUG] 2022-07-03 16:43:16.822 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5c4714ef
[DEBUG] 2022-07-03 16:43:16.822 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5c4714ef
[DEBUG] 2022-07-03 16:43:16.824 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@318e3942
[DEBUG] 2022-07-03 16:43:16.825 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c18ee69
[DEBUG] 2022-07-03 16:43:16.825 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@72a3462f
[DEBUG] 2022-07-03 16:43:16.826 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@72a3462f
[DEBUG] 2022-07-03 16:43:16.826 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@7440265c
[DEBUG] 2022-07-03 16:43:16.827 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7440265c
[DEBUG] 2022-07-03 16:43:16.828 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@5b7ee56c
[DEBUG] 2022-07-03 16:43:16.829 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@5b7ee56c
[DEBUG] 2022-07-03 16:43:16.831 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@749d7c01
[DEBUG] 2022-07-03 16:43:16.831 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@749d7c01
[DEBUG] 2022-07-03 16:43:16.831 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@7e1d8d41
[DEBUG] 2022-07-03 16:43:16.832 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@7e1d8d41
[DEBUG] 2022-07-03 16:43:16.833 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@61c87f1b
[DEBUG] 2022-07-03 16:43:16.834 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@61c87f1b
[DEBUG] 2022-07-03 16:43:16.836 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2109fe
[DEBUG] 2022-07-03 16:43:16.836 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4e2109fe
[DEBUG] 2022-07-03 16:43:16.837 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@362a6aa5
[DEBUG] 2022-07-03 16:43:16.837 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@362a6aa5
[DEBUG] 2022-07-03 16:43:16.839 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4aac81ca
[DEBUG] 2022-07-03 16:43:16.839 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4aac81ca
[DEBUG] 2022-07-03 16:43:16.840 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@21f91efa
[DEBUG] 2022-07-03 16:43:16.841 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@21f91efa
[DEBUG] 2022-07-03 16:43:16.843 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1a5b7394
[DEBUG] 2022-07-03 16:43:16.846 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1a5b7394
[DEBUG] 2022-07-03 16:43:16.847 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:43:16.847 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:43:16.847 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@f76872f
[DEBUG] 2022-07-03 16:43:16.850 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3a6556b6
[DEBUG] 2022-07-03 16:43:16.851 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:43:16.852 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:43:16.853 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@250a946
[DEBUG] 2022-07-03 16:43:16.854 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@38dbeb39
[DEBUG] 2022-07-03 16:43:16.854 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@59371066
[DEBUG] 2022-07-03 16:43:16.855 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@43a59289
[DEBUG] 2022-07-03 16:43:16.856 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@43a59289
[DEBUG] 2022-07-03 16:43:16.857 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@51a719e7
[DEBUG] 2022-07-03 16:43:16.860 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@51a719e7
[DEBUG] 2022-07-03 16:43:16.861 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@789dd6bf
[DEBUG] 2022-07-03 16:43:16.862 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@789dd6bf
[DEBUG] 2022-07-03 16:43:16.863 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@18483b8b
[DEBUG] 2022-07-03 16:43:16.863 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@18483b8b
[DEBUG] 2022-07-03 16:43:16.864 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@603d25db
[DEBUG] 2022-07-03 16:43:16.867 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@603d25db
[DEBUG] 2022-07-03 16:43:16.869 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6cc8da1c
[DEBUG] 2022-07-03 16:43:16.871 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:43:16.871 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:43:16.871 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5501d1c8
[DEBUG] 2022-07-03 16:43:16.872 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:43:16.872 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:43:16.872 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@16df9bde
[DEBUG] 2022-07-03 16:43:16.873 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@177ddd24
[DEBUG] 2022-07-03 16:43:16.874 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2da5fdc
[DEBUG] 2022-07-03 16:43:16.875 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:43:16.875 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:43:16.875 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1242d96b
[DEBUG] 2022-07-03 16:43:16.876 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:43:16.877 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:43:16.877 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7d4d65f5
[DEBUG] 2022-07-03 16:43:16.878 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@460f1cdb
[DEBUG] 2022-07-03 16:43:16.878 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3c9f4376
[DEBUG] 2022-07-03 16:43:16.880 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@c67395
[DEBUG] 2022-07-03 16:43:16.880 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@c67395
[DEBUG] 2022-07-03 16:43:16.880 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@43ab9ae9
[DEBUG] 2022-07-03 16:43:16.881 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3e39f08c
[DEBUG] 2022-07-03 16:43:16.881 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e39f08c
[DEBUG] 2022-07-03 16:43:16.882 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6d3ad37a
[DEBUG] 2022-07-03 16:43:16.884 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d3ad37a
[DEBUG] 2022-07-03 16:43:16.885 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@55c03e4
[DEBUG] 2022-07-03 16:43:16.886 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@1fa9692b
[DEBUG] 2022-07-03 16:43:16.887 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5a90fcaa
[DEBUG] 2022-07-03 16:43:16.894 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3cbfdf5c
[DEBUG] 2022-07-03 16:43:16.895 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3cbfdf5c
[DEBUG] 2022-07-03 16:43:16.895 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:43:16.896 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:43:16.898 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:43:16.898 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:43:16.898 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:43:16.898 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@58636b50
[DEBUG] 2022-07-03 16:43:16.898 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7f4f1536
[DEBUG] 2022-07-03 16:43:16.899 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ad1b737
[INFO ] 2022-07-03 16:43:16.961 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:43:17.054 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:43:17.071 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:43:17.078 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:43:17.108 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@7f70e244 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:43:17.166 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a2f401a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6bdedbbd]
[DEBUG] 2022-07-03 16:43:17.433 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:43:17.438 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:43:17.439 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:43:17.439 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:43:17.440 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:43:17.440 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5a2f401a] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@71f8ce0e]
[INFO ] 2022-07-03 16:43:18.004 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:43:18.014 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@71f8ce0e] for TypeConfiguration
[INFO ] 2022-07-03 16:43:18.038 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:43:19.425 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:43:20.303 [Test worker] GetUserMileage - Started GetUserMileage in 6.512 seconds (JVM running for 8.918)
[INFO ] 2022-07-03 16:43:20.741 [Test worker] TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@6e2764c9, testMethod = failToUserMileageFailWithNoUser@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@70199db0]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@ab595e8]; rollback [true]
[INFO ] 2022-07-03 16:43:20.820 [Test worker] TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@6e2764c9, testMethod = failToUserMileageFailWithNoUser@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@70199db0]]
[INFO ] 2022-07-03 16:43:20.845 [Test worker] TransactionContext - Began transaction (1) for test context [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@31773d5b, testMethod = getUserMileage@GetUserMileage, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@5bbf8daa, 'org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@ab595e8]; rollback [true]
[INFO ] 2022-07-03 16:43:20.868 [Test worker] TransactionContext - Rolled back transaction for test: [DefaultTestContext@5f910283 testClass = GetUserMileage, testInstance = com.triple.travelerclubmileage.model.user.GetUserMileageTest@31773d5b, testMethod = getUserMileage@GetUserMileage, testException = com.triple.travelerclubmileage.model.user.exception.UserException$UserNotExistException: 해당 유저가 존재하지 않습니다., mergedContextConfiguration = [WebMergedContextConfiguration@6e5106fc testClass = GetUserMileage, locations = '{}', classes = '{class com.triple.travelerclubmileage.TravelerClubMileageApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5177e388, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@77cb9cd1, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@38704ff0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4f82663e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e1624c7, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@38af9828], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$1424/0x0000000800972c40@5bbf8daa, 'org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
[INFO ] 2022-07-03 16:43:20.950 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:43:20.957 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@71f8ce0e] for TypeConfiguration
[DEBUG] 2022-07-03 16:43:20.959 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6891bf9e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@71f8ce0e]
[INFO ] 2022-07-03 16:43:20.967 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:43:20.987 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:44:55.761 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:44:55.774 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:44:55.780 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:44:55.939 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:44:56.024 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:44:56.037 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:44:56.550 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92081 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:44:56.577 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:44:57.726 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:44:57.863 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:44:58.859 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:44:58.911 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:44:59.086 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:44:59.113 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:44:59.114 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:44:59.117 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:44:59.122 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:44:59.124 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:44:59.125 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:44:59.126 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:44:59.126 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:44:59.127 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:44:59.128 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:44:59.130 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:44:59.132 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:44:59.133 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:44:59.133 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:44:59.133 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:44:59.134 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:44:59.135 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:44:59.135 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:44:59.138 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:44:59.139 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:44:59.139 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:44:59.140 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:44:59.140 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:44:59.140 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:44:59.141 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:44:59.141 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:44:59.143 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:44:59.145 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:44:59.146 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:44:59.147 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:44:59.147 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:44:59.148 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:44:59.148 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:44:59.150 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:44:59.153 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:44:59.154 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:44:59.154 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:44:59.155 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:44:59.156 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:44:59.157 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:44:59.158 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:44:59.160 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:44:59.161 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:44:59.161 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:44:59.161 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:44:59.162 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:44:59.163 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:44:59.166 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:44:59.167 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:44:59.167 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:44:59.168 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:44:59.169 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:44:59.169 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:44:59.170 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:44:59.171 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:44:59.176 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:44:59.176 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:44:59.178 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:44:59.178 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:44:59.178 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:44:59.181 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:44:59.182 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:44:59.183 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:44:59.185 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:44:59.186 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:44:59.187 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:44:59.189 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:44:59.189 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:44:59.190 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:44:59.193 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:44:59.194 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:44:59.195 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:44:59.198 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:44:59.203 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:44:59.205 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:44:59.205 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:44:59.207 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:44:59.209 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:44:59.209 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:44:59.209 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:44:59.210 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:44:59.210 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:44:59.210 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:44:59.211 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:44:59.213 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:44:59.215 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:44:59.215 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:44:59.215 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:44:59.216 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:44:59.216 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:44:59.216 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:44:59.219 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:44:59.220 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:44:59.228 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:44:59.228 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:44:59.229 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:44:59.230 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:44:59.230 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:44:59.231 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:44:59.234 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:44:59.235 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:44:59.235 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:44:59.237 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:44:59.239 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:44:59.243 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:44:59.245 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:44:59.248 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:44:59.249 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:44:59.250 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:44:59.250 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:44:59.250 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:44:59.250 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:44:59.251 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:44:59.309 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:44:59.417 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:44:59.439 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:44:59.449 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:44:59.484 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:44:59.618 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc5c0b2]
[DEBUG] 2022-07-03 16:44:59.903 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:44:59.911 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:44:59.911 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:44:59.912 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:44:59.912 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:44:59.913 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:45:00.490 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:45:00.558 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:45:00.573 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:45:01.994 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:45:02.790 [Test worker] GetUserMileage - Started GetUserMileage in 6.703 seconds (JVM running for 9.283)
[INFO ] 2022-07-03 16:45:03.358 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:45:03.367 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:45:03.368 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4b3c9793] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:45:03.371 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:45:03.387 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:45:59.923 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:45:59.943 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:45:59.949 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:46:00.110 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:46:00.200 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:46:00.216 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:46:00.763 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92112 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:46:00.776 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:46:01.979 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:46:02.109 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:46:03.128 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:46:03.188 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:46:03.374 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:46:03.401 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:03.402 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:03.406 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:03.409 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:46:03.410 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:46:03.411 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:46:03.412 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:03.412 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:03.412 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:03.413 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:03.415 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:03.416 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:03.419 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:03.419 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:03.420 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:03.421 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:03.421 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:03.421 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:03.425 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:03.425 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:03.426 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:03.426 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:03.426 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:03.427 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:03.427 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:03.427 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:03.428 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:03.430 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:46:03.430 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:46:03.431 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:46:03.431 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:46:03.432 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:46:03.432 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:46:03.433 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:46:03.434 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:46:03.434 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:46:03.434 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:46:03.435 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:46:03.436 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:46:03.437 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:46:03.438 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:46:03.440 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:46:03.441 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:46:03.442 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:46:03.442 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:46:03.442 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:46:03.443 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:46:03.446 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:46:03.446 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:46:03.447 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:46:03.447 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:46:03.448 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:46:03.449 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:46:03.449 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:46:03.450 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:46:03.452 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:46:03.454 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:46:03.455 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:03.456 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:03.456 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:03.459 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:46:03.460 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:03.462 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:03.463 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:03.464 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:46:03.465 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:46:03.467 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:46:03.467 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:46:03.468 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:46:03.470 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:46:03.472 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:46:03.473 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:46:03.474 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:46:03.479 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:46:03.480 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:46:03.480 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:46:03.482 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:46:03.485 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:03.485 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:03.485 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:03.486 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:03.486 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:03.486 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:03.487 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:46:03.488 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:46:03.489 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:03.489 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:03.489 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:03.490 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:03.490 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:03.490 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:03.492 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:46:03.493 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:46:03.495 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:46:03.495 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:46:03.495 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:46:03.496 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:46:03.496 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:46:03.497 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:46:03.498 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:46:03.500 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:46:03.503 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:46:03.504 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:46:03.507 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:46:03.507 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:46:03.507 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:46:03.508 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:46:03.508 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:46:03.510 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:46:03.510 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:46:03.510 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:46:03.510 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:46:03.510 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:46:03.569 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:46:03.657 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:46:03.674 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:46:03.683 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:46:03.721 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:46:03.761 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc5c0b2]
[DEBUG] 2022-07-03 16:46:04.033 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:46:04.036 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:46:04.036 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:46:04.036 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:46:04.037 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:46:04.038 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:46:04.594 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:46:04.605 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:46:04.607 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:46:05.935 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:46:06.940 [Test worker] GetUserMileage - Started GetUserMileage in 6.666 seconds (JVM running for 9.272)
[INFO ] 2022-07-03 16:46:07.603 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:46:07.615 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:46:07.616 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@62479c9b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:46:07.623 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:46:07.639 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:46:39.826 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:46:39.841 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:46:39.846 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:46:40.003 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:46:40.086 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:46:40.100 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6a9b9909, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@55d9b8f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@a518813, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@43d38654, org.springframework.test.context.support.DirtiesContextTestExecutionListener@75361cf6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d303498, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6ba7383d, org.springframework.test.context.event.EventPublishingTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1d75e7af, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fc142ec, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@34b27915, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@29eda4f8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1b9776f5]
[INFO ] 2022-07-03 16:46:40.631 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92141 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:46:40.650 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:46:41.791 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:46:41.926 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:46:42.913 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:46:42.968 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:46:43.150 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:46:43.174 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:43.174 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:43.178 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@46524ebe
[DEBUG] 2022-07-03 16:46:43.180 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5cbe95b1
[DEBUG] 2022-07-03 16:46:43.182 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6210666c
[DEBUG] 2022-07-03 16:46:43.183 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@2211b44f
[DEBUG] 2022-07-03 16:46:43.184 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:43.185 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:43.185 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@604c7e9b
[DEBUG] 2022-07-03 16:46:43.185 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:43.187 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:43.187 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@410382cb
[DEBUG] 2022-07-03 16:46:43.189 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:43.190 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:43.190 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@a0d875d
[DEBUG] 2022-07-03 16:46:43.191 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:43.191 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:43.191 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@9dc782d
[DEBUG] 2022-07-03 16:46:43.195 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:43.195 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:43.195 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@ff21443
[DEBUG] 2022-07-03 16:46:43.196 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:43.196 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:43.196 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6f7a20da
[DEBUG] 2022-07-03 16:46:43.197 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:43.197 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:43.198 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@1c171746
[DEBUG] 2022-07-03 16:46:43.200 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:46:43.200 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2673487b
[DEBUG] 2022-07-03 16:46:43.201 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:46:43.202 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1c90029b
[DEBUG] 2022-07-03 16:46:43.202 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:46:43.203 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@17f8db6
[DEBUG] 2022-07-03 16:46:43.204 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7cdfa824
[DEBUG] 2022-07-03 16:46:43.206 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1ddf42dd
[DEBUG] 2022-07-03 16:46:43.206 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:46:43.207 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@485c84d7
[DEBUG] 2022-07-03 16:46:43.207 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:46:43.208 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@22aefae0
[DEBUG] 2022-07-03 16:46:43.209 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:46:43.210 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@aa0dbca
[DEBUG] 2022-07-03 16:46:43.211 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:46:43.211 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@16a09809
[DEBUG] 2022-07-03 16:46:43.212 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:46:43.212 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@d76099a
[DEBUG] 2022-07-03 16:46:43.213 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:46:43.214 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@214fba74
[DEBUG] 2022-07-03 16:46:43.217 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:46:43.217 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@78bad03b
[DEBUG] 2022-07-03 16:46:43.218 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:46:43.218 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18bb1b88
[DEBUG] 2022-07-03 16:46:43.219 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:46:43.219 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@55d1f065
[DEBUG] 2022-07-03 16:46:43.220 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:46:43.221 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@34e990cc
[DEBUG] 2022-07-03 16:46:43.226 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:46:43.227 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@70543cae
[DEBUG] 2022-07-03 16:46:43.227 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:43.228 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:43.228 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7e4ac598
[DEBUG] 2022-07-03 16:46:43.230 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@580ffea
[DEBUG] 2022-07-03 16:46:43.231 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:43.233 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:43.234 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@13dc6649
[DEBUG] 2022-07-03 16:46:43.235 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3e9fb485
[DEBUG] 2022-07-03 16:46:43.236 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@419f0ea
[DEBUG] 2022-07-03 16:46:43.237 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:46:43.237 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@87aec6a
[DEBUG] 2022-07-03 16:46:43.238 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:46:43.241 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5529522f
[DEBUG] 2022-07-03 16:46:43.242 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:46:43.243 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1b60d324
[DEBUG] 2022-07-03 16:46:43.243 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:46:43.244 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@8f4b803
[DEBUG] 2022-07-03 16:46:43.244 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:46:43.247 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1bbb42b4
[DEBUG] 2022-07-03 16:46:43.248 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@b86cb18
[DEBUG] 2022-07-03 16:46:43.250 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:43.250 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:43.250 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6e7e0259
[DEBUG] 2022-07-03 16:46:43.251 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:43.251 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:43.251 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b32e983
[DEBUG] 2022-07-03 16:46:43.252 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@40a8a26f
[DEBUG] 2022-07-03 16:46:43.254 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2c0dca15
[DEBUG] 2022-07-03 16:46:43.258 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:43.259 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:43.259 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@52856ff9
[DEBUG] 2022-07-03 16:46:43.260 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:43.260 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:43.260 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@76db9048
[DEBUG] 2022-07-03 16:46:43.261 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@11228bee
[DEBUG] 2022-07-03 16:46:43.263 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@349f3ff7
[DEBUG] 2022-07-03 16:46:43.264 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:46:43.265 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@d8e4250
[DEBUG] 2022-07-03 16:46:43.265 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@20a47036
[DEBUG] 2022-07-03 16:46:43.266 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:46:43.266 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6f240187
[DEBUG] 2022-07-03 16:46:43.267 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:46:43.268 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@154864f8
[DEBUG] 2022-07-03 16:46:43.269 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@37986daf
[DEBUG] 2022-07-03 16:46:43.270 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@605eb072
[DEBUG] 2022-07-03 16:46:43.271 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@12670e55
[DEBUG] 2022-07-03 16:46:43.275 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:46:43.276 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e2c4d4b
[DEBUG] 2022-07-03 16:46:43.276 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:46:43.277 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7d7b4e04
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@144e36ae
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24615687
[DEBUG] 2022-07-03 16:46:43.279 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@58636b50
[INFO ] 2022-07-03 16:46:43.332 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:46:43.420 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:46:43.436 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:46:43.443 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:46:43.478 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@12d44a2a marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:46:43.523 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fc5c0b2]
[DEBUG] 2022-07-03 16:46:43.791 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:46:43.795 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:46:43.795 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:46:43.795 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:46:43.796 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:46:43.797 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@f5ae29e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:46:44.373 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:46:44.382 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[INFO ] 2022-07-03 16:46:44.408 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:46:45.888 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:46:46.787 [Test worker] GetUserMileage - Started GetUserMileage in 6.636 seconds (JVM running for 9.015)
[INFO ] 2022-07-03 16:46:47.314 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:46:47.322 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@3e2d65e1] for TypeConfiguration
[DEBUG] 2022-07-03 16:46:47.323 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@75bd039c] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@3e2d65e1]
[INFO ] 2022-07-03 16:46:47.327 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:46:47.336 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:47:47.806 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:47:47.823 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:47:47.828 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:47:47.984 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:47:48.063 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:47:48.077 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@84487f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bfc14b9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@fb6097b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2dfe5525, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a9b9909, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55d9b8f0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a518813, org.springframework.test.context.event.EventPublishingTestExecutionListener@43d38654, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@710d89e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d75e7af]
[INFO ] 2022-07-03 16:47:48.600 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92166 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:47:48.617 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:47:49.724 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:47:49.863 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:47:50.865 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:47:50.928 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:47:51.116 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:47:51.143 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5f6a8efe
[DEBUG] 2022-07-03 16:47:51.143 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@5f6a8efe
[DEBUG] 2022-07-03 16:47:51.147 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5f6a8efe
[DEBUG] 2022-07-03 16:47:51.150 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@70cf7d1e
[DEBUG] 2022-07-03 16:47:51.151 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@41be8db9
[DEBUG] 2022-07-03 16:47:51.152 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@280ecc33
[DEBUG] 2022-07-03 16:47:51.152 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1dca62c2
[DEBUG] 2022-07-03 16:47:51.153 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1dca62c2
[DEBUG] 2022-07-03 16:47:51.153 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1dca62c2
[DEBUG] 2022-07-03 16:47:51.154 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@65af05b2
[DEBUG] 2022-07-03 16:47:51.156 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@65af05b2
[DEBUG] 2022-07-03 16:47:51.156 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@65af05b2
[DEBUG] 2022-07-03 16:47:51.157 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4bf8b77
[DEBUG] 2022-07-03 16:47:51.158 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4bf8b77
[DEBUG] 2022-07-03 16:47:51.158 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4bf8b77
[DEBUG] 2022-07-03 16:47:51.159 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@74bbc273
[DEBUG] 2022-07-03 16:47:51.159 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@74bbc273
[DEBUG] 2022-07-03 16:47:51.160 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@74bbc273
[DEBUG] 2022-07-03 16:47:51.165 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@38054d01
[DEBUG] 2022-07-03 16:47:51.165 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@38054d01
[DEBUG] 2022-07-03 16:47:51.165 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@38054d01
[DEBUG] 2022-07-03 16:47:51.166 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@550fa96f
[DEBUG] 2022-07-03 16:47:51.166 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@550fa96f
[DEBUG] 2022-07-03 16:47:51.166 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@550fa96f
[DEBUG] 2022-07-03 16:47:51.167 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6253e59a
[DEBUG] 2022-07-03 16:47:51.167 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6253e59a
[DEBUG] 2022-07-03 16:47:51.168 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6253e59a
[DEBUG] 2022-07-03 16:47:51.170 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6851b296
[DEBUG] 2022-07-03 16:47:51.170 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6851b296
[DEBUG] 2022-07-03 16:47:51.171 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@685e6a68
[DEBUG] 2022-07-03 16:47:51.171 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@685e6a68
[DEBUG] 2022-07-03 16:47:51.172 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@194224ca
[DEBUG] 2022-07-03 16:47:51.173 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@194224ca
[DEBUG] 2022-07-03 16:47:51.174 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4db728df
[DEBUG] 2022-07-03 16:47:51.176 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1c2096c6
[DEBUG] 2022-07-03 16:47:51.176 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@7cdfa824
[DEBUG] 2022-07-03 16:47:51.176 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cdfa824
[DEBUG] 2022-07-03 16:47:51.177 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2f99d8c
[DEBUG] 2022-07-03 16:47:51.178 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2f99d8c
[DEBUG] 2022-07-03 16:47:51.178 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4ffa7041
[DEBUG] 2022-07-03 16:47:51.179 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4ffa7041
[DEBUG] 2022-07-03 16:47:51.181 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48277712
[DEBUG] 2022-07-03 16:47:51.181 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48277712
[DEBUG] 2022-07-03 16:47:51.182 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3de8f85c
[DEBUG] 2022-07-03 16:47:51.182 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3de8f85c
[DEBUG] 2022-07-03 16:47:51.183 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1d3a03fe
[DEBUG] 2022-07-03 16:47:51.184 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1d3a03fe
[DEBUG] 2022-07-03 16:47:51.185 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:47:51.186 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:47:51.187 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@44976b08
[DEBUG] 2022-07-03 16:47:51.188 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@44976b08
[DEBUG] 2022-07-03 16:47:51.189 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@139089a4
[DEBUG] 2022-07-03 16:47:51.189 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@139089a4
[DEBUG] 2022-07-03 16:47:51.190 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@55d1f065
[DEBUG] 2022-07-03 16:47:51.190 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@55d1f065
[DEBUG] 2022-07-03 16:47:51.193 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@1533338c
[DEBUG] 2022-07-03 16:47:51.196 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1533338c
[DEBUG] 2022-07-03 16:47:51.198 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@269c7104
[DEBUG] 2022-07-03 16:47:51.198 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@269c7104
[DEBUG] 2022-07-03 16:47:51.198 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@269c7104
[DEBUG] 2022-07-03 16:47:51.201 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@350567f1
[DEBUG] 2022-07-03 16:47:51.202 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@cf10c92
[DEBUG] 2022-07-03 16:47:51.203 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@cf10c92
[DEBUG] 2022-07-03 16:47:51.205 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@cf10c92
[DEBUG] 2022-07-03 16:47:51.206 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63bca84d
[DEBUG] 2022-07-03 16:47:51.207 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@250a946
[DEBUG] 2022-07-03 16:47:51.209 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@10f20d38
[DEBUG] 2022-07-03 16:47:51.209 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@10f20d38
[DEBUG] 2022-07-03 16:47:51.210 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@48106381
[DEBUG] 2022-07-03 16:47:51.214 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@48106381
[DEBUG] 2022-07-03 16:47:51.215 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@336e3be2
[DEBUG] 2022-07-03 16:47:51.216 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@336e3be2
[DEBUG] 2022-07-03 16:47:51.216 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1073c664
[DEBUG] 2022-07-03 16:47:51.217 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1073c664
[DEBUG] 2022-07-03 16:47:51.217 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1e6d30c0
[DEBUG] 2022-07-03 16:47:51.221 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1e6d30c0
[DEBUG] 2022-07-03 16:47:51.222 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42f9873e
[DEBUG] 2022-07-03 16:47:51.225 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@603d25db
[DEBUG] 2022-07-03 16:47:51.225 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@603d25db
[DEBUG] 2022-07-03 16:47:51.225 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@603d25db
[DEBUG] 2022-07-03 16:47:51.225 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4404a6b
[DEBUG] 2022-07-03 16:47:51.226 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4404a6b
[DEBUG] 2022-07-03 16:47:51.226 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4404a6b
[DEBUG] 2022-07-03 16:47:51.227 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@652b3733
[DEBUG] 2022-07-03 16:47:51.228 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@3c346c45
[DEBUG] 2022-07-03 16:47:51.228 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@269308cc
[DEBUG] 2022-07-03 16:47:51.229 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@269308cc
[DEBUG] 2022-07-03 16:47:51.229 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@269308cc
[DEBUG] 2022-07-03 16:47:51.229 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@23321be7
[DEBUG] 2022-07-03 16:47:51.229 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@23321be7
[DEBUG] 2022-07-03 16:47:51.230 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@23321be7
[DEBUG] 2022-07-03 16:47:51.230 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5aa7cfdf
[DEBUG] 2022-07-03 16:47:51.231 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@33f349ae
[DEBUG] 2022-07-03 16:47:51.232 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@31e7afde
[DEBUG] 2022-07-03 16:47:51.232 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@31e7afde
[DEBUG] 2022-07-03 16:47:51.233 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@308a9264
[DEBUG] 2022-07-03 16:47:51.234 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5fc7255c
[DEBUG] 2022-07-03 16:47:51.234 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5fc7255c
[DEBUG] 2022-07-03 16:47:51.235 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@61993d18
[DEBUG] 2022-07-03 16:47:51.237 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@61993d18
[DEBUG] 2022-07-03 16:47:51.238 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@598778cc
[DEBUG] 2022-07-03 16:47:51.239 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@57f2e67
[DEBUG] 2022-07-03 16:47:51.240 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@14df5253
[DEBUG] 2022-07-03 16:47:51.243 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7221539
[DEBUG] 2022-07-03 16:47:51.244 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7221539
[DEBUG] 2022-07-03 16:47:51.244 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@356341c9
[DEBUG] 2022-07-03 16:47:51.245 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5d96d434
[DEBUG] 2022-07-03 16:47:51.245 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7283877
[DEBUG] 2022-07-03 16:47:51.246 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@286a4c52
[DEBUG] 2022-07-03 16:47:51.247 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@13dd7887
[DEBUG] 2022-07-03 16:47:51.247 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@780129bc
[DEBUG] 2022-07-03 16:47:51.247 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[DEBUG] 2022-07-03 16:47:51.247 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44de8e00
[INFO ] 2022-07-03 16:47:51.304 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:47:51.409 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:47:51.427 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:47:51.434 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:47:51.468 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@4e52d2f2 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:47:51.521 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62360a68] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1450ffa3]
[DEBUG] 2022-07-03 16:47:51.789 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:47:51.791 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:47:51.792 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:47:51.792 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:47:51.793 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:47:51.793 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62360a68] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@e18d2a2]
[INFO ] 2022-07-03 16:47:52.353 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:47:52.417 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@e18d2a2] for TypeConfiguration
[INFO ] 2022-07-03 16:47:52.431 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:47:53.823 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:47:54.705 [Test worker] GetUserMileage - Started GetUserMileage in 6.572 seconds (JVM running for 9.066)
[INFO ] 2022-07-03 16:47:55.187 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:47:55.194 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@e18d2a2] for TypeConfiguration
[DEBUG] 2022-07-03 16:47:55.195 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@f06a339] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@e18d2a2]
[INFO ] 2022-07-03 16:47:55.198 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:47:55.209 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:50:46.074 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:50:46.087 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:50:46.094 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:50:46.233 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:50:46.319 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:50:46.370 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@bfc14b9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@fb6097b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2dfe5525, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1290c49, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6a9b9909, org.springframework.test.context.support.DirtiesContextTestExecutionListener@55d9b8f0, org.springframework.test.context.transaction.TransactionalTestExecutionListener@a518813, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@43d38654, org.springframework.test.context.event.EventPublishingTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@710d89e2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1d75e7af, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4fc142ec]
[INFO ] 2022-07-03 16:50:46.891 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92214 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:50:46.908 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:50:48.090 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:50:48.223 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:50:49.327 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:50:49.380 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:50:49.552 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:50:49.585 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:50:49.586 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:50:49.590 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@645ba24a
[DEBUG] 2022-07-03 16:50:49.594 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@58fbcb71
[DEBUG] 2022-07-03 16:50:49.597 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@4a122e68
[DEBUG] 2022-07-03 16:50:49.598 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@1de85972
[DEBUG] 2022-07-03 16:50:49.599 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:50:49.600 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:50:49.600 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6210666c
[DEBUG] 2022-07-03 16:50:49.601 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:50:49.604 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:50:49.606 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a336377
[DEBUG] 2022-07-03 16:50:49.607 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:50:49.607 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:50:49.608 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@70485aa
[DEBUG] 2022-07-03 16:50:49.608 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:50:49.609 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:50:49.610 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@29f3185c
[DEBUG] 2022-07-03 16:50:49.614 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:50:49.614 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:50:49.614 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e541ef9
[DEBUG] 2022-07-03 16:50:49.615 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:50:49.615 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:50:49.615 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@3ff8a3ad
[DEBUG] 2022-07-03 16:50:49.616 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:50:49.616 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:50:49.618 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@31b6b0c7
[DEBUG] 2022-07-03 16:50:49.619 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@5613247e
[DEBUG] 2022-07-03 16:50:49.620 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@5613247e
[DEBUG] 2022-07-03 16:50:49.620 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@4cd7e993
[DEBUG] 2022-07-03 16:50:49.621 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@4cd7e993
[DEBUG] 2022-07-03 16:50:49.622 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@ff5d4f1
[DEBUG] 2022-07-03 16:50:49.622 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@ff5d4f1
[DEBUG] 2022-07-03 16:50:49.624 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1c90029b
[DEBUG] 2022-07-03 16:50:49.625 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@68a5aadd
[DEBUG] 2022-07-03 16:50:49.625 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@71fb8301
[DEBUG] 2022-07-03 16:50:49.626 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@71fb8301
[DEBUG] 2022-07-03 16:50:49.626 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1c18ee69
[DEBUG] 2022-07-03 16:50:49.627 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1c18ee69
[DEBUG] 2022-07-03 16:50:49.628 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@72a3462f
[DEBUG] 2022-07-03 16:50:49.629 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@72a3462f
[DEBUG] 2022-07-03 16:50:49.634 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d8be7b9
[DEBUG] 2022-07-03 16:50:49.634 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1d8be7b9
[DEBUG] 2022-07-03 16:50:49.635 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@311a0b3e
[DEBUG] 2022-07-03 16:50:49.635 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@311a0b3e
[DEBUG] 2022-07-03 16:50:49.636 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@749d7c01
[DEBUG] 2022-07-03 16:50:49.637 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@749d7c01
[DEBUG] 2022-07-03 16:50:49.639 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:50:49.640 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4809c771
[DEBUG] 2022-07-03 16:50:49.641 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1857fe6c
[DEBUG] 2022-07-03 16:50:49.641 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1857fe6c
[DEBUG] 2022-07-03 16:50:49.642 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53b7bf01
[DEBUG] 2022-07-03 16:50:49.642 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53b7bf01
[DEBUG] 2022-07-03 16:50:49.643 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@52f43225
[DEBUG] 2022-07-03 16:50:49.644 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@52f43225
[DEBUG] 2022-07-03 16:50:49.648 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@e72fb04
[DEBUG] 2022-07-03 16:50:49.649 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@e72fb04
[DEBUG] 2022-07-03 16:50:49.650 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:50:49.650 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:50:49.650 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4f7bb8df
[DEBUG] 2022-07-03 16:50:49.654 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@70543cae
[DEBUG] 2022-07-03 16:50:49.656 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:50:49.657 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:50:49.661 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@7e4ac598
[DEBUG] 2022-07-03 16:50:49.662 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3a6556b6
[DEBUG] 2022-07-03 16:50:49.664 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1851c7d2
[DEBUG] 2022-07-03 16:50:49.665 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@38dbeb39
[DEBUG] 2022-07-03 16:50:49.666 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38dbeb39
[DEBUG] 2022-07-03 16:50:49.666 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@59371066
[DEBUG] 2022-07-03 16:50:49.669 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@59371066
[DEBUG] 2022-07-03 16:50:49.670 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6c2883b1
[DEBUG] 2022-07-03 16:50:49.671 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6c2883b1
[DEBUG] 2022-07-03 16:50:49.672 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@fd4459b
[DEBUG] 2022-07-03 16:50:49.672 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@fd4459b
[DEBUG] 2022-07-03 16:50:49.674 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@789dd6bf
[DEBUG] 2022-07-03 16:50:49.678 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@789dd6bf
[DEBUG] 2022-07-03 16:50:49.682 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@8f4b803
[DEBUG] 2022-07-03 16:50:49.684 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:50:49.684 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:50:49.685 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@3f9f8d23
[DEBUG] 2022-07-03 16:50:49.686 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:50:49.686 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:50:49.686 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@39a3984c
[DEBUG] 2022-07-03 16:50:49.688 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5501d1c8
[DEBUG] 2022-07-03 16:50:49.690 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@b32e983
[DEBUG] 2022-07-03 16:50:49.691 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:50:49.692 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:50:49.692 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@40a8a26f
[DEBUG] 2022-07-03 16:50:49.692 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:50:49.692 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:50:49.693 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2da5fdc
[DEBUG] 2022-07-03 16:50:49.694 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@52856ff9
[DEBUG] 2022-07-03 16:50:49.695 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@574ebdaf
[DEBUG] 2022-07-03 16:50:49.697 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@460f1cdb
[DEBUG] 2022-07-03 16:50:49.697 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@460f1cdb
[DEBUG] 2022-07-03 16:50:49.697 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3c9f4376
[DEBUG] 2022-07-03 16:50:49.698 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@c67395
[DEBUG] 2022-07-03 16:50:49.698 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@c67395
[DEBUG] 2022-07-03 16:50:49.699 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@6df2a206
[DEBUG] 2022-07-03 16:50:49.701 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6df2a206
[DEBUG] 2022-07-03 16:50:49.702 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@16e07bae
[DEBUG] 2022-07-03 16:50:49.703 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@67dc6b48
[DEBUG] 2022-07-03 16:50:49.704 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@55c03e4
[DEBUG] 2022-07-03 16:50:49.709 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@10166230
[DEBUG] 2022-07-03 16:50:49.709 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@10166230
[DEBUG] 2022-07-03 16:50:49.710 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@22ff1372
[DEBUG] 2022-07-03 16:50:49.711 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3a70575
[DEBUG] 2022-07-03 16:50:49.711 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d96d434
[DEBUG] 2022-07-03 16:50:49.711 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7283877
[DEBUG] 2022-07-03 16:50:49.713 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@286a4c52
[DEBUG] 2022-07-03 16:50:49.713 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13dd7887
[DEBUG] 2022-07-03 16:50:49.713 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@780129bc
[DEBUG] 2022-07-03 16:50:49.713 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[INFO ] 2022-07-03 16:50:49.775 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:50:49.867 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:50:49.886 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:50:49.892 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:50:49.931 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@78504ce9 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:50:49.990 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e4a19e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@62360a68]
[DEBUG] 2022-07-03 16:50:50.290 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:50:50.293 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:50:50.293 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:50:50.294 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:50:50.295 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:50:50.295 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53e4a19e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@44392e64]
[INFO ] 2022-07-03 16:50:51.028 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:50:51.046 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@44392e64] for TypeConfiguration
[INFO ] 2022-07-03 16:50:51.050 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:50:52.470 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:50:53.435 [Test worker] GetUserMileage - Started GetUserMileage in 6.994 seconds (JVM running for 9.575)
[WARN ] 2022-07-03 16:51:36.234 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=46s261ms).
[WARN ] 2022-07-03 16:52:25.754 [HikariPool-1 housekeeper] HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=49s523ms).
[INFO ] 2022-07-03 16:52:59.010 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:52:59.011 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@44392e64] for TypeConfiguration
[DEBUG] 2022-07-03 16:52:59.014 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@40fe08f5] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@44392e64]
[INFO ] 2022-07-03 16:52:59.022 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:52:59.034 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-03 16:54:31.431 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-03 16:54:31.449 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-03 16:54:31.450 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-03 16:54:31.595 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-03 16:54:31.680 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-03 16:54:31.705 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@84487f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bfc14b9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@fb6097b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2dfe5525, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a9b9909, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55d9b8f0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a518813, org.springframework.test.context.event.EventPublishingTestExecutionListener@43d38654, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@710d89e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d75e7af]
[INFO ] 2022-07-03 16:54:32.251 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 92277 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-03 16:54:32.264 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-03 16:54:33.417 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-03 16:54:33.551 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 125 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-03 16:54:34.530 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-03 16:54:34.588 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-03 16:54:34.777 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-03 16:54:34.832 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-03 16:54:34.833 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-03 16:54:34.837 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-03 16:54:34.839 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1de85972
[DEBUG] 2022-07-03 16:54:34.840 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5cbe95b1
[DEBUG] 2022-07-03 16:54:34.841 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6210666c
[DEBUG] 2022-07-03 16:54:34.842 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-03 16:54:34.842 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-03 16:54:34.843 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-03 16:54:34.843 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-03 16:54:34.844 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-03 16:54:34.845 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-03 16:54:34.846 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-03 16:54:34.846 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-03 16:54:34.846 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-03 16:54:34.847 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-03 16:54:34.847 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-03 16:54:34.848 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-03 16:54:34.850 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-03 16:54:34.850 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-03 16:54:34.851 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-03 16:54:34.851 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-03 16:54:34.851 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-03 16:54:34.852 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-03 16:54:34.852 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-03 16:54:34.852 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-03 16:54:34.853 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-03 16:54:34.855 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-03 16:54:34.855 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-03 16:54:34.856 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-03 16:54:34.856 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-03 16:54:34.857 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-03 16:54:34.858 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-03 16:54:34.859 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@44492c06
[DEBUG] 2022-07-03 16:54:34.861 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cdfa824
[DEBUG] 2022-07-03 16:54:34.861 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-03 16:54:34.862 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-03 16:54:34.862 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-03 16:54:34.863 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-03 16:54:34.864 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-03 16:54:34.865 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-03 16:54:34.867 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-03 16:54:34.867 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-03 16:54:34.868 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-03 16:54:34.868 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-03 16:54:34.868 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-03 16:54:34.869 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-03 16:54:34.870 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-03 16:54:34.871 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-03 16:54:34.873 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-03 16:54:34.873 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-03 16:54:34.874 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-03 16:54:34.874 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-03 16:54:34.875 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-03 16:54:34.875 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-03 16:54:34.879 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-03 16:54:34.882 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-03 16:54:34.883 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-03 16:54:34.883 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-03 16:54:34.883 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-03 16:54:34.886 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e4ac598
[DEBUG] 2022-07-03 16:54:34.887 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-03 16:54:34.891 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-03 16:54:34.892 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-03 16:54:34.893 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@250a946
[DEBUG] 2022-07-03 16:54:34.894 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@10f20d38
[DEBUG] 2022-07-03 16:54:34.896 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-03 16:54:34.897 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-03 16:54:34.898 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-03 16:54:34.900 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-03 16:54:34.901 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-03 16:54:34.902 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-03 16:54:34.903 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-03 16:54:34.903 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-03 16:54:34.903 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-03 16:54:34.907 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-03 16:54:34.908 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f9f8d23
[DEBUG] 2022-07-03 16:54:34.910 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-03 16:54:34.910 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-03 16:54:34.911 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-03 16:54:34.911 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-03 16:54:34.911 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-03 16:54:34.911 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-03 16:54:34.912 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@478530cb
[DEBUG] 2022-07-03 16:54:34.913 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@269308cc
[DEBUG] 2022-07-03 16:54:34.914 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-03 16:54:34.914 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-03 16:54:34.914 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-03 16:54:34.915 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-03 16:54:34.916 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-03 16:54:34.916 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-03 16:54:34.917 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@54daf8f9
[DEBUG] 2022-07-03 16:54:34.917 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@11228bee
[DEBUG] 2022-07-03 16:54:34.919 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-03 16:54:34.919 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-03 16:54:34.920 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d8e4250
[DEBUG] 2022-07-03 16:54:34.920 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-03 16:54:34.920 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-03 16:54:34.921 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-03 16:54:34.924 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-03 16:54:34.925 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11cadb32
[DEBUG] 2022-07-03 16:54:34.925 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37986daf
[DEBUG] 2022-07-03 16:54:34.927 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@324e8baa
[DEBUG] 2022-07-03 16:54:34.934 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-03 16:54:34.934 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-03 16:54:34.935 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[DEBUG] 2022-07-03 16:54:34.937 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3cbfdf5c
[DEBUG] 2022-07-03 16:54:34.938 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-03 16:54:34.938 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-03 16:54:34.938 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-03 16:54:34.938 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-03 16:54:34.939 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-03 16:54:34.939 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[INFO ] 2022-07-03 16:54:35.004 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-03 16:54:35.111 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-03 16:54:35.135 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-03 16:54:35.142 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-03 16:54:35.177 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@23a78c77 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-03 16:54:35.226 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a7f9d45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@772cf46b]
[DEBUG] 2022-07-03 16:54:35.492 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-03 16:54:35.494 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-03 16:54:35.495 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-03 16:54:35.495 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-03 16:54:35.496 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-03 16:54:35.496 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a7f9d45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-03 16:54:36.037 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-03 16:54:36.047 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[INFO ] 2022-07-03 16:54:36.049 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-03 16:54:37.452 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-03 16:54:38.387 [Test worker] GetUserMileage - Started GetUserMileage in 6.635 seconds (JVM running for 9.257)
[INFO ] 2022-07-03 16:54:38.860 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-03 16:54:38.871 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[DEBUG] 2022-07-03 16:54:38.871 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6b461fee] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-03 16:54:38.875 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-03 16:54:38.888 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-04 10:19:28.995 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-04 10:19:29.009 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-04 10:19:29.015 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-04 10:19:29.189 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-04 10:19:29.278 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-04 10:19:29.294 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@84487f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bfc14b9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@fb6097b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2dfe5525, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a9b9909, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55d9b8f0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a518813, org.springframework.test.context.event.EventPublishingTestExecutionListener@43d38654, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@710d89e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d75e7af]
[INFO ] 2022-07-04 10:19:29.873 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 93410 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-04 10:19:29.888 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-04 10:19:31.053 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-04 10:19:31.191 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-04 10:19:32.195 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-04 10:19:32.254 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-04 10:19:32.460 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-04 10:19:32.488 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:19:32.488 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:19:32.491 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:19:32.495 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1de85972
[DEBUG] 2022-07-04 10:19:32.498 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5cbe95b1
[DEBUG] 2022-07-04 10:19:32.500 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6210666c
[DEBUG] 2022-07-04 10:19:32.501 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:19:32.501 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:19:32.501 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:19:32.502 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:19:32.504 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:19:32.504 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:19:32.506 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:19:32.507 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:19:32.507 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:19:32.508 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:19:32.508 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:19:32.509 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:19:32.513 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:19:32.513 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:19:32.513 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:19:32.514 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:19:32.514 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:19:32.514 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:19:32.515 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:19:32.515 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:19:32.517 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:19:32.518 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-04 10:19:32.519 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-04 10:19:32.519 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-04 10:19:32.520 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-04 10:19:32.521 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-04 10:19:32.521 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-04 10:19:32.523 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@44492c06
[DEBUG] 2022-07-04 10:19:32.525 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cdfa824
[DEBUG] 2022-07-04 10:19:32.525 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-04 10:19:32.525 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-04 10:19:32.526 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-04 10:19:32.527 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-04 10:19:32.528 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-04 10:19:32.528 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-04 10:19:32.530 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-04 10:19:32.531 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-04 10:19:32.532 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-04 10:19:32.532 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-04 10:19:32.533 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-04 10:19:32.534 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-04 10:19:32.535 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-04 10:19:32.536 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-04 10:19:32.538 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-04 10:19:32.539 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-04 10:19:32.540 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-04 10:19:32.540 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-04 10:19:32.541 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-04 10:19:32.541 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-04 10:19:32.545 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-04 10:19:32.548 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-04 10:19:32.550 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:19:32.550 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:19:32.551 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:19:32.553 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e4ac598
[DEBUG] 2022-07-04 10:19:32.558 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:19:32.561 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:19:32.563 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:19:32.564 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@250a946
[DEBUG] 2022-07-04 10:19:32.565 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@10f20d38
[DEBUG] 2022-07-04 10:19:32.567 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-04 10:19:32.568 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-04 10:19:32.569 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-04 10:19:32.572 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-04 10:19:32.573 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-04 10:19:32.574 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-04 10:19:32.575 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-04 10:19:32.575 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-04 10:19:32.580 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-04 10:19:32.580 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-04 10:19:32.583 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f9f8d23
[DEBUG] 2022-07-04 10:19:32.585 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:19:32.586 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:19:32.586 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:19:32.587 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:19:32.587 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:19:32.587 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:19:32.587 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@478530cb
[DEBUG] 2022-07-04 10:19:32.589 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@269308cc
[DEBUG] 2022-07-04 10:19:32.591 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:19:32.591 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:19:32.591 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:19:32.592 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:19:32.592 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:19:32.592 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:19:32.593 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@54daf8f9
[DEBUG] 2022-07-04 10:19:32.594 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@11228bee
[DEBUG] 2022-07-04 10:19:32.595 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-04 10:19:32.595 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-04 10:19:32.595 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d8e4250
[DEBUG] 2022-07-04 10:19:32.596 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-04 10:19:32.596 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-04 10:19:32.597 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-04 10:19:32.599 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-04 10:19:32.600 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11cadb32
[DEBUG] 2022-07-04 10:19:32.601 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37986daf
[DEBUG] 2022-07-04 10:19:32.602 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@324e8baa
[DEBUG] 2022-07-04 10:19:32.607 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-04 10:19:32.607 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-04 10:19:32.607 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[DEBUG] 2022-07-04 10:19:32.608 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3cbfdf5c
[DEBUG] 2022-07-04 10:19:32.609 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-04 10:19:32.610 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-04 10:19:32.610 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-04 10:19:32.610 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-04 10:19:32.610 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-04 10:19:32.610 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[INFO ] 2022-07-04 10:19:32.678 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-04 10:19:32.783 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-04 10:19:32.801 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-04 10:19:32.809 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-04 10:19:32.842 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@23a78c77 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-04 10:19:32.896 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a7f9d45] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@772cf46b]
[DEBUG] 2022-07-04 10:19:33.191 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-04 10:19:33.194 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-04 10:19:33.195 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-04 10:19:33.195 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-04 10:19:33.196 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-04 10:19:33.197 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7a7f9d45] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-04 10:19:33.766 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-04 10:19:33.775 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[INFO ] 2022-07-04 10:19:33.801 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-04 10:19:35.211 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-04 10:19:36.162 [Test worker] GetUserMileage - Started GetUserMileage in 6.806 seconds (JVM running for 9.392)
[INFO ] 2022-07-04 10:19:36.706 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-04 10:19:36.714 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[DEBUG] 2022-07-04 10:19:36.715 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5275a481] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-04 10:19:36.719 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-04 10:19:36.733 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
[INFO ] 2022-07-04 10:20:54.414 [Test worker] SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest], using SpringBootContextLoader
[INFO ] 2022-07-04 10:20:54.429 [Test worker] AbstractContextLoader - Could not detect default resource locations for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: no resource found for suffixes {-context.xml, Context.groovy}.
[INFO ] 2022-07-04 10:20:54.435 [Test worker] AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.triple.travelerclubmileage.model.user.GetUserMileageTest]: GetUserMileage does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
[INFO ] 2022-07-04 10:20:54.602 [Test worker] SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.triple.travelerclubmileage.TravelerClubMileageApplication for test class com.triple.travelerclubmileage.model.user.GetUserMileageTest
[INFO ] 2022-07-04 10:20:54.682 [Test worker] SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
[INFO ] 2022-07-04 10:20:54.696 [Test worker] SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@84487f4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@bfc14b9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@fb6097b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2dfe5525, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1290c49, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6a9b9909, org.springframework.test.context.transaction.TransactionalTestExecutionListener@55d9b8f0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@a518813, org.springframework.test.context.event.EventPublishingTestExecutionListener@43d38654, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@75361cf6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6d303498, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6ba7383d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3419e23b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@710d89e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d75e7af]
[INFO ] 2022-07-04 10:20:55.250 [Test worker] GetUserMileage - Starting GetUserMileage using Java 11.0.14 on PCs-MacBook-Pro.local with PID 93458 (started by baeseoeun in /Users/baeseoeun/workspace/traveler-club-mileage)
[INFO ] 2022-07-04 10:20:55.261 [Test worker] GetUserMileage - No active profile set, falling back to 1 default profile: "default"
[INFO ] 2022-07-04 10:20:56.370 [Test worker] RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
[INFO ] 2022-07-04 10:20:56.506 [Test worker] RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
[INFO ] 2022-07-04 10:20:57.527 [Test worker] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
[INFO ] 2022-07-04 10:20:57.586 [Test worker] Version - HHH000412: Hibernate ORM core version 5.6.9.Final
[INFO ] 2022-07-04 10:20:57.769 [Test worker] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
[DEBUG] 2022-07-04 10:20:57.794 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:20:57.795 [Test worker] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:20:57.799 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4cb4c4cc
[DEBUG] 2022-07-04 10:20:57.803 [Test worker] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1de85972
[DEBUG] 2022-07-04 10:20:57.804 [Test worker] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5cbe95b1
[DEBUG] 2022-07-04 10:20:57.805 [Test worker] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6210666c
[DEBUG] 2022-07-04 10:20:57.806 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:20:57.807 [Test worker] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:20:57.807 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@65af05b2
[DEBUG] 2022-07-04 10:20:57.808 [Test worker] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:20:57.809 [Test worker] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:20:57.810 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@70485aa
[DEBUG] 2022-07-04 10:20:57.812 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:20:57.813 [Test worker] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:20:57.813 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@74bbc273
[DEBUG] 2022-07-04 10:20:57.814 [Test worker] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:20:57.814 [Test worker] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:20:57.815 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e541ef9
[DEBUG] 2022-07-04 10:20:57.818 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:20:57.819 [Test worker] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:20:57.819 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@550fa96f
[DEBUG] 2022-07-04 10:20:57.820 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:20:57.820 [Test worker] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:20:57.820 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6253e59a
[DEBUG] 2022-07-04 10:20:57.821 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:20:57.821 [Test worker] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:20:57.824 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5613247e
[DEBUG] 2022-07-04 10:20:57.825 [Test worker] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-04 10:20:57.825 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@685e6a68
[DEBUG] 2022-07-04 10:20:57.826 [Test worker] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-04 10:20:57.827 [Test worker] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@194224ca
[DEBUG] 2022-07-04 10:20:57.828 [Test worker] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-04 10:20:57.828 [Test worker] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@74bdfa0b
[DEBUG] 2022-07-04 10:20:57.830 [Test worker] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@44492c06
[DEBUG] 2022-07-04 10:20:57.832 [Test worker] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@7cdfa824
[DEBUG] 2022-07-04 10:20:57.832 [Test worker] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-04 10:20:57.833 [Test worker] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2f99d8c
[DEBUG] 2022-07-04 10:20:57.833 [Test worker] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-04 10:20:57.834 [Test worker] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4ffa7041
[DEBUG] 2022-07-04 10:20:57.835 [Test worker] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-04 10:20:57.835 [Test worker] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1d8be7b9
[DEBUG] 2022-07-04 10:20:57.838 [Test worker] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-04 10:20:57.839 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3de8f85c
[DEBUG] 2022-07-04 10:20:57.840 [Test worker] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-04 10:20:57.840 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1d3a03fe
[DEBUG] 2022-07-04 10:20:57.841 [Test worker] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-04 10:20:57.842 [Test worker] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4809c771
[DEBUG] 2022-07-04 10:20:57.843 [Test worker] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-04 10:20:57.845 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@1857fe6c
[DEBUG] 2022-07-04 10:20:57.847 [Test worker] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-04 10:20:57.847 [Test worker] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@18dac12f
[DEBUG] 2022-07-04 10:20:57.850 [Test worker] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-04 10:20:57.851 [Test worker] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@9f1ca74
[DEBUG] 2022-07-04 10:20:57.853 [Test worker] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-04 10:20:57.853 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@7ee12d58
[DEBUG] 2022-07-04 10:20:57.859 [Test worker] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-04 10:20:57.860 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4f7bb8df
[DEBUG] 2022-07-04 10:20:57.862 [Test worker] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:20:57.863 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:20:57.863 [Test worker] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7717b4a0
[DEBUG] 2022-07-04 10:20:57.866 [Test worker] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7e4ac598
[DEBUG] 2022-07-04 10:20:57.867 [Test worker] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:20:57.868 [Test worker] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:20:57.869 [Test worker] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6141647f
[DEBUG] 2022-07-04 10:20:57.870 [Test worker] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@250a946
[DEBUG] 2022-07-04 10:20:57.872 [Test worker] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@10f20d38
[DEBUG] 2022-07-04 10:20:57.874 [Test worker] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-04 10:20:57.874 [Test worker] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@48106381
[DEBUG] 2022-07-04 10:20:57.875 [Test worker] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-04 10:20:57.878 [Test worker] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6c2883b1
[DEBUG] 2022-07-04 10:20:57.880 [Test worker] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-04 10:20:57.881 [Test worker] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1073c664
[DEBUG] 2022-07-04 10:20:57.881 [Test worker] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-04 10:20:57.881 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1e6d30c0
[DEBUG] 2022-07-04 10:20:57.882 [Test worker] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-04 10:20:57.886 [Test worker] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@24fc2c80
[DEBUG] 2022-07-04 10:20:57.889 [Test worker] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3f9f8d23
[DEBUG] 2022-07-04 10:20:57.892 [Test worker] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:20:57.892 [Test worker] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:20:57.893 [Test worker] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@4404a6b
[DEBUG] 2022-07-04 10:20:57.893 [Test worker] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:20:57.893 [Test worker] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:20:57.894 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@652b3733
[DEBUG] 2022-07-04 10:20:57.894 [Test worker] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@478530cb
[DEBUG] 2022-07-04 10:20:57.896 [Test worker] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@269308cc
[DEBUG] 2022-07-04 10:20:57.897 [Test worker] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:20:57.897 [Test worker] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:20:57.897 [Test worker] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@23321be7
[DEBUG] 2022-07-04 10:20:57.898 [Test worker] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:20:57.898 [Test worker] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:20:57.898 [Test worker] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@2ecdf528
[DEBUG] 2022-07-04 10:20:57.900 [Test worker] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@54daf8f9
[DEBUG] 2022-07-04 10:20:57.901 [Test worker] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@11228bee
[DEBUG] 2022-07-04 10:20:57.902 [Test worker] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-04 10:20:57.902 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7a1ddbf1
[DEBUG] 2022-07-04 10:20:57.902 [Test worker] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d8e4250
[DEBUG] 2022-07-04 10:20:57.903 [Test worker] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-04 10:20:57.903 [Test worker] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@596afb2f
[DEBUG] 2022-07-04 10:20:57.904 [Test worker] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-04 10:20:57.906 [Test worker] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@727453a3
[DEBUG] 2022-07-04 10:20:57.907 [Test worker] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@11cadb32
[DEBUG] 2022-07-04 10:20:57.908 [Test worker] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@37986daf
[DEBUG] 2022-07-04 10:20:57.909 [Test worker] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@324e8baa
[DEBUG] 2022-07-04 10:20:57.914 [Test worker] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-04 10:20:57.914 [Test worker] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7283877
[DEBUG] 2022-07-04 10:20:57.915 [Test worker] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3e2c4d4b
[DEBUG] 2022-07-04 10:20:57.916 [Test worker] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3cbfdf5c
[DEBUG] 2022-07-04 10:20:57.917 [Test worker] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4d825dbe
[DEBUG] 2022-07-04 10:20:57.918 [Test worker] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@11180750
[DEBUG] 2022-07-04 10:20:57.918 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@210635fd
[DEBUG] 2022-07-04 10:20:57.918 [Test worker] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@63814bbe
[DEBUG] 2022-07-04 10:20:57.918 [Test worker] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3cb195dd
[DEBUG] 2022-07-04 10:20:57.918 [Test worker] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6dc2279c
[INFO ] 2022-07-04 10:20:57.977 [Test worker] HikariDataSource - HikariPool-1 - Starting...
[INFO ] 2022-07-04 10:20:58.074 [Test worker] HikariDataSource - HikariPool-1 - Start completed.
[INFO ] 2022-07-04 10:20:58.093 [Test worker] Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
[WARN ] 2022-07-04 10:20:58.099 [Test worker] H2Dialect - HHH000431: Unable to determine H2 database version, certain features may not work
[WARN ] 2022-07-04 10:20:58.135 [Test worker] ProxyConnection - HikariPool-1 - Connection org.postgresql.jdbc.PgConnection@23a78c77 marked as broken because of SQLSTATE(0A000), ErrorCode(0)
java.sql.SQLFeatureNotSupportedException: Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
	at org.postgresql.Driver.notImplemented(Driver.java:699) ~[postgresql-42.4.0.jar:42.4.0]
	at org.postgresql.jdbc.PgConnection.createClob(PgConnection.java:1347) ~[postgresql-42.4.0.jar:42.4.0]
	at com.zaxxer.hikari.pool.HikariProxyConnection.createClob(HikariProxyConnection.java) ~[HikariCP-4.0.3.jar:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.useContextualLobCreation(LobCreatorBuilderImpl.java:121) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:56) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) ~[hibernate-core-5.6.9.Final.jar:5.6.9.Final]
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:409) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:396) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341) ~[spring-orm-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1863) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:620) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:908) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.21.jar:5.3.21]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:734) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308) ~[spring-boot-2.7.1.jar:2.7.1]
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:132) ~[spring-boot-test-2.7.1.jar:2.7.1]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:124) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:248) ~[spring-test-5.3.21.jar:5.3.21]
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:138) ~[spring-test-5.3.21.jar:5.3.21]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$8(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:368) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$9(ClassBasedTestDescriptor.java:363) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195) ~[?:?]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) ~[?:?]
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655) ~[?:?]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484) ~[?:?]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474) ~[?:?]
	at java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:312) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735) ~[?:?]
	at java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734) ~[?:?]
	at java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:362) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$6(ClassBasedTestDescriptor.java:283) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:282) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$4(ClassBasedTestDescriptor.java:272) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at java.util.Optional.orElseGet(Optional.java:369) ~[?:?]
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:271) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$0(TestMethodTestDescriptor.java:102) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:101) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:66) ~[junit-jupiter-engine-5.8.2.jar:5.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:123) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:90) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at java.util.ArrayList.forEach(ArrayList.java:1541) ~[?:?]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54) ~[junit-platform-engine-1.8.2.jar:1.8.2]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67) ~[?:?]
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96) ~[?:?]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79) ~[?:?]
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75) ~[?:?]
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:?]
	at jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]
	at java.lang.reflect.Method.invoke(Method.java:566) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36) ~[?:?]
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24) ~[?:?]
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33) ~[?:?]
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94) ~[?:?]
	at com.sun.proxy.$Proxy2.stop(Unknown Source) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100) ~[?:?]
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60) ~[?:?]
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133) ~[?:?]
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71) ~[?:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69) ~[gradle-worker.jar:?]
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74) ~[gradle-worker.jar:?]
[DEBUG] 2022-07-04 10:20:58.196 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b98355f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@949d347]
[DEBUG] 2022-07-04 10:20:58.487 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventActionType
[DEBUG] 2022-07-04 10:20:58.490 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.event.entity.Event$EventTargetType
[DEBUG] 2022-07-04 10:20:58.491 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.photo.entity.Photo$PhotoType
[DEBUG] 2022-07-04 10:20:58.491 [Test worker] EnumType - Using ORDINAL-based conversion for Enum com.triple.travelerclubmileage.model.place.entity.Place$PlaceType
[DEBUG] 2022-07-04 10:20:58.492 [Test worker] EnumType - Using NAMED-based conversion for Enum com.triple.travelerclubmileage.model.user.entity.User$UserRole
[DEBUG] 2022-07-04 10:20:58.493 [Test worker] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b98355f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-04 10:20:59.055 [Test worker] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2022-07-04 10:20:59.121 [Test worker] TypeConfiguration$Scope - Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[INFO ] 2022-07-04 10:20:59.135 [Test worker] LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
[WARN ] 2022-07-04 10:21:00.492 [Test worker] JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
[INFO ] 2022-07-04 10:21:01.425 [Test worker] GetUserMileage - Started GetUserMileage in 6.674 seconds (JVM running for 9.093)
[INFO ] 2022-07-04 10:21:01.887 [SpringApplicationShutdownHook] LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
[TRACE] 2022-07-04 10:21:01.895 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Handling #sessionFactoryClosed from [org.hibernate.internal.SessionFactoryImpl@1ab28416] for TypeConfiguration
[DEBUG] 2022-07-04 10:21:01.896 [SpringApplicationShutdownHook] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@24aaa070] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1ab28416]
[INFO ] 2022-07-04 10:21:01.900 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown initiated...
[INFO ] 2022-07-04 10:21:01.915 [SpringApplicationShutdownHook] HikariDataSource - HikariPool-1 - Shutdown completed.
